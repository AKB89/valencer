define({ "api": [  {    "type": "get",    "url": "/annoSet/:id",    "title": "GetAnnoSet",    "version": "4.0.0",    "name": "GetAnnoSet",    "group": "AnnotationSet",    "description": "<p>Get AnnotationSet with id. Returns at most one document and throws an error if not found</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/annoSet/2614616\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "AnnotationSet",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence",            "description": "<p>The Sentence id</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "labels",            "description": "<p>The list of labels ObjectID</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidParams",            "description": "<p>The specified <code>id</code> is empty, null, undefined, or is specified but is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/annoSet/:id",    "title": "GetAnnoSet",    "version": "3.0.0",    "name": "GetAnnoSet",    "group": "AnnotationSet",    "description": "<p>Get AnnotationSet with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/annoSet/123?populate=true",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "AnnotationSet",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "lexUnit",            "description": "<p>The LexUnit</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit._id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "lexUnit.frame",            "description": "<p>The LexUnit Frame</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame._id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnit.frame.lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame.lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnit.frame.frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame.frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "sentence",            "description": "<p>The Sentence</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence._id",            "description": "<p>The Sentence id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "sentence.name",            "description": "<p>The Sentence name</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.sentenceNumber",            "description": "<p>The Sentence number</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.paragraphNumber",            "description": "<p>The Sentence paragraph number</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.aPos",            "description": "<p>The Sentence a-positional value</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern",            "description": "<p>The Pattern</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern._id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "pattern.valenceUnits",            "description": "<p>The Pattern ValenceUnits</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern.valenceUnits._id",            "description": "<p>The Pattern ValenceUnits ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.FE",            "description": "<p>The Pattern ValenceUnits frame elements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.PT",            "description": "<p>The Pattern ValenceUnits phrase types</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.GF",            "description": "<p>The Pattern ValenceUnits grammatical functions</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "labels",            "description": "<p>The Labels</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "labels._id",            "description": "<p>The Labels ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "labels.name",            "description": "<p>The Labels names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "labels.type",            "description": "<p>The Labels types</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "labels.startPos",            "description": "<p>The Labels start positions</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "labels.endPos",            "description": "<p>The Labels end positions</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/annoSet/:id",    "title": "GetAnnoSet",    "version": "2.0.0",    "name": "GetAnnoSet",    "group": "AnnotationSet",    "description": "<p>Get AnnotationSet with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/annoSet/123?populate=true",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "AnnotationSet",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "lexUnit",            "description": "<p>The LexUnit</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit._id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "lexUnit.frame",            "description": "<p>The LexUnit Frame</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame._id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnit.frame.lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame.lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnit.frame.frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame.frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "sentence",            "description": "<p>The Sentence</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence._id",            "description": "<p>The Sentence id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "sentence.name",            "description": "<p>The Sentence name</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.sentenceNumber",            "description": "<p>The Sentence number</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.paragraphNumber",            "description": "<p>The Sentence paragraph number</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.aPos",            "description": "<p>The Sentence a-positional value</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern",            "description": "<p>The Pattern</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern._id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "pattern.valenceUnits",            "description": "<p>The Pattern ValenceUnits</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern.valenceUnits._id",            "description": "<p>The Pattern ValenceUnits ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.FE",            "description": "<p>The Pattern ValenceUnits frame elements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.PT",            "description": "<p>The Pattern ValenceUnits phrase types</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.GF",            "description": "<p>The Pattern ValenceUnits grammatical functions</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "labels",            "description": "<p>The Labels</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "labels._id",            "description": "<p>The Labels ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "labels.name",            "description": "<p>The Labels names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "labels.type",            "description": "<p>The Labels types</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "labels.startPos",            "description": "<p>The Labels start positions</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "labels.endPos",            "description": "<p>The Labels end positions</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/annoSet/:id",    "title": "GetAnnoSet",    "version": "1.0.0",    "name": "GetAnnoSet",    "group": "AnnotationSet",    "description": "<p>Get AnnotationSet with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/annoSet/123?populate=true",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "AnnotationSet",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "lexUnit",            "description": "<p>The LexUnit</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit._id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "lexUnit.frame",            "description": "<p>The LexUnit Frame</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame._id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnit.frame.lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame.lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnit.frame.frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit.frame.frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.frame.frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.frame.frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnit.cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnit.lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "sentence",            "description": "<p>The Sentence</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence._id",            "description": "<p>The Sentence id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "sentence.name",            "description": "<p>The Sentence name</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.sentenceNumber",            "description": "<p>The Sentence number</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.paragraphNumber",            "description": "<p>The Sentence paragraph number</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence.aPos",            "description": "<p>The Sentence a-positional value</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern",            "description": "<p>The Pattern</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern._id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "pattern.valenceUnits",            "description": "<p>The Pattern ValenceUnits</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern.valenceUnits._id",            "description": "<p>The Pattern ValenceUnits ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.FE",            "description": "<p>The Pattern ValenceUnits frame elements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.PT",            "description": "<p>The Pattern ValenceUnits phrase types</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pattern.valenceUnits.GF",            "description": "<p>The Pattern ValenceUnits grammatical functions</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "labels",            "description": "<p>The Labels</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "labels._id",            "description": "<p>The Labels ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "labels.name",            "description": "<p>The Labels names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "labels.type",            "description": "<p>The Labels types</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "labels.startPos",            "description": "<p>The Labels start positions</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "labels.endPos",            "description": "<p>The Labels end positions</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/annoSets",    "title": "GetAnnoSets",    "version": "4.0.0",    "name": "GetAnnoSets",    "group": "AnnotationSet",    "description": "<p>Get all AnnotationSets with pattern matching input vp. Returns an empty array if no match is found</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/annoSets?vp=Donor.NP.Ext+Theme.NP.Obj\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "AnnotationSet",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence",            "description": "<p>The Sentence id</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "pattern",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "labels",            "description": "<p>The list of labels ObjectID</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>At least one valence unit composing the input vp was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The <code>vp</code> parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units; the <code>strictVUMatching</code> parameter is neither <code>true</code> nor <code>false</code>; the <code>withExtraCoreFEs</code> parameter is neither <code>true</code> nor <code>false</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/annoSets",    "title": "GetAnnoSets",    "version": "3.0.0",    "name": "GetAnnoSets",    "group": "AnnotationSet",    "description": "<p>Get all AnnotationSets with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/annoSets?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "AnnotationSet",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence",            "description": "<p>The Sentence id</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "labels",            "description": "<p>The list of labels ObjectID</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/annoSets",    "title": "GetAnnoSets",    "version": "2.0.0",    "name": "GetAnnoSets",    "group": "AnnotationSet",    "description": "<p>Get all AnnotationSets with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/annoSets?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "AnnotationSet",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence",            "description": "<p>The Sentence id</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "labels",            "description": "<p>The list of labels ObjectID</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/annoSets",    "title": "GetAnnoSets",    "version": "1.0.0",    "name": "GetAnnoSets",    "group": "AnnotationSet",    "description": "<p>Get all AnnotationSets with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/annoSets?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "AnnotationSet",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The AnnotationSet id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnit",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "sentence",            "description": "<p>The Sentence id</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "labels",            "description": "<p>The list of labels ObjectID</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/frame/:id",    "title": "GetFrame",    "version": "4.0.0",    "name": "GetFrame",    "group": "Frame",    "description": "<p>Get Frame with id. Returns at most one document and throws an error if not found</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The Frame id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/frame/42\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "Frame",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnits",            "description": "<p>The Frame LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements",            "description": "<p>The Frame FrameElements ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidParams",            "description": "<p>The specified <code>id</code> is empty, null, undefined, or is specified but is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/frame/:id",    "title": "GetFrame",    "version": "3.0.0",    "name": "GetFrame",    "group": "Frame",    "description": "<p>Get Frame with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/frame/123?populate=true",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Frame",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/frame/:id",    "title": "GetFrame",    "version": "2.0.0",    "name": "GetFrame",    "group": "Frame",    "description": "<p>Get Frame with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/frame/123?populate=true",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Frame",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/frame/:id",    "title": "GetFrame",    "version": "1.0.0",    "name": "GetFrame",    "group": "Frame",    "description": "<p>Get Frame with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/frame/123?populate=true",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Frame",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/frames",    "title": "GetFrames",    "version": "4.0.0",    "name": "GetFrames",    "group": "Frame",    "description": "<p>Get all Frames with pattern matching input vp. Returns an empty array if no match is found</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/frames?vp=Donor.NP.Ext+Theme.NP.Obj\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "Frame",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnits",            "description": "<p>The Frame LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements",            "description": "<p>The Frame FrameElements ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>At least one valence unit composing the input vp was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The <code>vp</code> parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units; the <code>strictVUMatching</code> parameter is neither <code>true</code> nor <code>false</code>; the <code>withExtraCoreFEs</code> parameter is neither <code>true</code> nor <code>false</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/frames",    "title": "GetFrames",    "version": "3.0.0",    "name": "GetFrames",    "group": "Frame",    "description": "<p>Get all Frames with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/frames?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Frame",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnits",            "description": "<p>The Frame LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements",            "description": "<p>The Frame FrameElements ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/frames",    "title": "GetFrames",    "version": "2.0.0",    "name": "GetFrames",    "group": "Frame",    "description": "<p>Get all Frames with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/frames?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Frame",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnits",            "description": "<p>The Frame LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements",            "description": "<p>The Frame FrameElements ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/frames",    "title": "GetFrames",    "version": "1.0.0",    "name": "GetFrames",    "group": "Frame",    "description": "<p>Get all Frames with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/frames?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Frame",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexUnits",            "description": "<p>The Frame LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frameElements",            "description": "<p>The Frame FrameElements ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/lexUnit/:id",    "title": "GetLexUnit",    "version": "4.0.0",    "name": "GetLexUnit",    "group": "LexUnit",    "description": "<p>Get LexUnit with id. Returns at most one document and throws an error if not found</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/lexUnit/42\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "LexUnit",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame",            "description": "<p>The LexUnit Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidParams",            "description": "<p>The specified <code>id</code> is empty, null, undefined, or is specified but is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/lexUnit/:id",    "title": "GetLexUnit",    "version": "3.0.0",    "name": "GetLexUnit",    "group": "LexUnit",    "description": "<p>Get LexUnit with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/lexUnit/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "LexUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "frame",            "description": "<p>The LexUnit Frame</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame._id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frame.lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame.lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frame.frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame.frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/lexUnit/:id",    "title": "GetLexUnit",    "version": "2.0.0",    "name": "GetLexUnit",    "group": "LexUnit",    "description": "<p>Get LexUnit with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/lexUnit/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "LexUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "frame",            "description": "<p>The LexUnit Frame</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame._id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frame.lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame.lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frame.frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame.frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/lexUnit/:id",    "title": "GetLexUnit",    "version": "1.0.0",    "name": "GetLexUnit",    "group": "LexUnit",    "description": "<p>Get LexUnit with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/lexUnit/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "LexUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "frame",            "description": "<p>The LexUnit Frame</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame._id",            "description": "<p>The Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.name",            "description": "<p>The Frame name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.definition",            "description": "<p>The Frame definition</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.cDate",            "description": "<p>The Frame creation date</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.cBy",            "description": "<p>The Frame annotator</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.semTypes",            "description": "<p>The Frame SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frame.lexUnits",            "description": "<p>The Frame LexUnits</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame.lexUnits._id",            "description": "<p>The LexUnits ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.lexUnits.name",            "description": "<p>The LexUnits names</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.feCoreSets",            "description": "<p>The Frame minimal set of core FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "frame.frameElements",            "description": "<p>The Frame FrameElements</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame.frameElements._id",            "description": "<p>The FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.name",            "description": "<p>The FrameElements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.definition",            "description": "<p>The FrameElements definitions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.coreType",            "description": "<p>The FrameElements coreTypes</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.cDate",            "description": "<p>The FrameElements creation dates</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.cBy",            "description": "<p>The FrameElements annotators</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "frame.frameElements.abbrev",            "description": "<p>The FrameElements abbreviations</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.semTypes",            "description": "<p>The FrameElements SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.excludes",            "description": "<p>The excluded FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "frame.frameElements.requires",            "description": "<p>The required FrameElements ids</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/lexUnits",    "title": "GetLexUnits",    "version": "4.0.0",    "name": "GetLexUnits",    "group": "LexUnit",    "description": "<p>Get all LexUnits with pattern matching input vp. Returns an empty array if no match is found</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/lexUnits?vp=Donor.NP.Ext+Theme.NP.Obj\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "LexUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame",            "description": "<p>The LexUnit Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>At least one valence unit composing the input vp was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The <code>vp</code> parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units; the <code>strictVUMatching</code> parameter is neither <code>true</code> nor <code>false</code>; the <code>withExtraCoreFEs</code> parameter is neither <code>true</code> nor <code>false</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/lexUnits",    "title": "GetLexUnits",    "version": "3.0.0",    "name": "GetLexUnits",    "group": "LexUnit",    "description": "<p>Get all LexUnits with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/lexUnits?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "LexUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame",            "description": "<p>The LexUnit Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/lexUnits",    "title": "GetLexUnits",    "version": "2.0.0",    "name": "GetLexUnits",    "group": "LexUnit",    "description": "<p>Get all LexUnits with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/lexUnits?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "LexUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame",            "description": "<p>The LexUnit Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/lexUnits",    "title": "GetLexUnits",    "version": "1.0.0",    "name": "GetLexUnits",    "group": "LexUnit",    "description": "<p>Get all LexUnits with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/lexUnits?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "LexUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "_id",            "description": "<p>The LexUnit id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The LexUnit name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "pos",            "description": "<p>The LexUnit part of speech</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "definition",            "description": "<p>The LexUnit definition</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "lemmaID",            "description": "<p>The LexUnit lemmaID</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "frame",            "description": "<p>The LexUnit Frame id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "status",            "description": "<p>The LexUnit status</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cBy",            "description": "<p>The LexUnit annotator</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "cDate",            "description": "<p>The LexUnit creation date</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "semTypes",            "description": "<p>The LexUnit SemTypes ids</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "lexemes",            "description": "<p>The LexUnit Lexemes ids</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/pattern/:id",    "title": "GetPattern",    "version": "4.0.0",    "name": "GetPattern",    "group": "Pattern",    "description": "<p>Get Pattern with id. Returns at most one document and throws an error if not found</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/pattern/595bacfcb062ee3a400e81e2\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "Pattern",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "valenceUnits",            "description": "<p>The Pattern ValenceUnits ObjectIDs</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidParams",            "description": "<p>The specified <code>id</code> is empty, null, undefined, or is specified but is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/pattern/:id",    "title": "GetPattern",    "version": "3.0.0",    "name": "GetPattern",    "group": "Pattern",    "description": "<p>Get Pattern with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/pattern/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Pattern",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "valenceUnits",            "description": "<p>The Pattern ValenceUnits</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "valenceUnits._id",            "description": "<p>The ValenceUnits ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.FE",            "description": "<p>The ValenceUnits frame elements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.PT",            "description": "<p>The ValenceUnits phrase types</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.GF",            "description": "<p>The ValenceUnits grammatical functions</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/pattern/:id",    "title": "GetPattern",    "version": "2.0.0",    "name": "GetPattern",    "group": "Pattern",    "description": "<p>Get Pattern with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/pattern/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Pattern",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "valenceUnits",            "description": "<p>The Pattern ValenceUnits</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "valenceUnits._id",            "description": "<p>The ValenceUnits ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.FE",            "description": "<p>The ValenceUnits frame elements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.PT",            "description": "<p>The ValenceUnits phrase types</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.GF",            "description": "<p>The ValenceUnits grammatical functions</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/pattern/:id",    "title": "GetPattern",    "version": "1.0.0",    "name": "GetPattern",    "group": "Pattern",    "description": "<p>Get Pattern with id. Returns at most one document and throws an error if not found. Sample success output is given with <code>populate=true</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/pattern/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Pattern",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "valenceUnits",            "description": "<p>The Pattern ValenceUnits</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "valenceUnits._id",            "description": "<p>The ValenceUnits ObjectIDs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.FE",            "description": "<p>The ValenceUnits frame elements names</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.PT",            "description": "<p>The ValenceUnits phrase types</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "valenceUnits.GF",            "description": "<p>The ValenceUnits grammatical functions</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/patterns",    "title": "GetPatterns",    "version": "4.0.0",    "name": "GetPatterns",    "group": "Pattern",    "description": "<p>Get all Patterns with pattern matching input vp. Returns an empty array if no match is found</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/patterns?vp=Donor.NP.Ext+Theme.NP.Obj\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "Pattern",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "valenceUnits",            "description": "<p>The Pattern ValenceUnits ObjectIDs</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>At least one valence unit composing the input vp was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The <code>vp</code> parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units; the <code>strictVUMatching</code> parameter is neither <code>true</code> nor <code>false</code>; the <code>withExtraCoreFEs</code> parameter is neither <code>true</code> nor <code>false</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/patterns",    "title": "GetPatterns",    "version": "3.0.0",    "name": "GetPatterns",    "group": "Pattern",    "description": "<p>Get all Patterns with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/patterns?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Pattern",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "valenceUnits",            "description": "<p>The Pattern ValenceUnits ObjectIDs</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/patterns",    "title": "GetPatterns",    "version": "2.0.0",    "name": "GetPatterns",    "group": "Pattern",    "description": "<p>Get all Patterns with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/patterns?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Pattern",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "valenceUnits",            "description": "<p>The Pattern ValenceUnits ObjectIDs</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/patterns",    "title": "GetPatterns",    "version": "1.0.0",    "name": "GetPatterns",    "group": "Pattern",    "description": "<p>Get all Patterns with pattern matching input vp. Returns an empty array if no match is found. Sample success output is given with (default) <code>populate=false</code></p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/patterns?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "Pattern",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The Pattern ObjectID</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "valenceUnits",            "description": "<p>The Pattern ValenceUnits ObjectIDs</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/valenceUnit/:id",    "title": "GetValenceUnit",    "version": "4.0.0",    "name": "GetValenceUnit",    "group": "ValenceUnit",    "description": "<p>Get ValenceUnit with id. Returns at most one document and throws an error if not found</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "id",            "description": "<p>The ValenceUnit ObjectID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/valenceUnit/595bacfcb062ee3a400e81e0\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "ValenceUnit",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The ObjectID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "FE",            "description": "<p>The frame element name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "PT",            "description": "<p>The phrase type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "GF",            "description": "<p>The grammatical function</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidParams",            "description": "<p>The specified <code>id</code> is empty, null, undefined, or is specified but is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/valenceUnit/:id",    "title": "GetValenceUnit",    "version": "3.0.0",    "name": "GetValenceUnit",    "group": "ValenceUnit",    "description": "<p>Get ValenceUnit with id. Returns at most one document and throws an error if not found.</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/valenceUnit/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "ValenceUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The ObjectID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "FE",            "description": "<p>The frame element name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "PT",            "description": "<p>The phrase type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "GF",            "description": "<p>The grammatical function</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/valenceUnit/:id",    "title": "GetValenceUnit",    "version": "2.0.0",    "name": "GetValenceUnit",    "group": "ValenceUnit",    "description": "<p>Get ValenceUnit with id. Returns at most one document and throws an error if not found.</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/valenceUnit/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "ValenceUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The ObjectID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "FE",            "description": "<p>The frame element name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "PT",            "description": "<p>The phrase type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "GF",            "description": "<p>The grammatical function</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/valenceUnit/:id",    "title": "GetValenceUnit",    "version": "1.0.0",    "name": "GetValenceUnit",    "group": "ValenceUnit",    "description": "<p>Get ValenceUnit with id. Returns at most one document and throws an error if not found.</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/valenceUnit/123",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "ValenceUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The id</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The ObjectID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "FE",            "description": "<p>The frame element name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "PT",            "description": "<p>The phrase type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "GF",            "description": "<p>The grammatical function</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>The id was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the specified :id is neither a <code>Number</code> nor a valid <code>ObjectID</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/valenceUnits",    "title": "GetValenceUnits",    "version": "4.0.0",    "name": "GetValenceUnits",    "group": "ValenceUnit",    "description": "<p>Get all ValenceUnits with pattern matching input vp. Returns an empty array if no match is found</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vu",            "description": "<p>The ValenceUnit: a single triplet FE.PT.GF. Can be a partial triplet: FE, FE.PT, FE.GF, PT.GF, in any order: GF.FE, PT.FE, etc.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "langIsoCode",            "description": "<p>The language ISO639-1 code. Ex: 'en' for English</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "datasetVersion",            "description": "<p>The version of the FrameNet dataset, in semver format. Ex: '170' for the FrameNet 1.7 data release</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i \"http://localhost:3030/v4/en/170/valenceUnits?vu=Donor.NP.Ext\"",        "type": "json"      }    ],    "filename": "./routes.js",    "groupTitle": "ValenceUnit",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The ObjectID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "FE",            "description": "<p>The frame element name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "PT",            "description": "<p>The phrase type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "GF",            "description": "<p>The grammatical function</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>At least one valence unit composing the input vp was not found in the database</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified <code>langIsoCode</code> or <code>datasetVersion</code> is not supported; the database corresponding to the language ISO639-1 and dataset version is supported but not up and running; the specified query is empty, null or undefined</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The <code>vp</code> parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units; the <code>strictVUMatching</code> parameter is neither <code>true</code> nor <code>false</code>; the <code>withExtraCoreFEs</code> parameter is neither <code>true</code> nor <code>false</code></p>"          }        ]      }    }  },  {    "type": "get",    "url": "/valenceUnits",    "title": "GetValenceUnits",    "version": "3.0.0",    "name": "GetValenceUnits",    "group": "ValenceUnit",    "description": "<p>Get all ValenceUnits with pattern matching input vp. Returns an empty array if no match is found.</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/valenceUnits?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "ValenceUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The ObjectID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "FE",            "description": "<p>The frame element name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "PT",            "description": "<p>The phrase type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "GF",            "description": "<p>The grammatical function</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/valenceUnits",    "title": "GetValenceUnits",    "version": "2.0.0",    "name": "GetValenceUnits",    "group": "ValenceUnit",    "description": "<p>Get all ValenceUnits with pattern matching input vp. Returns an empty array if no match is found.</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/valenceUnits?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "ValenceUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "strictVUMatching",            "defaultValue": "false",            "description": "<p>Specify whether the number of valence units should match exactly. Ex: Querying for Donor.NP.Ext with strictVUMatching=true will return all patterns with only one valenceUnit</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "withExtraCoreFEs",            "defaultValue": "true",            "description": "<p>Specify whether, in cases of non-strict valence unit matching, extra Frame Elements can be core FEs.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The ObjectID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "FE",            "description": "<p>The frame element name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "PT",            "description": "<p>The phrase type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "GF",            "description": "<p>The grammatical function</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/valenceUnits",    "title": "GetValenceUnits",    "version": "1.0.0",    "name": "GetValenceUnits",    "group": "ValenceUnit",    "description": "<p>Get all ValenceUnits with pattern matching input vp. Returns an empty array if no match is found.</p>",    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost:3030/valenceUnits?vp=Donor.NP.Ext+Theme.NP.Obj",        "type": "json"      }    ],    "filename": "./_apidoc.js",    "groupTitle": "ValenceUnit",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vp",            "description": "<p>The Valence Pattern: a combination of triplets FE.PT.GF</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "populate",            "defaultValue": "false",            "description": "<p>Specify whether documents should be populated.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "_id",            "description": "<p>The ObjectID</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "FE",            "description": "<p>The frame element name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "PT",            "description": "<p>The phrase type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "GF",            "description": "<p>The grammatical function</p>"          }        ]      }    },    "error": {      "fields": {        "Error 404": [          {            "group": "Error 404",            "optional": false,            "field": "NotFoundError",            "description": "<p>A valence unit of the vp was not found</p>"          }        ],        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "InvalidQuery",            "description": "<p>The specified query is null, empty or combines :id and vp in request</p>"          },          {            "group": "Error 400",            "optional": false,            "field": "InvalidQueryParams",            "description": "<p>The populate parameter is neither <code>true</code> nor <code>false</code> or the vp parameter contains either an invalid character, an invalid sequence of characters or more than 3 tokens separated by a dot in at least one of its valence units</p>"          }        ]      }    }  }] });
