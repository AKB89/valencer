{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;AAMA;;;;;;;AAOA,OAAO,OAAP,GAAiB,WAAjB;;;;;;;;;;;AAWA,SAAS,WAAT,CAAqB,IAArB,EAA2B,GAA3B,EAAgC;AAC9B,MAAI,QAAQ,IAAZ;AACA,MAAI,IAAI,IAAI,OAAJ,CAAY,GAAZ,CAAR;;AAEA,MAAI,CAAC,CAAD,IAAM,CAAV,EAAa,OAAO,CAAC,CAAR;;AAEb,MAAI,MAAM,IAAI,KAAJ,CAAU,IAAI,CAAd,EAAiB,KAAjB,CAAuB,GAAvB,EAA4B,GAA5B,CAAgC,UAAS,KAAT,EAAe;AACvD,QAAI,QAAQ,MAAM,KAAN,CAAY,GAAZ,CAAZ;QACI,QAAQ,SAAS,MAAM,CAAN,CAAT,EAAmB,EAAnB,CADZ;QAEI,MAAM,SAAS,MAAM,CAAN,CAAT,EAAmB,EAAnB,CAFV;;;AAKA,QAAI,MAAM,KAAN,CAAJ,EAAkB;AAChB,cAAQ,OAAO,GAAf;AACA,YAAM,OAAO,CAAb;;AAED,KAJD,MAIO,IAAI,MAAM,GAAN,CAAJ,EAAgB;AACrB,cAAM,OAAO,CAAb;AACD;;;AAGD,QAAI,MAAM,OAAO,CAAjB,EAAoB,MAAM,OAAO,CAAb;;;AAGpB,QAAI,MAAM,KAAN,KACC,MAAM,GAAN,CADD,IAEC,QAAQ,GAFT,IAGC,QAAQ,CAHb,EAGgB,QAAQ,KAAR;;AAEhB,WAAO;AACL,aAAO,KADF;AAEL,WAAK;AAFA,KAAP;AAID,GA3BS,CAAV;;AA6BA,MAAI,IAAJ,GAAW,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAX;;AAEA,SAAO,QAAQ,GAAR,GAAc,CAAC,CAAtB;AACD","file":"index-compiled.js","sourcesContent":["/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser;\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @return {Array}\n * @public\n */\n\nfunction rangeParser(size, str) {\n  var valid = true;\n  var i = str.indexOf('=');\n\n  if (-1 == i) return -2;\n\n  var arr = str.slice(i + 1).split(',').map(function(range){\n    var range = range.split('-')\n      , start = parseInt(range[0], 10)\n      , end = parseInt(range[1], 10);\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end;\n      end = size - 1;\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1;\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) end = size - 1;\n\n    // invalid\n    if (isNaN(start)\n      || isNaN(end)\n      || start > end\n      || start < 0) valid = false;\n\n    return {\n      start: start,\n      end: end\n    };\n  });\n\n  arr.type = str.slice(0, i);\n\n  return valid ? arr : -1;\n}\n"]}