{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAOA;;AAEA,IAAI,cAAc,QAAQ,cAAR,CAAlB;AACA,IAAI,QAAQ,QAAQ,kBAAR,CAAZ;AACA,IAAI,QAAQ,EAAZ;AACA,IAAI,QAAQ,EAAZ;;;;;;AAMA,OAAO,OAAP,GAAiB,UAAjB;;;;;;;;;;;;AAYA,SAAS,UAAT,CAAoB,EAApB,EAAwB,GAAxB,EAA6B,IAA7B,EAAmC;AACjC,MAAI,MAAM,WAAV;MAAuB,KAAvB;MAA8B,MAA9B;;AAEA,MAAI,CAAC,GAAD,IAAQ,CAAC,IAAb,EAAmB;AACjB,QAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,aAAO,EAAP;AACD;AACD,WAAO,MAAM,GAAN,MAAe,MAAM,GAAN,IAAa,GAAG,GAAH,CAA5B,CAAP;AACD;;AAED,MAAI,WAAW,OAAO,GAAP,KAAe,QAA9B;AACA,MAAI,QAAJ,EAAc;AACZ,QAAI,CAAC,IAAL,EAAW;AACT,aAAO,MAAM,GAAN,MAAe,MAAM,GAAN,IAAa,GAAG,GAAH,CAA5B,CAAP;AACD;AACD,UAAM,GAAN;AACD,GALD,MAKO;AACL,WAAO,GAAP;AACD;;AAED,WAAS,MAAM,GAAN,CAAT;AACA,MAAI,UAAU,MAAM,OAAO,IAAb,EAAmB,IAAnB,CAAd,EAAwC;AACtC,WAAO,OAAO,KAAd;AACD;;AAED,OAAK,GAAL,EAAU,IAAV,EAAiB,QAAQ,GAAG,GAAH,EAAQ,IAAR,CAAzB;AACA,SAAO,KAAP;AACD;;AAED,SAAS,IAAT,CAAc,GAAd,EAAmB,IAAnB,EAAyB,KAAzB,EAAgC;AAC9B,QAAM,GAAN,IAAa,EAAC,OAAO,KAAR,EAAe,MAAM,IAArB,EAAb;AACD;;;;;;AAMD,OAAO,OAAP,CAAe,KAAf,GAAuB,KAAvB;AACA,OAAO,OAAP,CAAe,KAAf,GAAuB,KAAvB","file":"index-compiled.js","sourcesContent":["/*!\n * regex-cache <https://github.com/jonschlinkert/regex-cache>\n *\n * Copyright (c) 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\nvar equal = require('is-equal-shallow');\nvar basic = {};\nvar cache = {};\n\n/**\n * Expose `regexCache`\n */\n\nmodule.exports = regexCache;\n\n/**\n * Memoize the results of a call to the new RegExp constructor.\n *\n * @param  {Function} fn [description]\n * @param  {String} str [description]\n * @param  {Options} options [description]\n * @param  {Boolean} nocompare [description]\n * @return {RegExp}\n */\n\nfunction regexCache(fn, str, opts) {\n  var key = '_default_', regex, cached;\n\n  if (!str && !opts) {\n    if (typeof fn !== 'function') {\n      return fn;\n    }\n    return basic[key] || (basic[key] = fn(str));\n  }\n\n  var isString = typeof str === 'string';\n  if (isString) {\n    if (!opts) {\n      return basic[str] || (basic[str] = fn(str));\n    }\n    key = str;\n  } else {\n    opts = str;\n  }\n\n  cached = cache[key];\n  if (cached && equal(cached.opts, opts)) {\n    return cached.regex;\n  }\n\n  memo(key, opts, (regex = fn(str, opts)));\n  return regex;\n}\n\nfunction memo(key, opts, regex) {\n  cache[key] = {regex: regex, opts: opts};\n}\n\n/**\n * Expose `cache`\n */\n\nmodule.exports.cache = cache;\nmodule.exports.basic = basic;\n"]}