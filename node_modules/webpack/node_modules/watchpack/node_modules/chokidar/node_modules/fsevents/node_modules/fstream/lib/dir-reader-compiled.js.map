{"version":3,"sources":["dir-reader.js"],"names":[],"mappings":"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","file":"dir-reader-compiled.js","sourcesContent":["// A thing that emits \"entry\" events with Reader objects\n// Pausing it causes it to stop emitting entry events, and also\n// pauses the current entry if there is one.\n\nmodule.exports = DirReader\n\nvar fs = require('graceful-fs')\nvar inherits = require('inherits')\nvar path = require('path')\nvar Reader = require('./reader.js')\nvar assert = require('assert').ok\n\ninherits(DirReader, Reader)\n\nfunction DirReader (props) {\n  var self = this\n  if (!(self instanceof DirReader)) {\n    throw new Error('DirReader must be called as constructor.')\n  }\n\n  // should already be established as a Directory type\n  if (props.type !== 'Directory' || !props.Directory) {\n    throw new Error('Non-directory type ' + props.type)\n  }\n\n  self.entries = null\n  self._index = -1\n  self._paused = false\n  self._length = -1\n\n  if (props.sort) {\n    this.sort = props.sort\n  }\n\n  Reader.call(this, props)\n}\n\nDirReader.prototype._getEntries = function () {\n  var self = this\n\n  // race condition.  might pause() before calling _getEntries,\n  // and then resume, and try to get them a second time.\n  if (self._gotEntries) return\n  self._gotEntries = true\n\n  fs.readdir(self._path, function (er, entries) {\n    if (er) return self.error(er)\n\n    self.entries = entries\n\n    self.emit('entries', entries)\n    if (self._paused) self.once('resume', processEntries)\n    else processEntries()\n\n    function processEntries () {\n      self._length = self.entries.length\n      if (typeof self.sort === 'function') {\n        self.entries = self.entries.sort(self.sort.bind(self))\n      }\n      self._read()\n    }\n  })\n}\n\n// start walking the dir, and emit an \"entry\" event for each one.\nDirReader.prototype._read = function () {\n  var self = this\n\n  if (!self.entries) return self._getEntries()\n\n  if (self._paused || self._currentEntry || self._aborted) {\n    // console.error('DR paused=%j, current=%j, aborted=%j', self._paused, !!self._currentEntry, self._aborted)\n    return\n  }\n\n  self._index++\n  if (self._index >= self.entries.length) {\n    if (!self._ended) {\n      self._ended = true\n      self.emit('end')\n      self.emit('close')\n    }\n    return\n  }\n\n  // ok, handle this one, then.\n\n  // save creating a proxy, by stat'ing the thing now.\n  var p = path.resolve(self._path, self.entries[self._index])\n  assert(p !== self._path)\n  assert(self.entries[self._index])\n\n  // set this to prevent trying to _read() again in the stat time.\n  self._currentEntry = p\n  fs[ self.props.follow ? 'stat' : 'lstat' ](p, function (er, stat) {\n    if (er) return self.error(er)\n\n    var who = self._proxy || self\n\n    stat.path = p\n    stat.basename = path.basename(p)\n    stat.dirname = path.dirname(p)\n    var childProps = self.getChildProps.call(who, stat)\n    childProps.path = p\n    childProps.basename = path.basename(p)\n    childProps.dirname = path.dirname(p)\n\n    var entry = Reader(childProps, stat)\n\n    // console.error(\"DR Entry\", p, stat.size)\n\n    self._currentEntry = entry\n\n    // \"entry\" events are for direct entries in a specific dir.\n    // \"child\" events are for any and all children at all levels.\n    // This nomenclature is not completely final.\n\n    entry.on('pause', function (who) {\n      if (!self._paused && !entry._disowned) {\n        self.pause(who)\n      }\n    })\n\n    entry.on('resume', function (who) {\n      if (self._paused && !entry._disowned) {\n        self.resume(who)\n      }\n    })\n\n    entry.on('stat', function (props) {\n      self.emit('_entryStat', entry, props)\n      if (entry._aborted) return\n      if (entry._paused) {\n        entry.once('resume', function () {\n          self.emit('entryStat', entry, props)\n        })\n      } else self.emit('entryStat', entry, props)\n    })\n\n    entry.on('ready', function EMITCHILD () {\n      // console.error(\"DR emit child\", entry._path)\n      if (self._paused) {\n        // console.error(\"  DR emit child - try again later\")\n        // pause the child, and emit the \"entry\" event once we drain.\n        // console.error(\"DR pausing child entry\")\n        entry.pause(self)\n        return self.once('resume', EMITCHILD)\n      }\n\n      // skip over sockets.  they can't be piped around properly,\n      // so there's really no sense even acknowledging them.\n      // if someone really wants to see them, they can listen to\n      // the \"socket\" events.\n      if (entry.type === 'Socket') {\n        self.emit('socket', entry)\n      } else {\n        self.emitEntry(entry)\n      }\n    })\n\n    var ended = false\n    entry.on('close', onend)\n    entry.on('disown', onend)\n    function onend () {\n      if (ended) return\n      ended = true\n      self.emit('childEnd', entry)\n      self.emit('entryEnd', entry)\n      self._currentEntry = null\n      if (!self._paused) {\n        self._read()\n      }\n    }\n\n    // XXX Remove this.  Works in node as of 0.6.2 or so.\n    // Long filenames should not break stuff.\n    entry.on('error', function (er) {\n      if (entry._swallowErrors) {\n        self.warn(er)\n        entry.emit('end')\n        entry.emit('close')\n      } else {\n        self.emit('error', er)\n      }\n    })\n\n    // proxy up some events.\n    ;[\n      'child',\n      'childEnd',\n      'warn'\n    ].forEach(function (ev) {\n      entry.on(ev, self.emit.bind(self, ev))\n    })\n  })\n}\n\nDirReader.prototype.disown = function (entry) {\n  entry.emit('beforeDisown')\n  entry._disowned = true\n  entry.parent = entry.root = null\n  if (entry === this._currentEntry) {\n    this._currentEntry = null\n  }\n  entry.emit('disown')\n}\n\nDirReader.prototype.getChildProps = function () {\n  return {\n    depth: this.depth + 1,\n    root: this.root || this,\n    parent: this,\n    follow: this.follow,\n    filter: this.filter,\n    sort: this.props.sort,\n    hardlinks: this.props.hardlinks\n  }\n}\n\nDirReader.prototype.pause = function (who) {\n  var self = this\n  if (self._paused) return\n  who = who || self\n  self._paused = true\n  if (self._currentEntry && self._currentEntry.pause) {\n    self._currentEntry.pause(who)\n  }\n  self.emit('pause', who)\n}\n\nDirReader.prototype.resume = function (who) {\n  var self = this\n  if (!self._paused) return\n  who = who || self\n\n  self._paused = false\n  // console.error('DR Emit Resume', self._path)\n  self.emit('resume', who)\n  if (self._paused) {\n    // console.error('DR Re-paused', self._path)\n    return\n  }\n\n  if (self._currentEntry) {\n    if (self._currentEntry.resume) self._currentEntry.resume(who)\n  } else self._read()\n}\n\nDirReader.prototype.emitEntry = function (entry) {\n  this.emit('entry', entry)\n  this.emit('child', entry)\n}\n"]}