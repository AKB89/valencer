{"version":3,"sources":["uid-number.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,SAAjB;;;;;;;;AAQA,IAAI,gBAAgB,QAAQ,eAAR,CAApB;IACI,OAAO,QAAQ,MAAR,CADX;IAEI,aAAa,QAAQ,MAAR,IAAkB,QAAQ,MAF3C;IAGI,WAAW,EAHf;IAII,WAAW,EAJf;;AAMA,SAAS,SAAT,CAAoB,GAApB,EAAyB,GAAzB,EAA8B,EAA9B,EAAkC;AAChC,MAAI,CAAC,UAAL,EAAiB,OAAO,IAAP;AACjB,MAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B,KAAK,GAAL,EAAU,MAAM,IAAhB;AAC9B,MAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B,KAAK,GAAL,EAAU,MAAM,IAAhB;AAC9B,MAAI,OAAO,IAAX,EAAiB,MAAM,QAAQ,MAAR,EAAN;AACjB,MAAI,OAAO,IAAX,EAAiB,MAAM,QAAQ,MAAR,EAAN;AACjB,MAAI,CAAC,MAAM,GAAN,CAAL,EAAiB,MAAM,SAAS,GAAT,IAAgB,CAAC,GAAvB;AACjB,MAAI,CAAC,MAAM,GAAN,CAAL,EAAiB,MAAM,SAAS,GAAT,IAAgB,CAAC,GAAvB;;AAEjB,MAAI,SAAS,cAAT,CAAwB,GAAxB,CAAJ,EAAkC,MAAM,SAAS,GAAT,CAAN;AAClC,MAAI,SAAS,cAAT,CAAwB,GAAxB,CAAJ,EAAkC,MAAM,SAAS,GAAT,CAAN;;AAElC,MAAI,OAAO,GAAP,KAAe,QAAf,IAA2B,OAAO,GAAP,KAAe,QAA9C,EAAwD;AACtD,WAAO,QAAQ,QAAR,CAAiB,GAAG,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoB,GAApB,EAAyB,GAAzB,CAAjB,CAAP;AACD;;AAED,MAAI,SAAS,QAAQ,OAAR,CAAgB,kBAAhB,CAAb;;AAEA,gBAAc,QAAd,CAAwB,QAAQ,QAAhC,EACwB,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,CADxB,EAEwB,UAAU,IAAV,EAAgB,GAAhB,EAAqB,MAArB,EAA6B;AACnD,QAAI,IAAJ,EAAU;AACR,UAAI,KAAK,IAAI,KAAJ,CAAU,4BAA4B,MAAtC,CAAT;AACA,SAAG,IAAH,GAAU,IAAV;AACA,aAAO,GAAG,EAAH,CAAP;AACD;;AAED,QAAI;AACF,YAAM,KAAK,KAAL,CAAW,MAAI,EAAf,CAAN;AACD,KAFD,CAEE,OAAO,EAAP,EAAW;AACX,aAAO,GAAG,EAAH,CAAP;AACD;;AAED,QAAI,IAAI,KAAR,EAAe;AACb,UAAI,KAAK,IAAI,KAAJ,CAAU,IAAI,KAAd,CAAT;AACA,SAAG,KAAH,GAAW,IAAI,KAAf;AACA,aAAO,GAAG,EAAH,CAAP;AACD;;AAED,QAAI,MAAM,IAAI,GAAV,KAAkB,MAAM,IAAI,GAAV,CAAtB,EAAsC,OAAO,GAAG,IAAI,KAAJ,CAC9C,4BAA0B,KAAK,SAAL,CAAe,GAAf,CADoB,CAAH,CAAP;;AAGtC,OAAG,IAAH,EAAS,SAAS,GAAT,IAAgB,CAAC,IAAI,GAA9B,EAAmC,SAAS,GAAT,IAAgB,CAAC,IAAI,GAAxD;AACD,GAzBD;AA0BD","file":"uid-number-compiled.js","sourcesContent":["module.exports = uidNumber\n\n// This module calls into get-uid-gid.js, which sets the\n// uid and gid to the supplied argument, in order to find out their\n// numeric value.  This can't be done in the main node process,\n// because otherwise node would be running as that user from this\n// point on.\n\nvar child_process = require(\"child_process\")\n  , path = require(\"path\")\n  , uidSupport = process.getuid && process.setuid\n  , uidCache = {}\n  , gidCache = {}\n\nfunction uidNumber (uid, gid, cb) {\n  if (!uidSupport) return cb()\n  if (typeof cb !== \"function\") cb = gid, gid = null\n  if (typeof cb !== \"function\") cb = uid, uid = null\n  if (gid == null) gid = process.getgid()\n  if (uid == null) uid = process.getuid()\n  if (!isNaN(gid)) gid = gidCache[gid] = +gid\n  if (!isNaN(uid)) uid = uidCache[uid] = +uid\n\n  if (uidCache.hasOwnProperty(uid)) uid = uidCache[uid]\n  if (gidCache.hasOwnProperty(gid)) gid = gidCache[gid]\n\n  if (typeof gid === \"number\" && typeof uid === \"number\") {\n    return process.nextTick(cb.bind(null, null, uid, gid))\n  }\n\n  var getter = require.resolve(\"./get-uid-gid.js\")\n\n  child_process.execFile( process.execPath\n                        , [getter, uid, gid]\n                        , function (code, out, stderr) {\n    if (code) {\n      var er = new Error(\"could not get uid/gid\\n\" + stderr)\n      er.code = code\n      return cb(er)\n    }\n\n    try {\n      out = JSON.parse(out+\"\")\n    } catch (ex) {\n      return cb(ex)\n    }\n\n    if (out.error) {\n      var er = new Error(out.error)\n      er.errno = out.errno\n      return cb(er)\n    }\n\n    if (isNaN(out.uid) || isNaN(out.gid)) return cb(new Error(\n      \"Could not get uid/gid: \"+JSON.stringify(out)))\n\n    cb(null, uidCache[uid] = +out.uid, gidCache[gid] = +out.gid)\n  })\n}\n"]}