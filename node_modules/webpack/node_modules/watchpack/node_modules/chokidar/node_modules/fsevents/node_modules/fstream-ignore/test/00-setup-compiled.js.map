{"version":3,"sources":["00-setup.js"],"names":[],"mappings":";;;;;;;;;;AAUA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,IAAI,CAAR;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,WAAW,KAAK,OAAL,CAAa,SAAb,EAAwB,UAAxB,CAAf;;AAEA,IAAI,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAZ;AACA,IAAI,OAAO,EAAX;;AAEA,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA6B;AAC3B,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA6B;AAC3B,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA6B;AAC3B,WAAK,IAAL,CAAU,MAAM,CAAN,IAAW,GAAX,GAAiB,MAAM,CAAN,CAAjB,GAA4B,GAA5B,GAAkC,MAAM,CAAN,CAA5C;AACD;AACF;AACF;;AAED,IAAI,QAAQ,EAAZ;;AAEA,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA6B;AAC3B,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA6B;AAC3B,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA6B;AAC3B,YAAM,IAAN,CAAW,MAAM,CAAN,IAAW,MAAM,CAAN,CAAX,GAAsB,MAAM,CAAN,CAAjC;AACA,YAAM,IAAN,CAAW,MAAM,MAAM,CAAN,CAAN,GAAiB,MAAM,CAAN,CAAjB,GAA4B,MAAM,CAAN,CAAvC;AACD;AACF;AACF;;AAED,IAAI,IAAJ,CAAS,iBAAT,EAA4B,UAAU,CAAV,EAAa;AACvC,SAAO,KAAK,OAAL,CAAa,SAAb,EAAwB,UAAxB,CAAP,EAA4C,UAAU,EAAV,EAAc;AACxD,MAAE,OAAF,CAAU,EAAV,EAAc,iBAAd;AACA,MAAE,GAAF;AACD,GAHD;AAID,CALD;;AAOA,IAAI,IAAJ,CAAS,iBAAT,EAA4B,UAAU,CAAV,EAAa;AACvC,OAAK,OAAL,CAAa,UAAU,GAAV,EAAe;AAC1B,UAAM,KAAK,OAAL,CAAa,QAAb,EAAuB,GAAvB,CAAN;AACA,MAAE,IAAF,CAAO,WAAS,GAAhB,EAAqB,UAAU,CAAV,EAAa;AAChC,aAAO,GAAP,EAAY,UAAU,EAAV,EAAc;AACxB,UAAE,OAAF,CAAU,EAAV,EAAc,WAAS,GAAvB;AACA,YAAI,EAAJ,EAAQ,OAAO,EAAE,GAAF,EAAP;;AAER,cAAM,OAAN,CAAc,UAAU,IAAV,EAAgB;AAC5B,iBAAO,KAAK,OAAL,CAAa,GAAb,EAAkB,IAAlB,CAAP;AACA,YAAE,IAAF,CAAO,eAAa,IAApB,EAA0B,UAAU,CAAV,EAAa;AACrC,eAAG,SAAH,CAAa,IAAb,EAAmB,KAAK,QAAL,CAAc,IAAd,CAAnB,EAAwC,UAAU,EAAV,EAAc;AACpD,gBAAE,OAAF,CAAU,EAAV,EAAc,aAAW,IAAzB;AACA,gBAAE,GAAF;AACD,aAHD;AAID,WALD;AAMD,SARD;AASA,UAAE,GAAF;AACD,OAdD;AAeD,KAhBD;AAiBD,GAnBD;AAoBA,IAAE,GAAF;AACD,CAtBD","file":"00-setup-compiled.js","sourcesContent":["// The test fixtures work like this:\n// These dirs are all created: {a,b,c}/{a,b,c}/{a,b,c}/\n// in each one, these files are created:\n// {.,}{a,b,c}{a,b,c}{a,b,c}\n//\n// So, there'll be a/b/c/abc, a/b/c/aba, etc., and dot-versions of each.\n//\n// Each test then writes their own ignore file rules for their purposes,\n// and is responsible for removing them afterwards.\n\nvar mkdirp = require(\"mkdirp\")\nvar path = require(\"path\")\nvar i = 0\nvar tap = require(\"tap\")\nvar fs = require(\"fs\")\nvar rimraf = require(\"rimraf\")\nvar fixtures = path.resolve(__dirname, \"fixtures\")\n\nvar chars = ['a', 'b', 'c']\nvar dirs = []\n\nfor (var i = 0; i < 3; i ++) {\n  for (var j = 0; j < 3; j ++) {\n    for (var k = 0; k < 3; k ++) {\n      dirs.push(chars[i] + '/' + chars[j] + '/' + chars[k])\n    }\n  }\n}\n\nvar files = []\n\nfor (var i = 0; i < 3; i ++) {\n  for (var j = 0; j < 3; j ++) {\n    for (var k = 0; k < 3; k ++) {\n      files.push(chars[i] + chars[j] + chars[k])\n      files.push('.' + chars[i] + chars[j] + chars[k])\n    }\n  }\n}\n\ntap.test(\"remove fixtures\", function (t) {\n  rimraf(path.resolve(__dirname, \"fixtures\"), function (er) {\n    t.ifError(er, \"remove fixtures\")\n    t.end()\n  })\n})\n\ntap.test(\"create fixtures\", function (t) {\n  dirs.forEach(function (dir) {\n    dir = path.resolve(fixtures, dir)\n    t.test(\"mkdir \"+dir, function (t) {\n      mkdirp(dir, function (er) {\n        t.ifError(er, \"mkdir \"+dir)\n        if (er) return t.end()\n\n        files.forEach(function (file) {\n          file = path.resolve(dir, file)\n          t.test(\"writeFile \"+file, function (t) {\n            fs.writeFile(file, path.basename(file), function (er) {\n              t.ifError(er, \"writing \"+file)\n              t.end()\n            })\n          })\n        })\n        t.end()\n      })\n    })\n  })\n  t.end()\n})\n\n"]}