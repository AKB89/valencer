{"version":3,"sources":["configure.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,OAAP,GAAiB,UAAU,SAA3B;;AAEA,QAAQ,KAAR,GAAgB,gDAAhB;;AAEA,IAAI,UAAU,QAAQ,mBAAR,CAAd;AACA,IAAI,kBAAkB,QAAQ,2BAAR,CAAtB;;AAEA,SAAS,SAAT,CAAmB,GAAnB,EAAwB,IAAxB,EAA8B,QAA9B,EAAwC;AACpC,oBAAgB,GAAhB,EAAoB,IAApB,EAAyB,UAAS,GAAT,EAAa,MAAb,EAAqB;AAC1C,YAAI,aAAa,OAAO,GAAP,CAAW,MAAX,CAAkB,OAAO,GAAzB,CAAjB;;AAEA,YAAI,iBAAiB,CAAC,UAAD,EAAY,QAAZ,EAAqB,SAArB,EAA+B,cAA/B,CAArB;AACA,uBAAe,OAAf,CAAuB,UAAS,GAAT,EAAc;AACjC,gBAAI,MAAM,IAAI,IAAJ,CAAS,GAAT,KAAiB,IAAI,IAAJ,CAAS,IAAI,OAAJ,CAAY,GAAZ,EAAgB,GAAhB,CAAT,CAA3B;AACA,gBAAI,GAAJ,EAAS;AACN,2BAAW,IAAX,CAAgB,OAAK,GAAL,GAAS,GAAT,GAAa,GAA7B;AACF;AACJ,SALD;;;;AASA,YAAI,IAAI,IAAJ,CAAS,MAAT,KAAoB,KAAxB,EAA+B;AAC3B,gBAAI,eAAe,WAAW,MAAX,CAAkB,CAAC,SAAD,EAAW,gBAAX,CAAlB,CAAnB;AACA,oBAAQ,OAAR,CAAgB,YAAhB,EAA6B,OAAO,IAApC,EAAyC,UAAS,GAAT,EAAc;AACnD,oBAAI,GAAJ,EAAS,OAAO,SAAS,GAAT,CAAP;AACT,oBAAI,OAAO,QAAP,CAAgB,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,iCAAa,WACC,MADD,CACQ,CAAC,IAAD,CADR,EAEC,MAFD,CAEQ,OAAO,QAFf,CAAb;AAGH;AACD,wBAAQ,OAAR,CAAgB,CAAC,WAAD,EAAc,MAAd,CAAqB,UAArB,CAAhB,EAAiD,OAAO,IAAxD,EAA6D,UAAS,GAAT,EAAc;AACvE,2BAAO,SAAS,GAAT,CAAP;AACH,iBAFD;AAGH,aAVD;AAWH,SAbD,MAaO;AACH,gBAAI,OAAO,QAAP,CAAgB,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,6BAAa,WACC,MADD,CACQ,CAAC,IAAD,CADR,EAEC,MAFD,CAEQ,OAAO,QAFf,CAAb;AAGH;AACD,oBAAQ,OAAR,CAAgB,CAAC,WAAD,EAAc,MAAd,CAAqB,UAArB,CAAhB,EAAiD,OAAO,IAAxD,EAA6D,UAAS,GAAT,EAAc;AACvE,uBAAO,SAAS,GAAT,CAAP;AACH,aAFD;AAGH;AACJ,KApCD;AAqCH","file":"configure-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = configure;\n\nexports.usage = 'Attempts to configure node-gyp or nw-gyp build';\n\nvar compile = require('./util/compile.js');\nvar handle_gyp_opts = require('./util/handle_gyp_opts.js');\n\nfunction configure(gyp, argv, callback) {\n    handle_gyp_opts(gyp,argv,function(err,result) {\n        var final_args = result.gyp.concat(result.pre);\n        // pull select node-gyp configure options out of the npm environ\n        var known_gyp_args = ['dist-url','python','nodedir','msvs_version'];\n        known_gyp_args.forEach(function(key) {\n            var val = gyp.opts[key] || gyp.opts[key.replace('-','_')];\n            if (val) {\n               final_args.push('--'+key+'='+val);\n            }\n        });\n        // --ensure=false tell node-gyp to re-install node development headers\n        // but it is only respected by node-gyp install, so we have to call install\n        // as a separate step if the user passes it\n        if (gyp.opts.ensure === false) {\n            var install_args = final_args.concat(['install','--ensure=false']);\n            compile.run_gyp(install_args,result.opts,function(err) {\n                if (err) return callback(err);\n                if (result.unparsed.length > 0) {\n                    final_args = final_args.\n                                  concat(['--']).\n                                  concat(result.unparsed);\n                }\n                compile.run_gyp(['configure'].concat(final_args),result.opts,function(err) {\n                    return callback(err);\n                });\n            });\n        } else {\n            if (result.unparsed.length > 0) {\n                final_args = final_args.\n                              concat(['--']).\n                              concat(result.unparsed);\n            }\n            compile.run_gyp(['configure'].concat(final_args),result.opts,function(err) {\n                return callback(err);\n            });\n        }\n    });\n}\n"]}