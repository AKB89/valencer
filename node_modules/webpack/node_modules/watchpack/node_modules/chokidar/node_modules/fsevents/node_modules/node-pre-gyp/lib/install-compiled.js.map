{"version":3,"sources":["install.js"],"names":[],"mappings":"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","file":"install-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = install;\n\nexports.usage = 'Attempts to install pre-built binary for module';\n\nvar fs = require('fs');\nvar path = require('path');\nvar zlib = require('zlib');\nvar log = require('npmlog');\nvar existsAsync = fs.exists || path.exists;\nvar versioning = require('./util/versioning.js');\nvar testbinary = require('./testbinary.js');\nvar clean = require('./clean.js');\n\nfunction download(uri,opts,callback) {\n    log.http('GET', uri);\n\n    var req = null;\n    var requestOpts = {\n        uri: uri.replace('+','%2B'),\n        headers: {\n          'User-Agent': 'node-pre-gyp (node ' + process.version + ')'\n        }\n    };\n\n    var proxyUrl = opts.proxy ||\n                    process.env.http_proxy ||\n                    process.env.HTTP_PROXY ||\n                    process.env.npm_config_proxy;\n    if (proxyUrl) {\n      if (/^https?:\\/\\//i.test(proxyUrl)) {\n        log.verbose('download', 'using proxy url: \"%s\"', proxyUrl);\n        requestOpts.proxy = proxyUrl;\n      } else {\n        log.warn('download', 'ignoring invalid \"proxy\" config setting: \"%s\"', proxyUrl);\n      }\n    }\n    try {\n        req = require('request')(requestOpts);\n    } catch (e) {\n        return callback(e);\n    }\n    if (req) {\n      req.on('response', function (res) {\n        log.http(res.statusCode, uri);\n      });\n    }\n    return callback(null,req);\n}\n\nfunction place_binary(from,to,opts,callback) {\n    download(from,opts,function(err,req) {\n        if (err) return callback(err);\n        if (!req) return callback(new Error(\"empty req\"));\n        var badDownload = false;\n        var extractCount = 0;\n        var gunzip = zlib.createGunzip();\n        var extracter = require('tar').Extract({ path: to, strip: 1});\n\n        function afterTarball(err) {\n            if (err) return callback(err);\n            if (badDownload) return callback(new Error(\"bad download\"));\n            if (extractCount === 0) {\n                return callback(new Error('There was a fatal problem while downloading/extracting the tarball'));\n            }\n            log.info('tarball', 'done parsing tarball');\n            callback();\n        }\n\n        function filter_func(entry) {\n            // ensure directories are +x\n            // https://github.com/mapnik/node-mapnik/issues/262\n            entry.props.mode |= (entry.props.mode >>> 2) & parseInt('0111',8);\n            log.info('install','unpacking ' + entry.path);\n            extractCount++;\n        }\n\n        gunzip.on('error', callback);\n        extracter.on('entry', filter_func);\n        extracter.on('error', callback);\n        extracter.on('end', afterTarball);\n\n        req.on('error', function(err) {\n            badDownload = true;\n            return callback(err);\n        });\n\n        req.on('close', function () {\n            if (extractCount === 0) {\n                return callback(new Error('Connection closed while downloading tarball file'));\n            }\n        });\n\n        req.on('response', function(res) {\n            if (res.statusCode !== 200) {\n                badDownload = true;\n                if (res.statusCode == 404) {\n                    return callback(new Error('Pre-built binary not available for your system, looked for ' + from));\n                } else {\n                    return callback(new Error(res.statusCode + ' status code downloading tarball ' + from));\n                }\n            }\n            // start unzipping and untaring\n            req.pipe(gunzip).pipe(extracter);\n        });\n    });\n}\n\nfunction do_build(gyp,argv,callback) {\n  gyp.todo.push( { name: 'build', args: ['rebuild'] } );\n  process.nextTick(callback);\n}\n\nfunction install(gyp, argv, callback) {\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var source_build = gyp.opts['build-from-source'] || gyp.opts.build_from_source;\n    var update_binary = gyp.opts['update-binary'] || gyp.opts.update_binary;\n    var should_do_source_build = source_build === package_json.name || (source_build === true || source_build === 'true');\n    var no_rollback = gyp.opts.hasOwnProperty('rollback') && gyp.opts.rollback === false;\n    if (should_do_source_build) {\n        log.info('build','requesting source compile');\n        return do_build(gyp,argv,callback);\n    } else {\n        var fallback_to_build = gyp.opts['fallback-to-build'] || gyp.opts.fallback_to_build;\n        var should_do_fallback_build = fallback_to_build === package_json.name || (fallback_to_build === true || fallback_to_build === 'true');\n        // but allow override from npm\n        if (process.env.npm_config_argv) {\n            var cooked = JSON.parse(process.env.npm_config_argv).cooked;\n            var match = cooked.indexOf(\"--fallback-to-build\");\n            if (match > -1 && cooked.length > match && cooked[match+1] == \"false\") {\n                should_do_fallback_build = false;\n                log.info('install','Build fallback disabled via npm flag: --fallback-to-build=false');\n            }\n        }\n        var opts;\n        try {\n            opts = versioning.evaluate(package_json, gyp.opts);\n        } catch (err) {\n            return callback(err);\n        }\n        var from = opts.hosted_tarball;\n        var to = opts.module_path;\n        var binary_module = path.join(to,opts.module_name + '.node');\n        if (existsAsync(binary_module,function(found) {\n            if (found && !update_binary) {\n                testbinary(gyp, argv, function(err) {\n                    if (err) {\n                        console.error('['+package_json.name+'] ' + err.message);\n                        log.error(\"Testing local pre-built binary failed, attempting to re-download\");\n                        place_binary(from,to,opts,function(err) {\n                            if (err) {\n                                if (should_do_fallback_build) {\n                                    log.http(err.message + ' (falling back to source compile with node-gyp)');\n                                    return do_build(gyp,argv,callback);\n                                } else {\n                                    return callback(err);\n                                }\n                            } else {\n                                console.log('['+package_json.name+'] Success: \"' + binary_module + '\" is reinstalled via remote');\n                                return callback();\n                            }\n                        });\n                    } else {\n                        console.log('['+package_json.name+'] Success: \"' + binary_module + '\" already installed');\n                        console.log('Pass --update-binary to reinstall or --build-from-source to recompile');\n                        return callback();\n                    }\n                });\n            } else {\n                if (!update_binary) log.info('check','checked for \"' + binary_module + '\" (not found)');\n                place_binary(from,to,opts,function(err) {\n                    if (err && should_do_fallback_build) {\n                        log.http(err.message + ' (falling back to source compile with node-gyp)');\n                        return do_build(gyp,argv,callback);\n                    } else if (err) {\n                        return callback(err);\n                    } else {\n                        testbinary(gyp, argv, function(err) {\n                            if (err) {\n                                if (no_rollback) {\n                                    return callback(err);\n                                }\n                                gyp.opts.silent_clean = true;\n                                clean(gyp, argv, function(error) {\n                                    if (error) console.log(error);\n                                    if (should_do_fallback_build) {\n                                        console.error('['+package_json.name+'] ' + err.message);\n                                        log.error(\"Testing pre-built binary failed, attempting to source compile\");\n                                        return do_build(gyp,argv,callback);\n                                    } else {\n                                        return callback(err);\n                                    }\n                                });\n                            } else {\n                                console.log('['+package_json.name+'] Success: \"' + binary_module + '\" is installed via remote');\n                                return callback();\n                            }\n                        });\n                    }\n                });\n            }\n        }));\n    }\n}\n"]}