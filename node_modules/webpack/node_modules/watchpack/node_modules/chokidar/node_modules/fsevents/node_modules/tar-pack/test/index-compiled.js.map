{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var tar = require('../')\nvar path = require('path')\nvar rfile = require('rfile')\nvar rimraf = require('rimraf').sync\nvar mkdir = require('mkdirp').sync\n\nvar read = require('fs').createReadStream\nvar write = require('fs').createWriteStream\nvar assert = require('assert')\n\nbeforeEach(function () {\n  rimraf(__dirname + '/output')\n})\nafterEach(function () {\n  rimraf(__dirname + '/output')\n})\ndescribe('tarball.pipe(unpack(directory, callback))', function () {\n  it('unpacks the tarball into the directory', function (done) {\n    read(__dirname + '/fixtures/packed.tar').pipe(tar.unpack(__dirname + '/output/unpacked', function (err) {\n      if (err) return done(err)\n      assert.equal(rfile('./output/unpacked/bar.txt'), rfile('./fixtures/to-pack/bar.txt'))\n      assert.equal(rfile('./output/unpacked/foo.txt'), rfile('./fixtures/to-pack/foo.txt'))\n      done()\n    }))\n  })\n})\ndescribe('gziptarball.pipe(unpack(directory, callback))', function () {\n  it('unpacks the tarball into the directory', function (done) {\n    read(__dirname + '/fixtures/packed.tar.gz').pipe(tar.unpack(__dirname + '/output/unpacked', function (err) {\n      if (err) return done(err)\n      assert.equal(rfile('./output/unpacked/bar.txt'), rfile('./fixtures/to-pack/bar.txt'))\n      assert.equal(rfile('./output/unpacked/foo.txt'), rfile('./fixtures/to-pack/foo.txt'))\n      done()\n    }))\n  })\n})\ndescribe('file.pipe(unpack(directory, callback))', function () {\n  it('copies the file into the directory', function (done) {\n    read(__dirname + '/fixtures/packed-file.txt').pipe(tar.unpack(__dirname + '/output/unpacked', function (err) {\n      if (err) return done(err)\n      assert.equal(rfile('./output/unpacked/index.js'), rfile('./fixtures/packed-file.txt'))\n      done()\n    }))\n  })\n})\ndescribe('pack(directory).pipe(tarball)', function () {\n  it('packs the directory into the output', function (done) {\n    var called = false\n    mkdir(__dirname + '/output/')\n    tar.pack(__dirname + '/fixtures/to-pack').pipe(write(__dirname + '/output/packed.tar.gz'))\n      .on('error', function (err) {\n        if (called) return\n        called = true\n        done(err)\n      })\n      .on('close', function () {\n        if (called) return\n        called = true\n        read(__dirname + '/output/packed.tar.gz').pipe(tar.unpack(__dirname + '/output/unpacked', function (err) {\n          if (err) return done(err)\n          assert.equal(rfile('./output/unpacked/bar.txt'), rfile('./fixtures/to-pack/bar.txt'))\n          assert.equal(rfile('./output/unpacked/foo.txt'), rfile('./fixtures/to-pack/foo.txt'))\n          done()\n        }))\n      })\n  })\n})"]}