{"version":3,"sources":["nopad.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,KAAR,CAAlB;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;;AAGA,IAAI,IAAJ,CAAS,yBAAT,EAAoC,UAAU,CAAV,EAAa;AAC/C,MAAI,IAAI,IAAI,WAAJ,CAAgB,EAAhB,EAAoB,EAAE,OAAO,IAAT,EAApB,CAAR;AACA,IAAE,IAAF,CAAO,CAAP;;AAEA,IAAE,EAAF,CAAK,MAAL,EAAa,UAAU,CAAV,EAAa;AACxB,MAAE,KAAF,CAAQ,EAAE,QAAF,EAAR,EAAsB,KAAtB,EAA6B,kBAA7B;AACD,GAFD;;AAIA,IAAE,EAAF,CAAK,KAAL,EAAY,YAAY;AAAE,MAAE,GAAF;AAAS,GAAnC;;AAEA,IAAE,KAAF,CAAQ,IAAI,MAAJ,CAAW,GAAX,CAAR;AACA,IAAE,KAAF,CAAQ,IAAI,MAAJ,CAAW,GAAX,CAAR;AACA,IAAE,KAAF,CAAQ,IAAI,MAAJ,CAAW,GAAX,CAAR;AACA,IAAE,GAAF;AACD,CAdD;;AAgBA,IAAI,IAAJ,CAAS,wBAAT,EAAmC,UAAU,CAAV,EAAa;AAC9C,MAAI,IAAI,IAAI,WAAJ,CAAgB,EAAhB,EAAoB,EAAE,OAAO,IAAT,EAApB,CAAR;AACA,IAAE,IAAF,CAAO,CAAP;;AAEA,MAAI,QAAQ,IAAZ;AACA,IAAE,EAAF,CAAK,MAAL,EAAa,UAAU,CAAV,EAAa;AACxB,QAAI,KAAJ,EAAW;AACT,cAAQ,KAAR;AACA,QAAE,KAAF,CAAQ,EAAE,QAAF,EAAR,EAAsB,kBAAtB,EAA0C,aAA1C;AACD,KAHD,MAGO;AACL,QAAE,IAAF,CAAO,qBAAP;AACD;AACF,GAPD;;AASA,IAAE,EAAF,CAAK,KAAL,EAAY,YAAY;AAAE,MAAE,GAAF;AAAS,GAAnC;;AAEA,IAAE,GAAF,CAAM,IAAI,MAAJ,CAAW,kBAAX,CAAN;AACD,CAjBD;;AAmBA,IAAI,IAAJ,CAAS,sBAAT,EAAiC,UAAU,CAAV,EAAa;AAC5C,MAAI,IAAI,IAAI,WAAJ,CAAgB,EAAhB,EAAoB,EAAE,OAAO,IAAT,EAApB,CAAR;AACA,IAAE,IAAF,CAAO,CAAP;;AAEA,MAAI,QAAQ,IAAZ;AACA,IAAE,EAAF,CAAK,MAAL,EAAa,UAAU,CAAV,EAAa;AACxB,QAAI,KAAJ,EAAW;AACT,cAAQ,KAAR;AACA,QAAE,KAAF,CAAQ,EAAE,QAAF,EAAR,EAAsB,kBAAtB,EAA0C,aAA1C;AACD,KAHD,MAGO;AACL,QAAE,KAAF,CAAQ,EAAE,QAAF,EAAR,EAAsB,GAAtB;AACD;AACF,GAPD;;AASA,IAAE,EAAF,CAAK,KAAL,EAAY,YAAY;AAAE,MAAE,GAAF;AAAS,GAAnC;;AAEA,IAAE,GAAF,CAAM,IAAI,MAAJ,CAAW,mBAAX,CAAN;AACD,CAjBD","file":"nopad-compiled.js","sourcesContent":["var BlockStream = require(\"../\")\nvar tap = require(\"tap\")\n\n\ntap.test(\"don't pad, small writes\", function (t) {\n  var f = new BlockStream(16, { nopad: true })\n  t.plan(1)\n\n  f.on(\"data\", function (c) {\n    t.equal(c.toString(), \"abc\", \"should get 'abc'\")\n  })\n\n  f.on(\"end\", function () { t.end() })\n\n  f.write(new Buffer(\"a\"))\n  f.write(new Buffer(\"b\"))\n  f.write(new Buffer(\"c\"))\n  f.end()\n})\n\ntap.test(\"don't pad, exact write\", function (t) {\n  var f = new BlockStream(16, { nopad: true })\n  t.plan(1)\n\n  var first = true\n  f.on(\"data\", function (c) {\n    if (first) {\n      first = false\n      t.equal(c.toString(), \"abcdefghijklmnop\", \"first chunk\")\n    } else {\n      t.fail(\"should only get one\")\n    }\n  })\n\n  f.on(\"end\", function () { t.end() })\n\n  f.end(new Buffer(\"abcdefghijklmnop\"))\n})\n\ntap.test(\"don't pad, big write\", function (t) {\n  var f = new BlockStream(16, { nopad: true })\n  t.plan(2)\n\n  var first = true\n  f.on(\"data\", function (c) {\n    if (first) {\n      first = false\n      t.equal(c.toString(), \"abcdefghijklmnop\", \"first chunk\")\n    } else {\n      t.equal(c.toString(), \"q\")\n    }\n  })\n\n  f.on(\"end\", function () { t.end() })\n\n  f.end(new Buffer(\"abcdefghijklmnopq\"))\n})\n"]}