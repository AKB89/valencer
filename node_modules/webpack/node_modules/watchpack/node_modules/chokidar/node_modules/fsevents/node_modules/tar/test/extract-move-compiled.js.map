{"version":3,"sources":["extract-move.js"],"names":[],"mappings":";AACA,QAAQ,KAAR,CAAc,SAAS,IAAT,EAAe,CAAf,CAAd;;AAEA,IAAI,MAAM,QAAQ,KAAR,CAAV;IACI,MAAM,QAAQ,WAAR,CADV;IAEI,KAAK,QAAQ,IAAR,CAFT;IAGI,MAAM,QAAQ,aAAR,CAHV;IAII,OAAO,QAAQ,MAAR,CAJX;IAKI,OAAO,KAAK,OAAL,CAAa,SAAb,EAAwB,kBAAxB,CALX;IAMI,SAAS,KAAK,OAAL,CAAa,SAAb,EAAwB,kBAAxB,CANb;IAOI,QAAQ,CAPZ;IAQI,UAAU,QAAQ,SAAR,CARd;IASI,SAAS,QAAQ,QAAR,CATb;IAUI,SAAS,QAAQ,QAAR,CAVb;IAYI,KAAK,CAZT;IAaI,gBAAgB,CACd;AACE,UAAS,MADX;AAEE,UAAS,KAFX;AAGE,UAAS,GAHX;AAIE,WAAU,SAJZ;AAKE,UAAS,CALX;AAME,cAAa,EANf;AAOE,WAAU,SAPZ;AAQE,SAAQ,SARV;AASE,SAAQ;AATV,CADc,EAYd;AACE,UAAS,UADX;AAEE,UAAS,KAFX;AAGE,UAAS,GAHX;AAIE,WAAU,SAJZ;AAKE,UAAS,CALX;AAME,cAAa,EANf;AAOE,WAAU,SAPZ;AAQE,SAAQ,SARV;AASE,SAAQ;AATV,CAZc,CAbpB;;AAqCA,SAAS,IAAT,CAAe,EAAf,EAAmB,MAAnB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC;AACjC,MAAI,OAAO,GAAG,MAAH,CAAX;AACA,MAAI,CAAC,IAAL,EAAW,OAAO,IAAP;AACX,KAAG,MAAH,IAAa,YAAY;AACvB,QAAI,OAAO,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,CAAX;AACA,YAAQ,KAAR,CAAc,MAAd,EAAsB,MAAtB,EAA8B,KAAK,CAAL,CAA9B;AACA,QAAI,KAAK,KAAK,GAAL,EAAT;;AAEA,eAAW,YAAY;AACrB,WAAK,KAAL,CAAW,EAAX,EAAe,KAAK,MAAL,CAAY,UAAS,EAAT,EAAa,IAAb,EAAmB;AAC5C,mBAAW,YAAW;AACpB,aAAG,EAAH,EAAO,IAAP;AACD,SAFD,EAEG,EAFH;AAGD,OAJc,CAAf;AAKD,KAND,EAMG,EANH;AAOD,GAZD;AAaD;;;AAGD,IAAI,IAAJ;AACA,IAAI;AACF,SAAO,QAAQ,kCAAR,CAAP;AACD,CAFD,CAEE,OAAO,EAAP,EAAW,CAAE;;AAEf,IAAI,cAAc,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,SAA7B,CAAlB;AACA,YAAY,OAAZ,CAAoB,UAAU,MAAV,EAAkB;AACpC,MAAI,KAAK,GAAT;AACA,MAAI,KAAK,CAAT;AACA,OAAK,EAAL,EAAS,MAAT,EAAiB,EAAjB,EAAqB,EAArB;AACA,OAAK,GAAL,EAAU,MAAV,EAAkB,EAAlB,EAAsB,EAAtB;AACA,MAAI,IAAJ,EAAU;AACR,SAAK,IAAL,EAAW,MAAX,EAAmB,EAAnB,EAAuB,EAAvB;AACD;AACF,CARD;;;;;;;;AAkBA,IAAI,IAAJ,CAAS,UAAT,EAAqB,UAAU,CAAV,EAAa;AAChC,SAAO,IAAP,CAAY,MAAZ,IACC,OAAO,IAAP,CAAY,MAAZ,CADD;AAEA,IAAE,IAAF,CAAO,UAAP;AACA,IAAE,GAAF;AACD,CALD;;AAOA,IAAI,IAAJ,CAAS,cAAT,EAAyB,UAAU,CAAV,EAAa;AACpC,MAAI,UAAU,IAAI,OAAJ,CAAY,MAAZ,CAAd;AACA,MAAI,MAAM,GAAG,gBAAH,CAAoB,IAApB,CAAV;;;AAGA,MAAI,UAAJ,GAAiB,IAAjB;;AAEA,MAAI,IAAJ,CAAS,OAAT;;AAEA,UAAQ,EAAR,CAAW,KAAX,EAAkB,YAAY;AAC5B,WAAO,IAAP,CAAY,MAAZ;;AAEA,MAAE,KAAF,CAAQ,EAAR,EAAY,cAAc,MAA1B,EAAkC,gBAAc,EAAd,GAAiB,UAAnD;;;AAGA,YAAQ,kBAAR,CAA2B,OAA3B;AACA,YAAQ,EAAR,CAAW,OAAX,EAAoB,UAAU,CAAV,EAAa;AAC/B,QAAE,IAAF,CAAO,mCAAP;AACD,KAFD;;AAIA,MAAE,GAAF;AACD,GAZD;;AAeA,UAAQ,EAAR,CAAW,OAAX,EAAoB,UAAU,KAAV,EAAiB;AACnC,QAAI,QACF,EAAE,MAAM,MAAM,IAAd;AACE,YAAM,MAAM,KAAN,CAAY,IAAZ,CAAiB,QAAjB,CAA0B,CAA1B,CADR;AAEE,YAAM,MAAM,KAAN,CAAY,IAFpB;AAGE,aAAO,MAAM,KAAN,CAAY,KAHrB;AAIE,YAAM,MAAM,KAAN,CAAY,IAJpB;AAKE,gBAAU,MAAM,KAAN,CAAY,QALxB;AAME,aAAO,MAAM,KAAN,CAAY,KANrB;AAOE,WAAK,MAAM,KAAN,CAAY,GAPnB;AAQE,WAAK,MAAM,KAAN,CAAY;AARnB,KADF;;AAYA,QAAI,SAAS,cAAc,IAAd,CAAb;;AAEA,MAAE,UAAF,CAAa,KAAb,EAAoB,MAApB,EAA4B,eAAe,EAAf,GAAoB,GAApB,GAA0B,OAAO,IAA7D;AACD,GAhBD;AAiBD,CAzCD","file":"extract-move-compiled.js","sourcesContent":["// Set the umask, so that it works the same everywhere.\nprocess.umask(parseInt('22', 8))\n\nvar tap = require(\"tap\")\n  , tar = require(\"../tar.js\")\n  , fs = require(\"fs\")\n  , gfs = require(\"graceful-fs\")\n  , path = require(\"path\")\n  , file = path.resolve(__dirname, \"fixtures/dir.tar\")\n  , target = path.resolve(__dirname, \"tmp/extract-test\")\n  , index = 0\n  , fstream = require(\"fstream\")\n  , rimraf = require(\"rimraf\")\n  , mkdirp = require(\"mkdirp\")\n\n  , ee = 0\n  , expectEntries = [\n      {\n        \"path\" : \"dir/\",\n        \"mode\" : \"750\",\n        \"type\" : \"5\",\n        \"depth\" : undefined,\n        \"size\" : 0,\n        \"linkpath\" : \"\",\n        \"nlink\" : undefined,\n        \"dev\" : undefined,\n        \"ino\" : undefined\n      },\n      {\n        \"path\" : \"dir/sub/\",\n        \"mode\" : \"750\",\n        \"type\" : \"5\",\n        \"depth\" : undefined,\n        \"size\" : 0,\n        \"linkpath\" : \"\",\n        \"nlink\" : undefined,\n        \"dev\" : undefined,\n        \"ino\" : undefined\n      } ]\n\nfunction slow (fs, method, t1, t2) {\n  var orig = fs[method]\n  if (!orig) return null\n  fs[method] = function () {\n    var args = [].slice.call(arguments)\n    console.error(\"slow\", method, args[0])\n    var cb = args.pop()\n\n    setTimeout(function () {\n      orig.apply(fs, args.concat(function(er, data) {\n        setTimeout(function() {\n          cb(er, data)\n        }, t2)\n      }))\n    }, t1)\n  }\n}\n\n// Make sure we get the graceful-fs that fstream is using.\nvar gfs2\ntry {\n  gfs2 = require(\"fstream/node_modules/graceful-fs\")\n} catch (er) {}\n\nvar slowMethods = [\"chown\", \"chmod\", \"utimes\", \"lutimes\"]\nslowMethods.forEach(function (method) {\n  var t1 = 500\n  var t2 = 0\n  slow(fs, method, t1, t2)\n  slow(gfs, method, t1, t2)\n  if (gfs2) {\n    slow(gfs2, method, t1, t2)\n  }\n})\n\n\n\n// The extract class basically just pipes the input\n// to a Reader, and then to a fstream.DirWriter\n\n// So, this is as much a test of fstream.Reader and fstream.Writer\n// as it is of tar.Extract, but it sort of makes sense.\n\ntap.test(\"preclean\", function (t) {\n  rimraf.sync(target)\n  /mkdirp.sync(target)\n  t.pass(\"cleaned!\")\n  t.end()\n})\n\ntap.test(\"extract test\", function (t) {\n  var extract = tar.Extract(target)\n  var inp = fs.createReadStream(file)\n\n  // give it a weird buffer size to try to break in odd places\n  inp.bufferSize = 1234\n\n  inp.pipe(extract)\n\n  extract.on(\"end\", function () {\n    rimraf.sync(target)\n\n    t.equal(ee, expectEntries.length, \"should see \"+ee+\" entries\")\n\n    // should get no more entries after end\n    extract.removeAllListeners(\"entry\")\n    extract.on(\"entry\", function (e) {\n      t.fail(\"Should not get entries after end!\")\n    })\n\n    t.end()\n  })\n\n\n  extract.on(\"entry\", function (entry) {\n    var found =\n      { path: entry.path\n      , mode: entry.props.mode.toString(8)\n      , type: entry.props.type\n      , depth: entry.props.depth\n      , size: entry.props.size\n      , linkpath: entry.props.linkpath\n      , nlink: entry.props.nlink\n      , dev: entry.props.dev\n      , ino: entry.props.ino\n      }\n\n    var wanted = expectEntries[ee ++]\n\n    t.equivalent(found, wanted, \"tar entry \" + ee + \" \" + wanted.path)\n  })\n})\n"]}