{"version":3,"sources":["link-writer.js"],"names":[],"mappings":"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","file":"link-writer-compiled.js","sourcesContent":["module.exports = LinkWriter\n\nvar fs = require('graceful-fs')\nvar Writer = require('./writer.js')\nvar inherits = require('inherits')\nvar path = require('path')\nvar rimraf = require('rimraf')\n\ninherits(LinkWriter, Writer)\n\nfunction LinkWriter (props) {\n  var self = this\n  if (!(self instanceof LinkWriter)) {\n    throw new Error('LinkWriter must be called as constructor.')\n  }\n\n  // should already be established as a Link type\n  if (!((props.type === 'Link' && props.Link) ||\n    (props.type === 'SymbolicLink' && props.SymbolicLink))) {\n    throw new Error('Non-link type ' + props.type)\n  }\n\n  if (props.linkpath === '') props.linkpath = '.'\n  if (!props.linkpath) {\n    self.error('Need linkpath property to create ' + props.type)\n  }\n\n  Writer.call(this, props)\n}\n\nLinkWriter.prototype._create = function () {\n  // console.error(\" LW _create\")\n  var self = this\n  var hard = self.type === 'Link' || process.platform === 'win32'\n  var link = hard ? 'link' : 'symlink'\n  var lp = hard ? path.resolve(self.dirname, self.linkpath) : self.linkpath\n\n  // can only change the link path by clobbering\n  // For hard links, let's just assume that's always the case, since\n  // there's no good way to read them if we don't already know.\n  if (hard) return clobber(self, lp, link)\n\n  fs.readlink(self._path, function (er, p) {\n    // only skip creation if it's exactly the same link\n    if (p && p === lp) return finish(self)\n    clobber(self, lp, link)\n  })\n}\n\nfunction clobber (self, lp, link) {\n  rimraf(self._path, function (er) {\n    if (er) return self.error(er)\n    create(self, lp, link)\n  })\n}\n\nfunction create (self, lp, link) {\n  fs[link](lp, self._path, function (er) {\n    // if this is a hard link, and we're in the process of writing out a\n    // directory, it's very possible that the thing we're linking to\n    // doesn't exist yet (especially if it was intended as a symlink),\n    // so swallow ENOENT errors here and just soldier in.\n    // Additionally, an EPERM or EACCES can happen on win32 if it's trying\n    // to make a link to a directory.  Again, just skip it.\n    // A better solution would be to have fs.symlink be supported on\n    // windows in some nice fashion.\n    if (er) {\n      if ((er.code === 'ENOENT' ||\n        er.code === 'EACCES' ||\n        er.code === 'EPERM') && process.platform === 'win32') {\n        self.ready = true\n        self.emit('ready')\n        self.emit('end')\n        self.emit('close')\n        self.end = self._finish = function () {}\n      } else return self.error(er)\n    }\n    finish(self)\n  })\n}\n\nfunction finish (self) {\n  self.ready = true\n  self.emit('ready')\n  if (self._ended && !self._finished) self._finish()\n}\n\nLinkWriter.prototype.end = function () {\n  // console.error(\"LW finish in end\")\n  this._ended = true\n  if (this.ready) {\n    this._finished = true\n    this._finish()\n  }\n}\n"]}