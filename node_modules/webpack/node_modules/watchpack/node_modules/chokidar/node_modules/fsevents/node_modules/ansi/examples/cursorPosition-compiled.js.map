{"version":3,"sources":["cursorPosition.js"],"names":[],"mappings":";;AAEA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,SAAS,QAAQ,KAAR,EAAe,QAAQ,MAAvB,CAAb;;;AAGA,QAAQ,KAAR,CAAc,MAAd;AACA,IAAI,IAAJ;;AAEA,QAAQ,KAAR,CAAc,IAAd,CAAmB,MAAnB,EAA2B,UAAU,CAAV,EAAa;AACtC,MAAI,QAAQ,mBAAmB,IAAnB,CAAwB,EAAE,QAAF,EAAxB,CAAZ;AACA,MAAI,KAAJ,EAAW;AACT,QAAI,KAAK,MAAM,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkB,OAAlB,GAA4B,GAA5B,CAAgC,MAAhC,CAAT;AACA,YAAQ,KAAR,CAAc,EAAd;AACD;;;AAGD,MAAI,KAAJ;AACA,UAAQ,KAAR,CAAc,KAAd;AACD,CAVD;;;AAcA,OAAO,aAAP;;AAEA,SAAS,GAAT,CAAc,IAAd,EAAoB;AAClB,MAAI,QAAQ,KAAR,CAAc,UAAlB,EAA8B;AAC5B,YAAQ,KAAR,CAAc,UAAd,CAAyB,IAAzB;AACD,GAFD,MAEO;AACL,QAAI,UAAJ,CAAe,IAAf;AACD;AACF","file":"cursorPosition-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar tty = require('tty')\nvar cursor = require('../')(process.stdout)\n\n// listen for the queryPosition report on stdin\nprocess.stdin.resume()\nraw(true)\n\nprocess.stdin.once('data', function (b) {\n  var match = /\\[(\\d+)\\;(\\d+)R$/.exec(b.toString())\n  if (match) {\n    var xy = match.slice(1, 3).reverse().map(Number)\n    console.error(xy)\n  }\n\n  // cleanup and close stdin\n  raw(false)\n  process.stdin.pause()\n})\n\n\n// send the query position request code to stdout\ncursor.queryPosition()\n\nfunction raw (mode) {\n  if (process.stdin.setRawMode) {\n    process.stdin.setRawMode(mode)\n  } else {\n    tty.setRawMode(mode)\n  }\n}\n"]}