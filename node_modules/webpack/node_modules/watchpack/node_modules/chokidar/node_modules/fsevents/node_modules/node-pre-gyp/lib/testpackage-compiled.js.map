{"version":3,"sources":["testpackage.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,OAAP,GAAiB,UAAU,WAA3B;;AAEA,QAAQ,KAAR,GAAgB,wCAAhB;;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,MAAM,QAAQ,QAAR,CAAV;AACA,IAAI,cAAc,GAAG,MAAH,IAAa,KAAK,MAApC;AACA,IAAI,aAAa,QAAQ,sBAAR,CAAjB;AACA,IAAI,aAAa,QAAQ,iBAAR,CAAjB;AACA,IAAI,OAAO,QAAQ,IAAR,EAAc,gBAAzB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,SAAS,WAAT,CAAqB,GAArB,EAA0B,IAA1B,EAAgC,QAAhC,EAA0C;AACtC,QAAI,eAAe,KAAK,KAAL,CAAW,GAAG,YAAH,CAAgB,gBAAhB,CAAX,CAAnB;AACA,QAAI,OAAO,WAAW,QAAX,CAAoB,YAApB,EAAkC,IAAI,IAAtC,CAAX;AACA,QAAI,UAAU,KAAK,cAAnB;AACA,gBAAY,OAAZ,EAAqB,UAAS,KAAT,EAAgB;AACjC,YAAI,CAAC,KAAL,EAAY;AACR,mBAAO,SAAS,IAAI,KAAJ,CAAU,iCAAiC,OAAjC,GAA2C,4CAArD,CAAT,CAAP;AACH;AACD,YAAI,KAAK,KAAK,WAAd;AACA,YAAI,SAAS,KAAK,YAAL,EAAb;AACA,YAAI,YAAY,QAAQ,KAAR,EAAe,OAAf,CAAuB,EAAE,MAAM,EAAR,EAAY,OAAO,CAAnB,EAAvB,CAAhB;AACA,iBAAS,WAAT,CAAqB,KAArB,EAA4B;;;AAGxB,kBAAM,KAAN,CAAY,IAAZ,IAAqB,MAAM,KAAN,CAAY,IAAZ,KAAqB,CAAtB,GAA2B,SAAS,MAAT,EAAgB,CAAhB,CAA/C;AACA,gBAAI,IAAJ,CAAS,SAAT,EAAmB,eAAe,MAAM,IAAxC;AACH;AACD,eAAO,EAAP,CAAU,OAAV,EAAmB,QAAnB;AACA,kBAAU,EAAV,CAAa,OAAb,EAAsB,QAAtB;AACA,kBAAU,EAAV,CAAa,OAAb,EAAsB,WAAtB;AACA,kBAAU,EAAV,CAAa,KAAb,EAAoB,UAAS,GAAT,EAAc;AAC9B,gBAAI,GAAJ,EAAS,OAAO,SAAS,GAAT,CAAP;AACT,uBAAW,GAAX,EAAe,IAAf,EAAoB,UAAS,GAAT,EAAc;AAC9B,oBAAI,GAAJ,EAAS;AACL,2BAAO,SAAS,GAAT,CAAP;AACH,iBAFD,MAEO;AACH,4BAAQ,GAAR,CAAY,MAAI,aAAa,IAAjB,GAAsB,yBAAlC;AACA,2BAAO,UAAP;AACH;AACJ,aAPD;AAQH,SAVD;AAWA,aAAK,OAAL,EAAc,IAAd,CAAmB,MAAnB,EAA2B,IAA3B,CAAgC,SAAhC;AACH,KA5BD;AA6BH","file":"testpackage-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = testpackage;\n\nexports.usage = 'Tests that the staged package is valid';\n\nvar fs = require('fs');\nvar path = require('path');\nvar log = require('npmlog');\nvar existsAsync = fs.exists || path.exists;\nvar versioning = require('./util/versioning.js');\nvar testbinary = require('./testbinary.js');\nvar read = require('fs').createReadStream;\nvar zlib = require('zlib');\n\nfunction testpackage(gyp, argv, callback) {\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var opts = versioning.evaluate(package_json, gyp.opts);\n    var tarball = opts.staged_tarball;\n    existsAsync(tarball, function(found) {\n        if (!found) {\n            return callback(new Error(\"Cannot test package because \" + tarball + \" missing: run `node-pre-gyp package` first\"));\n        }\n        var to = opts.module_path;\n        var gunzip = zlib.createGunzip();\n        var extracter = require('tar').Extract({ path: to, strip: 1 });\n        function filter_func(entry) {\n            // ensure directories are +x\n            // https://github.com/mapnik/node-mapnik/issues/262\n            entry.props.mode |= (entry.props.mode >>> 2) & parseInt('0111',8);\n            log.info('install','unpacking ' + entry.path);\n        }\n        gunzip.on('error', callback);\n        extracter.on('error', callback);\n        extracter.on('entry', filter_func);\n        extracter.on('end', function(err) {\n            if (err) return callback(err);\n            testbinary(gyp,argv,function(err) {\n                if (err) {\n                    return callback(err);\n                } else {\n                    console.log('['+package_json.name+'] Package appears valid');\n                    return callback();\n                }\n            });\n        });\n        read(tarball).pipe(gunzip).pipe(extracter);\n    });\n}\n"]}