{"version":3,"sources":["balanced.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,WAAW,QAAQ,IAAR,CAAf;;AAEA,KAAK,UAAL,EAAiB,UAAS,CAAT,EAAY;AAC3B,IAAE,SAAF,CAAY,SAAS,GAAT,EAAc,GAAd,EAAmB,mBAAnB,CAAZ,EAAqD;AACnD,WAAO,CAD4C;AAEnD,SAAK,EAF8C;AAGnD,SAAK,KAH8C;AAInD,UAAM,UAJ6C;AAKnD,UAAM;AAL6C,GAArD;AAOA,IAAE,SAAF,CAAY,SAAS,GAAT,EAAc,GAAd,EAAmB,kBAAnB,CAAZ,EAAoD;AAClD,WAAO,CAD2C;AAElD,SAAK,EAF6C;AAGlD,SAAK,UAH6C;AAIlD,UAAM,IAJ4C;AAKlD,UAAM;AAL4C,GAApD;AAOA,IAAE,SAAF,CAAY,SAAS,GAAT,EAAc,GAAd,EAAmB,kBAAnB,CAAZ,EAAoD;AAClD,WAAO,CAD2C;AAElD,SAAK,EAF6C;AAGlD,SAAK,UAH6C;AAIlD,UAAM,IAJ4C;AAKlD,UAAM;AAL4C,GAApD;AAOA,IAAE,SAAF,CAAY,SAAS,GAAT,EAAc,GAAd,EAAmB,oBAAnB,CAAZ,EAAsD;AACpD,WAAO,CAD6C;AAEpD,SAAK,EAF+C;AAGpD,SAAK,MAH+C;AAIpD,UAAM,UAJ8C;AAKpD,UAAM;AAL8C,GAAtD;AAOA,IAAE,SAAF,CAAY,SAAS,GAAT,EAAc,GAAd,EAAmB,6BAAnB,CAAZ,EAA+D;AAC7D,WAAO,CADsD;AAE7D,SAAK,CAFwD;AAG7D,SAAK,KAHwD;AAI7D,UAAM,MAJuD;AAK7D,UAAM;AALuD,GAA/D;AAOA,IAAE,KAAF,CAAQ,SAAS,GAAT,EAAc,GAAd,EAAmB,MAAnB,CAAR,EAAoC,iBAApC;AACA,IAAE,SAAF,CAAY,SAAS,KAAT,EAAgB,MAAhB,EAAwB,6BAAxB,CAAZ,EAAoE;AAClE,WAAO,CAD2D;AAElE,SAAK,EAF6D;AAGlE,SAAK,KAH6D;AAIlE,UAAM,eAJ4D;AAKlE,UAAM;AAL4D,GAApE;AAOA,IAAE,SAAF,CAAY,SAAS,KAAT,EAAgB,MAAhB,EAAwB,iCAAxB,CAAZ,EAAwE;AACtE,WAAO,CAD+D;AAEtE,SAAK,EAFiE;AAGtE,SAAK,SAHiE;AAItE,UAAM,eAJgE;AAKtE,UAAM;AALgE,GAAxE;AAOA,IAAE,SAAF,CAAY,SAAS,IAAT,EAAe,IAAf,EAAqB,iBAArB,CAAZ,EAAqD;AACnD,WAAO,CAD4C;AAEnD,SAAK,CAF8C;AAGnD,SAAK,KAH8C;AAInD,UAAM,MAJ6C;AAKnD,UAAM;AAL6C,GAArD;AAOA,IAAE,SAAF,CAAY,SAAS,KAAT,EAAgB,IAAhB,EAAsB,iBAAtB,CAAZ,EAAsD;AACpD,WAAO,CAD6C;AAEpD,SAAK,CAF+C;AAGpD,SAAK,KAH+C;AAIpD,UAAM,IAJ8C;AAKpD,UAAM;AAL8C,GAAtD;AAOA,IAAE,SAAF,CAAY,SAAS,GAAT,EAAc,GAAd,EAAmB,2BAAnB,CAAZ,EAA6D;AAC3D,WAAO,CADoD;AAE3D,SAAK,EAFsD;AAG3D,SAAK,MAHsD;AAI3D,UAAM,OAJqD;AAK3D,UAAM;AALqD,GAA7D;AAOA,IAAE,SAAF,CAAY,SAAS,IAAT,EAAe,IAAf,EAAqB,YAArB,CAAZ,EAAgD;AAC9C,WAAO,CADuC;AAE9C,SAAK,CAFyC;AAG9C,SAAK,KAHyC;AAI9C,UAAM,EAJwC;AAK9C,UAAM;AALwC,GAAhD;AAOA,IAAE,GAAF;AACD,CAhFD","file":"balanced-compiled.js","sourcesContent":["var test = require('tape');\nvar balanced = require('..');\n\ntest('balanced', function(t) {\n  t.deepEqual(balanced('{', '}', 'pre{in{nest}}post'), {\n    start: 3,\n    end: 12,\n    pre: 'pre',\n    body: 'in{nest}',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{', '}', '{{{{{{{{{in}post'), {\n    start: 8,\n    end: 11,\n    pre: '{{{{{{{{',\n    body: 'in',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{', '}', 'pre{body{in}post'), {\n    start: 8,\n    end: 11,\n    pre: 'pre{body',\n    body: 'in',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{', '}', 'pre}{in{nest}}post'), {\n    start: 4,\n    end: 13,\n    pre: 'pre}',\n    body: 'in{nest}',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{', '}', 'pre{body}between{body2}post'), {\n    start: 3,\n    end: 8,\n    pre: 'pre',\n    body: 'body',\n    post: 'between{body2}post'\n  });\n  t.notOk(balanced('{', '}', 'nope'), 'should be notOk');\n  t.deepEqual(balanced('<b>', '</b>', 'pre<b>in<b>nest</b></b>post'), {\n    start: 3,\n    end: 19,\n    pre: 'pre',\n    body: 'in<b>nest</b>',\n    post: 'post'\n  });\n  t.deepEqual(balanced('<b>', '</b>', 'pre</b><b>in<b>nest</b></b>post'), {\n    start: 7,\n    end: 23,\n    pre: 'pre</b>',\n    body: 'in<b>nest</b>',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{{', '}}', 'pre{{{in}}}post'), {\n    start: 3,\n    end: 9,\n    pre: 'pre',\n    body: '{in}',\n    post: 'post'\n  });\n  t.deepEqual(balanced('{{{', '}}', 'pre{{{in}}}post'), {\n    start: 3,\n    end: 8,\n    pre: 'pre',\n    body: 'in',\n    post: '}post'\n  });\n  t.deepEqual(balanced('{', '}', 'pre{{first}in{second}post'), {\n    start: 4,\n    end: 10,\n    pre: 'pre{',\n    body: 'first',\n    post: 'in{second}post'\n  });\n  t.deepEqual(balanced('<?', '?>', 'pre<?>post'), {\n    start: 3,\n    end: 4,\n    pre: 'pre',\n    body: '',\n    post: 'post'\n  });\n  t.end();\n});\n"]}