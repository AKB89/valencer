{"version":3,"sources":["publish.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,OAAP,GAAiB,UAAU,OAA3B;;AAEA,QAAQ,KAAR,GAAgB,+CAAhB;;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,MAAM,QAAQ,QAAR,CAAV;AACA,IAAI,aAAa,QAAQ,sBAAR,CAAjB;AACA,IAAI,WAAW,QAAQ,oBAAR,CAAf;AACA,IAAI,cAAc,GAAG,MAAH,IAAa,KAAK,MAApC;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,SAAS,QAAQ,IAAR,EAAc,cAAd,EAA6B,EAAC,KAAI,aAAL,EAA7B,CAAb;;AAEA,SAAS,OAAT,CAAiB,GAAjB,EAAsB,IAAtB,EAA4B,QAA5B,EAAsC;AAClC,QAAI,MAAM,QAAQ,SAAR,CAAV;AACA,QAAI,eAAe,KAAK,KAAL,CAAW,GAAG,YAAH,CAAgB,gBAAhB,CAAX,CAAnB;AACA,QAAI,OAAO,WAAW,QAAX,CAAoB,YAApB,EAAkC,IAAI,IAAtC,CAAX;AACA,QAAI,UAAU,KAAK,cAAnB;AACA,gBAAY,OAAZ,EAAoB,UAAS,KAAT,EAAgB;AAChC,YAAI,CAAC,KAAL,EAAY;AACR,mBAAO,SAAS,IAAI,KAAJ,CAAU,4BAA4B,OAA5B,GAAsC,4CAAhD,CAAT,CAAP;AACH;AACD,YAAI,IAAJ,CAAS,SAAT,EAAoB,0BAApB;AACA,iBAAS,MAAT,CAAgB,KAAK,WAArB,EAAiC,MAAjC;AACA,YAAI,WAAW,IAAI,OAAJ,CAAY,OAAO,MAAnB,EAA0B,KAAK,YAA/B,CAAf;AACA,YAAI,IAAJ,CAAS,SAAT,EAAoB,wBAApB;AACA,YAAI,MAAJ,CAAW,MAAX,CAAkB,MAAlB;AACA,YAAI,KAAM,IAAI,IAAI,EAAR,EAAV;AACA,YAAI,UAAU,EAAG,QAAQ,OAAO,MAAlB;AACG,iBAAK;AADR,SAAd;AAGA,YAAI,iBAAiB,aAAa,QAAQ,MAArB,GAA8B,oBAA9B,GAAqD,QAAQ,GAAlF;AACA,YAAI,IAAJ,CAAS,SAAT,EAAoB,qCAAqC,cAAzD;AACA,WAAG,UAAH,CAAc,OAAd,EAAuB,UAAS,GAAT,EAAc,IAAd,EAAmB;AACtC,gBAAI,IAAJ,EAAU,IAAI,IAAJ,CAAS,SAAT,EAAoB,KAAK,SAAL,CAAe,IAAf,CAApB;AACV,gBAAI,OAAO,IAAI,IAAJ,IAAY,UAAvB,EAAmC;;;AAG/B,oBAAI,IAAJ,CAAS,SAAT,EAAoB,yBAApB;AACA,oBAAI,SAAS,IAAI,IAAI,EAAR,EAAb;AACA,oBAAI,cAAc,EAAG,KAAK,OAAO,GAAf;AACG,0BAAM,GAAG,gBAAH,CAAoB,OAApB,CADT;AAEG,4BAAQ,OAAO,MAFlB;AAGG,yBAAK;AAHR,iBAAlB;AAKA,oBAAI,IAAJ,CAAS,SAAT,EAAoB,gBAApB;AACA,oBAAI;AACA,2BAAO,SAAP,CAAiB,WAAjB,EAA8B,UAAS,GAAT,EAAc,IAAd,EAAmB;AAC7C,4BAAI,IAAJ,CAAS,SAAT,EAAoB,8BAApB;AACA,4BAAG,GAAH,EAAQ;AACL,gCAAI,IAAJ,CAAS,SAAT,EAAoB,0BAA0B,GAA1B,GAAgC,GAApD;AACA,mCAAO,SAAS,GAAT,CAAP;AACF;AACD,4BAAI,IAAJ,EAAU,IAAI,IAAJ,CAAS,SAAT,EAAoB,6BAA6B,KAAK,SAAL,CAAe,IAAf,CAA7B,GAAoD,GAAxE;AACV,4BAAI,IAAJ,CAAS,SAAT,EAAoB,yBAApB;AACA,gCAAQ,GAAR,CAAY,MAAI,aAAa,IAAjB,GAAsB,iBAAtB,GAA0C,cAAtD;AACA,+BAAO,UAAP;AACH,qBAVD;AAWL,iBAZC,CAYA,OAAO,GAAP,EAAY;AACT,wBAAI,IAAJ,CAAS,SAAT,EAAoB,0BAA0B,GAA1B,GAAgC,GAApD;AACA,2BAAO,SAAS,GAAT,CAAP;AACJ;AACF,aA3BD,MA2BO,IAAI,GAAJ,EAAS;AACZ,oBAAI,IAAJ,CAAS,SAAT,EAAoB,2BAA2B,GAA3B,GAAiC,GAArD;AACA,uBAAO,SAAS,GAAT,CAAP;AACH,aAHM,MAGA;AACH,oBAAI,KAAJ,CAAU,SAAV,EAAoB,sCAApB;AACA,oBAAI,KAAJ,CAAU,SAAV,EAAoB,0DAApB;AACA,oBAAI,KAAJ,CAAU,SAAV,EAAoB,qDAApB;AACA,oBAAI,KAAJ,CAAU,SAAV,EAAoB,2BAApB;AACA,uBAAO,SAAS,IAAI,KAAJ,CAAU,0BAA0B,cAApC,CAAT,CAAP;AACH;AACJ,SAvCD;AAwCH,KAvDD;AAwDH","file":"publish-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = publish;\n\nexports.usage = 'Publishes pre-built binary (requires aws-sdk)';\n\nvar fs = require('fs');\nvar path = require('path');\nvar log = require('npmlog');\nvar versioning = require('./util/versioning.js');\nvar s3_setup = require('./util/s3_setup.js');\nvar existsAsync = fs.exists || path.exists;\nvar url = require('url');\nvar config = require('rc')(\"node_pre_gyp\",{acl:\"public-read\"});\n\nfunction publish(gyp, argv, callback) {\n    var AWS = require(\"aws-sdk\");\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var opts = versioning.evaluate(package_json, gyp.opts);\n    var tarball = opts.staged_tarball;\n    existsAsync(tarball,function(found) {\n        if (!found) {\n            return callback(new Error(\"Cannot publish because \" + tarball + \" missing: run `node-pre-gyp package` first\"));\n        }\n        log.info('publish', 'Detecting s3 credentials');\n        s3_setup.detect(opts.hosted_path,config);\n        var key_name = url.resolve(config.prefix,opts.package_name);\n        log.info('publish', 'Authenticating with s3');\n        AWS.config.update(config);\n        var s3 =  new AWS.S3();\n        var s3_opts = {  Bucket: config.bucket,\n                         Key: key_name\n                      };\n        var remote_package = 'https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key;\n        log.info('publish', 'Checking for existing binary at ' + remote_package);\n        s3.headObject(s3_opts, function(err, meta){\n            if (meta) log.info('publish', JSON.stringify(meta));\n            if (err && err.code == 'NotFound') {\n                // we are safe to publish because\n                // the object does not already exist\n                log.info('publish', 'Preparing to put object');\n                var s3_put = new AWS.S3();\n                var s3_put_opts = {  ACL: config.acl,\n                                     Body: fs.createReadStream(tarball),\n                                     Bucket: config.bucket,\n                                     Key: key_name\n                                  };\n                log.info('publish', 'Putting object');\n                try {\n                    s3_put.putObject(s3_put_opts, function(err, resp){\n                        log.info('publish', 'returned from putting object');\n                        if(err) {\n                           log.info('publish', 's3 putObject error: \"' + err + '\"');\n                           return callback(err);\n                        }\n                        if (resp) log.info('publish', 's3 putObject response: \"' + JSON.stringify(resp) + '\"');\n                        log.info('publish', 'successfully put object');\n                        console.log('['+package_json.name+'] published to ' + remote_package);\n                        return callback();\n                    });\n              } catch (err) {\n                   log.info('publish', 's3 putObject error: \"' + err + '\"');\n                   return callback(err);\n              }\n            } else if (err) {\n                log.info('publish', 's3 headObject error: \"' + err + '\"');\n                return callback(err);\n            } else {\n                log.error('publish','Cannot publish over existing version');\n                log.error('publish',\"Update the 'version' field in package.json and try again\");\n                log.error('publish','If the previous version was published in error see:');\n                log.error('publish','\\t node-pre-gyp unpublish');\n                return callback(new Error('Failed publishing to ' + remote_package));\n            }\n        });\n    });\n}\n"]}