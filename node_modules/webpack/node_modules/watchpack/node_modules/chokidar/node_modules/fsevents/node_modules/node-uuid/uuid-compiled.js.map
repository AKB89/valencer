{"version":3,"sources":["uuid.js"],"names":[],"mappings":"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","file":"uuid-compiled.js","sourcesContent":["//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n/*global window, require, define */\n(function(_window) {\n  'use strict';\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\n\n  function setupBrowser() {\n    // Allow for MSIE11 msCrypto\n    var _crypto = _window.crypto || _window.msCrypto;\n\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n      //\n      // Moderately fast, high quality\n      try {\n        var _rnds8 = new Uint8Array(16);\n        _whatwgRNG = _rng = function whatwgRNG() {\n          _crypto.getRandomValues(_rnds8);\n          return _rnds8;\n        };\n        _rng();\n      } catch(e) {}\n    }\n\n    if (!_rng) {\n      // Math.random()-based (RNG)\n      //\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\n      // quality.\n      var  _rnds = new Array(16);\n      _mathRNG = _rng = function() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\n          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n        }\n\n        return _rnds;\n      };\n      if ('undefined' !== typeof console && console.warn) {\n        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\n      }\n    }\n  }\n\n  function setupNode() {\n    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n    //\n    // Moderately fast, high quality\n    if ('function' === typeof require) {\n      try {\n        var _rb = require('crypto').randomBytes;\n        _nodeRNG = _rng = _rb && function() {return _rb(16);};\n        _rng();\n      } catch(e) {}\n    }\n  }\n\n  if (_window) {\n    setupBrowser();\n  } else {\n    setupNode();\n  }\n\n  // Buffer class to use\n  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) === 'string') {\n      buf = (options === 'binary') ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n  uuid._rng = _rng;\n  uuid._mathRNG = _mathRNG;\n  uuid._nodeRNG = _nodeRNG;\n  uuid._whatwgRNG = _whatwgRNG;\n\n  if (('undefined' !== typeof module) && module.exports) {\n    // Publish as node.js module\n    module.exports = uuid;\n  } else if (typeof define === 'function' && define.amd) {\n    // Publish as AMD module\n    define(function() {return uuid;});\n\n\n  } else {\n    // Publish as global (in browsers)\n    _previousRoot = _window.uuid;\n\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n    uuid.noConflict = function() {\n      _window.uuid = _previousRoot;\n      return uuid;\n    };\n\n    _window.uuid = uuid;\n  }\n})('undefined' !== typeof window ? window : null);\n"]}