{"version":3,"sources":["reader.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,eAAR,CAAd;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,MAAM,KAAK,OAAL,CAAa,SAAb,CAAV;;AAEA,IAAI,IAAJ,CAAS,aAAT,EAAwB,UAAU,CAAV,EAAa;AACnC,MAAI,WAAW,CAAC,CAAhB;AACA,MAAI,WAAW,KAAf;AACA,MAAI,QAAQ,KAAZ;;AAEA,MAAI,IAAI,QAAQ,MAAR,CAAe;AACrB,UAAM,GADe;AAErB,YAAQ,YAAY;;AAElB,aAAO,KAAK,MAAL,KAAgB,CAAhB,IAAqB,SAAS,CAArC;AACD;AALoB,GAAf,CAAR;;AAQA,IAAE,EAAF,CAAK,OAAL,EAAc,YAAY;AACxB,eAAW,IAAX;AACA,eAAW,GAAG,WAAH,CAAe,GAAf,EAAoB,MAA/B;AACA,YAAQ,KAAR,CAAc,kCAAkC,QAAhD;AACA,MAAE,KAAF,CAAQ,EAAE,IAAV,EAAgB,WAAhB,EAA6B,uBAA7B;AACD,GALD;;AAOA,IAAE,EAAF,CAAK,OAAL,EAAc,UAAU,KAAV,EAAiB;AAC7B;AACA,QAAI,CAAC,QAAL,EAAe;AACb,QAAE,IAAF,CAAO,wBAAP;AACD;AACD,MAAE,KAAF,CAAQ,MAAM,OAAd,EAAuB,EAAE,IAAzB,EAA+B,wBAA/B;AACD,GAND;;AAQA,IAAE,EAAF,CAAK,OAAL,EAAc,UAAU,EAAV,EAAc;AAC1B,MAAE,IAAF,CAAO,EAAP;AACA,MAAE,GAAF;AACA,YAAQ,IAAR,CAAa,CAAb;AACD,GAJD;;AAMA,IAAE,EAAF,CAAK,KAAL,EAAY,YAAY;AACtB,MAAE,KAAF,CAAQ,QAAR,EAAkB,CAAlB,EAAqB,+BAArB;AACA,YAAQ,IAAR;AACD,GAHD;;AAKA,MAAI,SAAS,KAAb;AACA,IAAE,EAAF,CAAK,OAAL,EAAc,YAAY;AACxB,MAAE,EAAF,CAAK,KAAL,EAAY,sBAAZ;AACA,MAAE,KAAF,CAAQ,MAAR,EAAgB,+BAAhB;AACA,aAAS,IAAT;AACA,MAAE,GAAF;AACD,GALD;AAMD,CA9CD;;AAgDA,IAAI,IAAJ,CAAS,mBAAT,EAA8B,UAAU,CAAV,EAAa;;AAEzC,MAAI,IAAI,QAAQ,MAAR,CAAe,EAAE,MAAM,aAAR,EAAf,CAAR;;AAEA,IAAE,IAAF,CAAO,OAAP,EAAgB,UAAU,EAAV,EAAc;AAC5B,MAAE,EAAF,CAAK,IAAL;AACA,MAAE,GAAF;AACD,GAHD;;AAKA,IAAE,EAAF,CAAK,KAAL,EAAY,YAAY;AACtB,MAAE,IAAF,CAAO,4BAAP;AACA,MAAE,GAAF;AACD,GAHD;AAID,CAbD","file":"reader-compiled.js","sourcesContent":["var fstream = require('../fstream.js')\nvar tap = require('tap')\nvar fs = require('fs')\nvar path = require('path')\nvar dir = path.dirname(__dirname)\n\ntap.test('reader test', function (t) {\n  var children = -1\n  var gotReady = false\n  var ended = false\n\n  var r = fstream.Reader({\n    path: dir,\n    filter: function () {\n      // return this.parent === r\n      return this.parent === r || this === r\n    }\n  })\n\n  r.on('ready', function () {\n    gotReady = true\n    children = fs.readdirSync(dir).length\n    console.error('Setting expected children to ' + children)\n    t.equal(r.type, 'Directory', 'should be a directory')\n  })\n\n  r.on('entry', function (entry) {\n    children--\n    if (!gotReady) {\n      t.fail('children before ready!')\n    }\n    t.equal(entry.dirname, r.path, 'basename is parent dir')\n  })\n\n  r.on('error', function (er) {\n    t.fail(er)\n    t.end()\n    process.exit(1)\n  })\n\n  r.on('end', function () {\n    t.equal(children, 0, 'should have seen all children')\n    ended = true\n  })\n\n  var closed = false\n  r.on('close', function () {\n    t.ok(ended, 'saw end before close')\n    t.notOk(closed, 'close should only happen once')\n    closed = true\n    t.end()\n  })\n})\n\ntap.test('reader error test', function (t) {\n  // assumes non-root on a *nix system\n  var r = fstream.Reader({ path: '/etc/shadow' })\n\n  r.once('error', function (er) {\n    t.ok(true)\n    t.end()\n  })\n\n  r.on('end', function () {\n    t.fail('reader ended without error')\n    t.end()\n  })\n})\n"]}