{"version":3,"sources":["dir-normalization.js"],"names":[],"mappings":"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","file":"dir-normalization-compiled.js","sourcesContent":["// Set the umask, so that it works the same everywhere.\nprocess.umask(parseInt('22', 8))\n\nvar fs = require('fs')\nvar path = require('path')\n\nvar fstream = require('fstream')\nvar test = require('tap').test\n\nvar tar = require('../tar.js')\nvar file = path.resolve(__dirname, 'dir-normalization.tar')\nvar target = path.resolve(__dirname, 'tmp/dir-normalization-test')\nvar ee = 0\n\nvar expectEntries = [\n  { path: 'fixtures/',\n    mode: '755',\n    type: '5',\n    linkpath: ''\n  },\n  { path: 'fixtures/a/',\n    mode: '755',\n    type: '5',\n    linkpath: ''\n  },\n  { path: 'fixtures/the-chumbler',\n    mode: '755',\n    type: '2',\n    linkpath: path.resolve(target, 'a/b/c/d/the-chumbler'),\n  },\n  { path: 'fixtures/a/b/',\n    mode: '755',\n    type: '5',\n    linkpath: ''\n  },\n  { path: 'fixtures/a/x',\n    mode: '644',\n    type: '0',\n    linkpath: ''\n  },\n  { path: 'fixtures/a/b/c/',\n    mode: '755',\n    type: '5',\n    linkpath: ''\n  },\n  { path: 'fixtures/a/b/c/y',\n    mode: '755',\n    type: '2',\n    linkpath: '../../x',\n  }\n]\n\nvar ef = 0\nvar expectFiles = [\n  { path: '',\n    mode: '40755',\n    type: 'Directory',\n    depth: 0,\n    linkpath: undefined\n  },\n  { path: '/fixtures',\n    mode: '40755',\n    type: 'Directory',\n    depth: 1,\n    linkpath: undefined\n  },\n  { path: '/fixtures/a',\n    mode: '40755',\n    type: 'Directory',\n    depth: 2,\n    linkpath: undefined\n  },\n  { path: '/fixtures/a/b',\n    mode: '40755',\n    type: 'Directory',\n    depth: 3,\n    linkpath: undefined\n  },\n  { path: '/fixtures/a/b/c',\n    mode: '40755',\n    type: 'Directory',\n    depth: 4,\n    linkpath: undefined\n  },\n  { path: '/fixtures/a/b/c/y',\n    mode: '120755',\n    type: 'SymbolicLink',\n    depth: 5,\n    linkpath: '../../x'\n  },\n  { path: '/fixtures/a/x',\n    mode: '100644',\n    type: 'File',\n    depth: 3,\n    linkpath: undefined\n  },\n  { path: '/fixtures/the-chumbler',\n    mode: '120755',\n    type: 'SymbolicLink',\n    depth: 2,\n    linkpath: path.resolve(target, 'a/b/c/d/the-chumbler')\n  }\n]\n\ntest('preclean', function (t) {\n  require('rimraf').sync(path.join(__dirname, '/tmp/dir-normalization-test'))\n  t.pass('cleaned!')\n  t.end()\n})\n\ntest('extract test', function (t) {\n  var extract = tar.Extract(target)\n  var inp = fs.createReadStream(file)\n\n  inp.pipe(extract)\n\n  extract.on('end', function () {\n    t.equal(ee, expectEntries.length, 'should see ' + expectEntries.length + ' entries')\n\n    // should get no more entries after end\n    extract.removeAllListeners('entry')\n    extract.on('entry', function (e) {\n      t.fail('Should not get entries after end!')\n    })\n\n    next()\n  })\n\n  extract.on('entry', function (entry) {\n    var mode = entry.props.mode & (~parseInt('22', 8))\n    var found = {\n      path: entry.path,\n      mode: mode.toString(8),\n      type: entry.props.type,\n      linkpath: entry.props.linkpath,\n    }\n\n    var wanted = expectEntries[ee++]\n    t.equivalent(found, wanted, 'tar entry ' + ee + ' ' + (wanted && wanted.path))\n  })\n\n  function next () {\n    var r = fstream.Reader({\n      path: target,\n      type: 'Directory',\n      sort: 'alpha'\n    })\n\n    r.on('ready', function () {\n      foundEntry(r)\n    })\n\n    r.on('end', finish)\n\n    function foundEntry (entry) {\n      var p = entry.path.substr(target.length)\n      var mode = entry.props.mode & (~parseInt('22', 8))\n      var found = {\n        path: p,\n        mode: mode.toString(8),\n        type: entry.props.type,\n        depth: entry.props.depth,\n        linkpath: entry.props.linkpath\n      }\n\n      var wanted = expectFiles[ef++]\n      t.equivalent(found, wanted, 'unpacked file ' + ef + ' ' + (wanted && wanted.path))\n\n      entry.on('entry', foundEntry)\n    }\n\n    function finish () {\n      t.equal(ef, expectFiles.length, 'should have ' + ef + ' items')\n      t.end()\n    }\n  }\n})\n"]}