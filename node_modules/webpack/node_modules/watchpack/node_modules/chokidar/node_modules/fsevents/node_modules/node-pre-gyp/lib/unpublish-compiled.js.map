{"version":3,"sources":["unpublish.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,OAAP,GAAiB,UAAU,SAA3B;;AAEA,QAAQ,KAAR,GAAgB,iDAAhB;;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,MAAM,QAAQ,QAAR,CAAV;AACA,IAAI,aAAa,QAAQ,sBAAR,CAAjB;AACA,IAAI,WAAW,QAAQ,oBAAR,CAAf;AACA,IAAI,MAAM,QAAQ,KAAR,CAAV;AACA,IAAI,SAAS,QAAQ,IAAR,EAAc,cAAd,EAA6B,EAAC,KAAI,aAAL,EAA7B,CAAb;;AAEA,SAAS,SAAT,CAAmB,GAAnB,EAAwB,IAAxB,EAA8B,QAA9B,EAAwC;AACpC,QAAI,MAAM,QAAQ,SAAR,CAAV;AACA,QAAI,eAAe,KAAK,KAAL,CAAW,GAAG,YAAH,CAAgB,gBAAhB,CAAX,CAAnB;AACA,QAAI,OAAO,WAAW,QAAX,CAAoB,YAApB,EAAkC,IAAI,IAAtC,CAAX;AACA,aAAS,MAAT,CAAgB,KAAK,WAArB,EAAiC,MAAjC;AACA,QAAI,MAAJ,CAAW,MAAX,CAAkB,MAAlB;AACA,QAAI,WAAW,IAAI,OAAJ,CAAY,OAAO,MAAnB,EAA0B,KAAK,YAA/B,CAAf;AACA,QAAI,KAAM,IAAI,IAAI,EAAR,EAAV;AACA,QAAI,UAAU,EAAG,QAAQ,OAAO,MAAlB;AACG,aAAK;AADR,KAAd;AAGA,OAAG,UAAH,CAAc,OAAd,EAAuB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACvC,YAAI,OAAO,IAAI,IAAJ,IAAY,UAAvB,EAAmC;AAC/B,oBAAQ,GAAR,CAAY,MAAI,aAAa,IAAjB,GAAsB,uBAAtB,GAAgD,QAAQ,MAAxD,GAAiE,oBAAjE,GAAwF,QAAQ,GAA5G;AACA,mBAAO,UAAP;AACH,SAHD,MAGO,IAAG,GAAH,EAAQ;AACX,mBAAO,SAAS,GAAT,CAAP;AACH,SAFM,MAEA;AACH,gBAAI,IAAJ,CAAS,WAAT,EAAsB,KAAK,SAAL,CAAe,IAAf,CAAtB;AACA,eAAG,YAAH,CAAgB,OAAhB,EAAyB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACzC,oBAAI,GAAJ,EAAS,OAAO,SAAS,GAAT,CAAP;AACT,oBAAI,IAAJ,CAAS,KAAK,SAAL,CAAe,IAAf,CAAT;AACA,wBAAQ,GAAR,CAAY,MAAI,aAAa,IAAjB,GAAsB,6BAAtB,GAAsD,QAAQ,MAA9D,GAAuE,oBAAvE,GAA8F,QAAQ,GAAlH;AACA,uBAAO,UAAP;AACH,aALD;AAMH;AACJ,KAfD;AAgBH","file":"unpublish-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = exports = unpublish;\n\nexports.usage = 'Unpublishes pre-built binary (requires aws-sdk)';\n\nvar fs = require('fs');\nvar log = require('npmlog');\nvar versioning = require('./util/versioning.js');\nvar s3_setup = require('./util/s3_setup.js');\nvar url = require('url');\nvar config = require('rc')(\"node_pre_gyp\",{acl:\"public-read\"});\n\nfunction unpublish(gyp, argv, callback) {\n    var AWS = require(\"aws-sdk\");\n    var package_json = JSON.parse(fs.readFileSync('./package.json'));\n    var opts = versioning.evaluate(package_json, gyp.opts);\n    s3_setup.detect(opts.hosted_path,config);\n    AWS.config.update(config);\n    var key_name = url.resolve(config.prefix,opts.package_name);\n    var s3 =  new AWS.S3();\n    var s3_opts = {  Bucket: config.bucket,\n                     Key: key_name\n                  };\n    s3.headObject(s3_opts, function(err, meta) {\n        if (err && err.code == 'NotFound') {\n            console.log('['+package_json.name+'] Not found: https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n            return callback();\n        } else if(err) {\n            return callback(err);\n        } else {\n            log.info('unpublish', JSON.stringify(meta));\n            s3.deleteObject(s3_opts, function(err, resp) {\n                if (err) return callback(err);\n                log.info(JSON.stringify(resp));\n                console.log('['+package_json.name+'] Success: removed https://' + s3_opts.Bucket + '.s3.amazonaws.com/' + s3_opts.Key);\n                return callback();\n            });\n        }\n    });\n}\n"]}