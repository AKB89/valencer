{"version":3,"sources":["fsevents-handler.js"],"names":[],"mappings":"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","file":"fsevents-handler-compiled.js","sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar sysPath = require('path');\nvar readdirp = require('readdirp');\nvar fsevents;\ntry { fsevents = require('fsevents'); } catch (error) {}\n\n// fsevents instance helper functions\n\n// object to hold per-process fsevents instances\n// (may be shared across chokidar FSWatcher instances)\nvar FSEventsWatchers = Object.create(null);\n\n// Threshold of duplicate path prefixes at which to start\n// consolidating going forward\nvar consolidateThreshhold = 10;\n\n// Private function: Instantiates the fsevents interface\n\n// * path       - string, path to be watched\n// * callback   - function, called when fsevents is bound and ready\n\n// Returns new fsevents instance\nfunction createFSEventsInstance(path, callback) {\n  return (new fsevents(path)).on('fsevent', callback).start();\n}\n\n// Private function: Instantiates the fsevents interface or binds listeners\n// to an existing one covering the same file tree\n\n// * path       - string, path to be watched\n// * realPath   - string, real path (in case of symlinks)\n// * listener   - function, called when fsevents emits events\n// * rawEmitter - function, passes data to listeners of the 'raw' event\n\n// Returns close function\nfunction setFSEventsListener(path, realPath, listener, rawEmitter) {\n  var watchPath = sysPath.extname(path) ? sysPath.dirname(path) : path;\n  var watchContainer;\n  var parentPath = sysPath.dirname(watchPath);\n\n  // If we've accumulated a substantial number of paths that\n  // could have been consolidated by watching one directory\n  // above the current one, create a watcher on the parent\n  // path instead, so that we do consolidate going forward.\n  if (couldConsolidate(parentPath)) {\n    watchPath = parentPath;\n  }\n\n  var resolvedPath = sysPath.resolve(path);\n  var hasSymlink = resolvedPath !== realPath;\n  function filteredListener(fullPath, flags, info) {\n    if (hasSymlink) fullPath = fullPath.replace(realPath, resolvedPath);\n    if (\n      fullPath === resolvedPath ||\n      !fullPath.indexOf(resolvedPath + sysPath.sep)\n    ) listener(fullPath, flags, info);\n  }\n\n  // check if there is already a watcher on a parent path\n  // modifies `watchPath` to the parent path when it finds a match\n  function watchedParent() {\n    return Object.keys(FSEventsWatchers).some(function(watchedPath) {\n      // condition is met when indexOf returns 0\n      if (!realPath.indexOf(sysPath.resolve(watchedPath) + sysPath.sep)) {\n        watchPath = watchedPath;\n        return true;\n      }\n    });\n  }\n\n  if (watchPath in FSEventsWatchers || watchedParent()) {\n    watchContainer = FSEventsWatchers[watchPath];\n    watchContainer.listeners.push(filteredListener);\n  } else {\n    watchContainer = FSEventsWatchers[watchPath] = {\n      listeners: [filteredListener],\n      rawEmitters: [rawEmitter],\n      watcher: createFSEventsInstance(watchPath, function(fullPath, flags) {\n        var info = fsevents.getInfo(fullPath, flags);\n        watchContainer.listeners.forEach(function(listener) {\n          listener(fullPath, flags, info);\n        });\n        watchContainer.rawEmitters.forEach(function(emitter) {\n          emitter(info.event, fullPath, info);\n        });\n      })\n    };\n  }\n  var listenerIndex = watchContainer.listeners.length - 1;\n\n  // removes this instance's listeners and closes the underlying fsevents\n  // instance if there are no more listeners left\n  return function close() {\n    delete watchContainer.listeners[listenerIndex];\n    delete watchContainer.rawEmitters[listenerIndex];\n    if (!Object.keys(watchContainer.listeners).length) {\n      watchContainer.watcher.stop();\n      delete FSEventsWatchers[watchPath];\n    }\n  };\n}\n\n// Decide whether or not we should start a new higher-level\n// parent watcher\nfunction couldConsolidate(path) {\n  var keys = Object.keys(FSEventsWatchers);\n  var count = 0;\n\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    var watchPath = keys[i];\n    if (watchPath.indexOf(path) === 0) {\n      count++;\n      if (count >= consolidateThreshhold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// returns boolean indicating whether fsevents can be used\nfunction canUse() {\n  return fsevents && Object.keys(FSEventsWatchers).length < 128;\n}\n\n// determines subdirectory traversal levels from root to path\nfunction depth(path, root) {\n  var i = 0;\n  while (!path.indexOf(root) && (path = sysPath.dirname(path)) !== root) i++;\n  return i;\n}\n\n// fake constructor for attaching fsevents-specific prototype methods that\n// will be copied to FSWatcher's prototype\nfunction FsEventsHandler() {}\n\n// Private method: Handle symlinks encountered during directory scan\n\n// * wathPath   - string, file/dir path to be watched with fsevents\n// * realPath   - string, real path (in case of symlinks)\n// * transform  - function, path transformer\n// * globFilter - function, path filter in case a glob pattern was provided\n\n// Returns close function for the watcher instance\nFsEventsHandler.prototype._watchWithFsEvents =\nfunction(watchPath, realPath, transform, globFilter) {\n  if (this._isIgnored(watchPath)) return;\n  var watchCallback = function(fullPath, flags, info) {\n    if (\n      this.options.depth !== undefined &&\n      depth(fullPath, realPath) > this.options.depth\n    ) return;\n    var path = transform(sysPath.join(\n      watchPath, sysPath.relative(watchPath, fullPath)\n    ));\n    if (globFilter && !globFilter(path)) return;\n    // ensure directories are tracked\n    var parent = sysPath.dirname(path);\n    var item = sysPath.basename(path);\n    var watchedDir = this._getWatchedDir(\n      info.type === 'directory' ? path : parent\n    );\n    var checkIgnored = function(stats) {\n      if (this._isIgnored(path, stats)) {\n        this._ignoredPaths[path] = true;\n        if (stats && stats.isDirectory()) {\n          this._ignoredPaths[path + '/**/*'] = true;\n        }\n        return true;\n      } else {\n        delete this._ignoredPaths[path];\n        delete this._ignoredPaths[path + '/**/*'];\n      }\n    }.bind(this);\n\n    var handleEvent = function(event) {\n      if (checkIgnored()) return;\n\n      if (event === 'unlink') {\n        // suppress unlink events on never before seen files\n        if (info.type === 'directory' || watchedDir.has(item)) {\n          this._remove(parent, item);\n        }\n      } else {\n        if (event === 'add') {\n          // track new directories\n          if (info.type === 'directory') this._getWatchedDir(path);\n\n          if (info.type === 'symlink' && this.options.followSymlinks) {\n            // push symlinks back to the top of the stack to get handled\n            var curDepth = this.options.depth === undefined ?\n              undefined : depth(fullPath, realPath) + 1;\n            return this._addToFsEvents(path, false, true, curDepth);\n          } else {\n            // track new paths\n            // (other than symlinks being followed, which will be tracked soon)\n            this._getWatchedDir(parent).add(item);\n          }\n        }\n        var eventName = info.type === 'directory' ? event + 'Dir' : event;\n        this._emit(eventName, path);\n      }\n    }.bind(this);\n\n    function addOrChange() {\n      handleEvent(watchedDir.has(item) ? 'change' : 'add');\n    }\n    function checkFd() {\n      fs.open(path, 'r', function(error, fd) {\n        if (fd) fs.close(fd);\n        error && error.code !== 'EACCES' ?\n          handleEvent('unlink') : addOrChange();\n      });\n    }\n    // correct for wrong events emitted\n    var wrongEventFlags = [\n      69888, 70400, 71424, 72704, 73472, 131328, 131840, 262912\n    ];\n    if (wrongEventFlags.indexOf(flags) !== -1 || info.event === 'unknown') {\n      if (typeof this.options.ignored === 'function') {\n        fs.stat(path, function(error, stats) {\n          if (checkIgnored(stats)) return;\n          stats ? addOrChange() : handleEvent('unlink');\n        });\n      } else {\n        checkFd();\n      }\n    } else {\n      switch (info.event) {\n      case 'created':\n      case 'modified':\n        return addOrChange();\n      case 'deleted':\n      case 'moved':\n        return checkFd();\n      }\n    }\n  }.bind(this);\n\n  var closer = setFSEventsListener(\n    watchPath,\n    realPath,\n    watchCallback,\n    this.emit.bind(this, 'raw')\n  );\n\n  this._emitReady();\n  return closer;\n};\n\n// Private method: Handle symlinks encountered during directory scan\n\n// * linkPath   - string, path to symlink\n// * fullPath   - string, absolute path to the symlink\n// * transform  - function, pre-existing path transformer\n// * curDepth   - int, level of subdirectories traversed to where symlink is\n\n// Returns nothing\nFsEventsHandler.prototype._fsEventsSymlink =\nfunction(linkPath, fullPath, transform, curDepth) {\n  // don't follow the same symlink more than once\n  if (this._symlinkPaths[fullPath]) return;\n  else this._symlinkPaths[fullPath] = true;\n\n  this._readyCount++;\n\n  fs.realpath(linkPath, function(error, linkTarget) {\n    if (this._handleError(error) || this._isIgnored(linkTarget)) {\n      return this._emitReady();\n    }\n\n    this._readyCount++;\n\n    // add the linkTarget for watching with a wrapper for transform\n    // that causes emitted paths to incorporate the link's path\n    this._addToFsEvents(linkTarget || linkPath, function(path) {\n      var dotSlash = '.' + sysPath.sep;\n      var aliasedPath = linkPath;\n      if (linkTarget && linkTarget !== dotSlash) {\n        aliasedPath = path.replace(linkTarget, linkPath);\n      } else if (path !== dotSlash) {\n        aliasedPath = sysPath.join(linkPath, path);\n      }\n      return transform(aliasedPath);\n    }, false, curDepth);\n  }.bind(this));\n};\n\n// Private method: Handle added path with fsevents\n\n// * path       - string, file/directory path or glob pattern\n// * transform  - function, converts working path to what the user expects\n// * forceAdd   - boolean, ensure add is emitted\n// * priorDepth - int, level of subdirectories already traversed\n\n// Returns nothing\nFsEventsHandler.prototype._addToFsEvents =\nfunction(path, transform, forceAdd, priorDepth) {\n\n  // applies transform if provided, otherwise returns same value\n  var processPath = typeof transform === 'function' ?\n    transform : function(val) { return val; };\n\n  var emitAdd = function(newPath, stats) {\n    var pp = processPath(newPath);\n    var isDir = stats.isDirectory();\n    var dirObj = this._getWatchedDir(sysPath.dirname(pp));\n    var base = sysPath.basename(pp);\n\n    // ensure empty dirs get tracked\n    if (isDir) this._getWatchedDir(pp);\n\n    if (dirObj.has(base)) return;\n    dirObj.add(base);\n\n    if (!this.options.ignoreInitial || forceAdd === true) {\n      this._emit(isDir ? 'addDir' : 'add', pp, stats);\n    }\n  }.bind(this);\n\n  var wh = this._getWatchHelpers(path);\n\n  // evaluate what is at the path we're being asked to watch\n  fs[wh.statMethod](wh.watchPath, function(error, stats) {\n    if (this._handleError(error) || this._isIgnored(wh.watchPath, stats)) {\n      this._emitReady();\n      return this._emitReady();\n    }\n\n    if (stats.isDirectory()) {\n      // emit addDir unless this is a glob parent\n      if (!wh.globFilter) emitAdd(processPath(path), stats);\n\n      // don't recurse further if it would exceed depth setting\n      if (priorDepth && priorDepth > this.options.depth) return;\n\n      // scan the contents of the dir\n      readdirp({\n        root: wh.watchPath,\n        entryType: 'all',\n        fileFilter: wh.filterPath,\n        directoryFilter: wh.filterDir,\n        lstat: true,\n        depth: this.options.depth - (priorDepth || 0)\n      }).on('data', function(entry) {\n        // need to check filterPath on dirs b/c filterDir is less restrictive\n        if (entry.stat.isDirectory() && !wh.filterPath(entry)) return;\n\n        var joinedPath = sysPath.join(wh.watchPath, entry.path);\n        var fullPath = entry.fullPath;\n\n        if (wh.followSymlinks && entry.stat.isSymbolicLink()) {\n          // preserve the current depth here since it can't be derived from\n          // real paths past the symlink\n          var curDepth = this.options.depth === undefined ?\n            undefined : depth(joinedPath, sysPath.resolve(wh.watchPath)) + 1;\n\n          this._fsEventsSymlink(joinedPath, fullPath, processPath, curDepth);\n        } else {\n          emitAdd(joinedPath, entry.stat);\n        }\n      }.bind(this)).on('end', this._emitReady);\n    } else {\n      emitAdd(wh.watchPath, stats);\n      this._emitReady();\n    }\n  }.bind(this));\n\n  if (this.options.persistent) {\n    var initWatch = function(error, realPath) {\n      var closer = this._watchWithFsEvents(\n        wh.watchPath,\n        sysPath.resolve(realPath || wh.watchPath),\n        processPath,\n        wh.globFilter\n      );\n      if (closer) this._closers[path] = closer;\n    }.bind(this);\n\n    if (typeof transform === 'function') {\n      // realpath has already been resolved\n      initWatch();\n    } else {\n      fs.realpath(wh.watchPath, initWatch);\n    }\n  }\n};\n\nmodule.exports = FsEventsHandler;\nmodule.exports.canUse = canUse;\n"]}