{"version":3,"sources":["nodefs-handler.js"],"names":[],"mappings":"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","file":"nodefs-handler-compiled.js","sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar sysPath = require('path');\nvar readdirp = require('readdirp');\nvar isBinaryPath = require('is-binary-path');\n\n// fs.watch helpers\n\n// object to hold per-process fs.watch instances\n// (may be shared across chokidar FSWatcher instances)\nvar FsWatchInstances = Object.create(null);\n\n// Private function: Instantiates the fs.watch interface\n\n// * path       - string, path to be watched\n// * options    - object, options to be passed to fs.watch\n// * listener   - function, main event handler\n// * errHandler - function, handler which emits info about errors\n// * emitRaw    - function, handler which emits raw event data\n\n// Returns new fsevents instance\nfunction createFsWatchInstance(path, options, listener, errHandler, emitRaw) {\n  var handleEvent = function(rawEvent, evPath) {\n    listener(path);\n    emitRaw(rawEvent, evPath, {watchedPath: path});\n\n    // emit based on events occuring for files from a directory's watcher in\n    // case the file's watcher misses it (and rely on throttling to de-dupe)\n    if (evPath && path !== evPath) {\n      fsWatchBroadcast(\n        sysPath.resolve(path, evPath), 'listeners', sysPath.join(path, evPath)\n      );\n    }\n  };\n  try {\n    return fs.watch(path, options, handleEvent);\n  } catch (error) {\n    errHandler(error);\n  }\n}\n\n// Private function: Helper for passing fs.watch event data to a\n// collection of listeners\n\n// * fullPath   - string, absolute path bound to the fs.watch instance\n// * type       - string, listener type\n// * val[1..3]  - arguments to be passed to listeners\n\n// Returns nothing\nfunction fsWatchBroadcast(fullPath, type, val1, val2, val3) {\n  if (!FsWatchInstances[fullPath]) return;\n  FsWatchInstances[fullPath][type].forEach(function(listener) {\n    listener(val1, val2, val3);\n  });\n}\n\n// Private function: Instantiates the fs.watch interface or binds listeners\n// to an existing one covering the same file system entry\n\n// * path       - string, path to be watched\n// * fullPath   - string, absolute path\n// * options    - object, options to be passed to fs.watch\n// * handlers   - object, container for event listener functions\n\n// Returns close function\nfunction setFsWatchListener(path, fullPath, options, handlers) {\n  var listener = handlers.listener;\n  var errHandler = handlers.errHandler;\n  var rawEmitter = handlers.rawEmitter;\n  var container = FsWatchInstances[fullPath];\n  var watcher;\n  if (!options.persistent) {\n    watcher = createFsWatchInstance(\n      path, options, listener, errHandler, rawEmitter\n    );\n    return watcher.close.bind(watcher);\n  }\n  if (!container) {\n    watcher = createFsWatchInstance(\n      path,\n      options,\n      fsWatchBroadcast.bind(null, fullPath, 'listeners'),\n      errHandler, // no need to use broadcast here\n      fsWatchBroadcast.bind(null, fullPath, 'rawEmitters')\n    );\n    if (!watcher) return;\n    var broadcastErr = fsWatchBroadcast.bind(null, fullPath, 'errHandlers');\n    watcher.on('error', function(error) {\n      // Workaround for https://github.com/joyent/node/issues/4337\n      if (process.platform === 'win32' && error.code === 'EPERM') {\n        fs.open(path, 'r', function(err, fd) {\n          if (fd) fs.close(fd);\n          if (!err) broadcastErr(error);\n        });\n      } else {\n        broadcastErr(error);\n      }\n    });\n    container = FsWatchInstances[fullPath] = {\n      listeners: [listener],\n      errHandlers: [errHandler],\n      rawEmitters: [rawEmitter],\n      watcher: watcher\n    };\n  } else {\n    container.listeners.push(listener);\n    container.errHandlers.push(errHandler);\n    container.rawEmitters.push(rawEmitter);\n  }\n  var listenerIndex = container.listeners.length - 1;\n\n  // removes this instance's listeners and closes the underlying fs.watch\n  // instance if there are no more listeners left\n  return function close() {\n    delete container.listeners[listenerIndex];\n    delete container.errHandlers[listenerIndex];\n    delete container.rawEmitters[listenerIndex];\n    if (!Object.keys(container.listeners).length) {\n      container.watcher.close();\n      delete FsWatchInstances[fullPath];\n    }\n  };\n}\n\n// fs.watchFile helpers\n\n// object to hold per-process fs.watchFile instances\n// (may be shared across chokidar FSWatcher instances)\nvar FsWatchFileInstances = Object.create(null);\n\n// Private function: Instantiates the fs.watchFile interface or binds listeners\n// to an existing one covering the same file system entry\n\n// * path       - string, path to be watched\n// * fullPath   - string, absolute path\n// * options    - object, options to be passed to fs.watchFile\n// * handlers   - object, container for event listener functions\n\n// Returns close function\nfunction setFsWatchFileListener(path, fullPath, options, handlers) {\n  var listener = handlers.listener;\n  var rawEmitter = handlers.rawEmitter;\n  var container = FsWatchFileInstances[fullPath];\n  var listeners = [];\n  var rawEmitters = [];\n  if (\n    container && (\n      container.options.persistent < options.persistent ||\n      container.options.interval > options.interval\n    )\n  ) {\n    // \"Upgrade\" the watcher to persistence or a quicker interval.\n    // This creates some unlikely edge case issues if the user mixes\n    // settings in a very weird way, but solving for those cases\n    // doesn't seem worthwhile for the added complexity.\n    listeners = container.listeners;\n    rawEmitters = container.rawEmitters;\n    fs.unwatchFile(fullPath);\n    container = false;\n  }\n  if (!container) {\n    listeners.push(listener);\n    rawEmitters.push(rawEmitter);\n    container = FsWatchFileInstances[fullPath] = {\n      listeners: listeners,\n      rawEmitters: rawEmitters,\n      options: options,\n      watcher: fs.watchFile(fullPath, options, function(curr, prev) {\n        container.rawEmitters.forEach(function(rawEmitter) {\n          rawEmitter('change', fullPath, {curr: curr, prev: prev});\n        });\n        var currmtime = curr.mtime.getTime();\n        if (curr.size !== prev.size || currmtime > prev.mtime.getTime() || currmtime === 0) {\n          container.listeners.forEach(function(listener) {\n            listener(path, curr);\n          });\n        }\n      })\n    };\n  } else {\n    container.listeners.push(listener);\n    container.rawEmitters.push(rawEmitter);\n  }\n  var listenerIndex = container.listeners.length - 1;\n\n  // removes this instance's listeners and closes the underlying fs.watchFile\n  // instance if there are no more listeners left\n  return function close() {\n    delete container.listeners[listenerIndex];\n    delete container.rawEmitters[listenerIndex];\n    if (!Object.keys(container.listeners).length) {\n      fs.unwatchFile(fullPath);\n      delete FsWatchFileInstances[fullPath];\n    }\n  };\n}\n\n// fake constructor for attaching nodefs-specific prototype methods that\n// will be copied to FSWatcher's prototype\nfunction NodeFsHandler() {}\n\n// Private method: Watch file for changes with fs.watchFile or fs.watch.\n\n// * path     - string, path to file or directory.\n// * listener - function, to be executed on fs change.\n\n// Returns close function for the watcher instance\nNodeFsHandler.prototype._watchWithNodeFs =\nfunction(path, listener) {\n  var directory = sysPath.dirname(path);\n  var basename = sysPath.basename(path);\n  var parent = this._getWatchedDir(directory);\n  parent.add(basename);\n  var absolutePath = sysPath.resolve(path);\n  var options = {persistent: this.options.persistent};\n  if (!listener) listener = Function.prototype; // empty function\n\n  var closer;\n  if (this.options.usePolling) {\n    options.interval = this.enableBinaryInterval && isBinaryPath(basename) ?\n      this.options.binaryInterval : this.options.interval;\n    closer = setFsWatchFileListener(path, absolutePath, options, {\n      listener: listener,\n      rawEmitter: this.emit.bind(this, 'raw')\n    });\n  } else {\n    closer = setFsWatchListener(path, absolutePath, options, {\n      listener: listener,\n      errHandler: this._handleError.bind(this),\n      rawEmitter: this.emit.bind(this, 'raw')\n    });\n  }\n  return closer;\n};\n\n// Private method: Watch a file and emit add event if warranted\n\n// * file       - string, the file's path\n// * stats      - object, result of fs.stat\n// * initialAdd - boolean, was the file added at watch instantiation?\n// * callback   - function, called when done processing as a newly seen file\n\n// Returns close function for the watcher instance\nNodeFsHandler.prototype._handleFile =\nfunction(file, stats, initialAdd, callback) {\n  var dirname = sysPath.dirname(file);\n  var basename = sysPath.basename(file);\n  var parent = this._getWatchedDir(dirname);\n\n  // if the file is already being watched, do nothing\n  if (parent.has(basename)) return callback();\n\n  // kick off the watcher\n  var closer = this._watchWithNodeFs(file, function(path, newStats) {\n    if (!this._throttle('watch', file, 5)) return;\n    if (!newStats || newStats && newStats.mtime.getTime() === 0) {\n      fs.stat(file, function(error, newStats) {\n        // Fix issues where mtime is null but file is still present\n        if (error) {\n          this._remove(dirname, basename);\n        } else {\n          this._emit('change', file, newStats);\n        }\n      }.bind(this));\n    // add is about to be emitted if file not already tracked in parent\n    } else if (parent.has(basename)) {\n      this._emit('change', file, newStats);\n    }\n  }.bind(this));\n\n  // emit an add event if we're supposed to\n  if (!(initialAdd && this.options.ignoreInitial)) {\n    if (!this._throttle('add', file, 0)) return;\n    this._emit('add', file, stats);\n  }\n\n  if (callback) callback();\n  return closer;\n};\n\n// Private method: Handle symlinks encountered while reading a dir\n\n// * entry      - object, entry object returned by readdirp\n// * directory  - string, path of the directory being read\n// * path       - string, path of this item\n// * item       - string, basename of this item\n\n// Returns true if no more processing is needed for this entry.\nNodeFsHandler.prototype._handleSymlink =\nfunction(entry, directory, path, item) {\n  var full = entry.fullPath;\n  var dir = this._getWatchedDir(directory);\n\n  if (!this.options.followSymlinks) {\n    // watch symlink directly (don't follow) and detect changes\n    this._readyCount++;\n    fs.realpath(path, function(error, linkPath) {\n      if (dir.has(item)) {\n        if (this._symlinkPaths[full] !== linkPath) {\n          this._symlinkPaths[full] = linkPath;\n          this._emit('change', path, entry.stat);\n        }\n      } else {\n        dir.add(item);\n        this._symlinkPaths[full] = linkPath;\n        this._emit('add', path, entry.stat);\n      }\n      this._emitReady();\n    }.bind(this));\n    return true;\n  }\n\n  // don't follow the same symlink more than once\n  if (this._symlinkPaths[full]) return true;\n  else this._symlinkPaths[full] = true;\n};\n\n// Private method: Read directory to add / remove files from `@watched` list\n// and re-read it on change.\n\n// * dir        - string, fs path.\n// * stats      - object, result of fs.stat\n// * initialAdd - boolean, was the file added at watch instantiation?\n// * depth      - int, depth relative to user-supplied path\n// * target     - string, child path actually targeted for watch\n// * wh         - object, common watch helpers for this path\n// * callback   - function, called when dir scan is complete\n\n// Returns close function for the watcher instance\nNodeFsHandler.prototype._handleDir =\nfunction(dir, stats, initialAdd, depth, target, wh, callback) {\n  var parentDir = this._getWatchedDir(sysPath.dirname(dir));\n  var tracked = parentDir.has(sysPath.basename(dir));\n  if (!(initialAdd && this.options.ignoreInitial) && !target && !tracked) {\n    if (!wh.hasGlob || wh.globFilter(dir)) this._emit('addDir', dir, stats);\n  }\n\n  // ensure dir is tracked (harmless if redundant)\n  parentDir.add(sysPath.basename(dir));\n  this._getWatchedDir(dir);\n\n  var read = function(directory, initialAdd, done) {\n    // Normalize the directory name on Windows\n    directory = sysPath.join(directory, '');\n\n    if (!wh.hasGlob) {\n      var throttler = this._throttle('readdir', directory, 1000);\n      if (!throttler) return;\n    }\n\n    var previous = this._getWatchedDir(wh.path);\n    var current = [];\n\n    readdirp({\n      root: directory,\n      entryType: 'all',\n      fileFilter: wh.filterPath,\n      directoryFilter: wh.filterDir,\n      depth: 0,\n      lstat: true\n    }).on('data', function(entry) {\n      var item = entry.path;\n      var path = sysPath.join(directory, item);\n      current.push(item);\n\n      if (entry.stat.isSymbolicLink() &&\n        this._handleSymlink(entry, directory, path, item)) return;\n\n      // Files that present in current directory snapshot\n      // but absent in previous are added to watch list and\n      // emit `add` event.\n      if (item === target || !target && !previous.has(item)) {\n        this._readyCount++;\n\n        // ensure relativeness of path is preserved in case of watcher reuse\n        path = sysPath.join(dir, sysPath.relative(dir, path));\n\n        this._addToNodeFs(path, initialAdd, wh, depth + 1);\n      }\n    }.bind(this)).on('end', function() {\n      if (throttler) throttler.clear();\n      if (done) done();\n\n      // Files that absent in current directory snapshot\n      // but present in previous emit `remove` event\n      // and are removed from @watched[directory].\n      previous.children().filter(function(item) {\n        return item !== directory &&\n          current.indexOf(item) === -1 &&\n          // in case of intersecting globs;\n          // a path may have been filtered out of this readdir, but\n          // shouldn't be removed because it matches a different glob\n          (!wh.hasGlob || wh.filterPath({\n            fullPath: sysPath.resolve(directory, item)\n          }));\n      }).forEach(function(item) {\n        this._remove(directory, item);\n      }, this);\n    }.bind(this)).on('error', this._handleError.bind(this));\n  }.bind(this);\n\n  var closer;\n\n  if (this.options.depth == null || depth <= this.options.depth) {\n    if (!target) read(dir, initialAdd, callback);\n    closer = this._watchWithNodeFs(dir, function(dirPath, stats) {\n      // if current directory is removed, do nothing\n      if (stats && stats.mtime.getTime() === 0) return;\n\n      read(dirPath, false);\n    });\n  } else {\n    callback();\n  }\n  return closer;\n};\n\n// Private method: Handle added file, directory, or glob pattern.\n// Delegates call to _handleFile / _handleDir after checks.\n\n// * path       - string, path to file or directory.\n// * initialAdd - boolean, was the file added at watch instantiation?\n// * depth      - int, depth relative to user-supplied path\n// * target     - string, child path actually targeted for watch\n// * callback   - function, indicates whether the path was found or not\n\n// Returns nothing\nNodeFsHandler.prototype._addToNodeFs =\nfunction(path, initialAdd, priorWh, depth, target, callback) {\n  if (!callback) callback = Function.prototype;\n  var ready = this._emitReady;\n  if (this._isIgnored(path) || this.closed) {\n    ready();\n    return callback(null, false);\n  }\n\n  var wh = this._getWatchHelpers(path, depth);\n  if (!wh.hasGlob && priorWh) {\n    wh.hasGlob = priorWh.hasGlob;\n    wh.globFilter = priorWh.globFilter;\n    wh.filterPath = priorWh.filterPath;\n    wh.filterDir = priorWh.filterDir;\n  }\n\n  // evaluate what is at the path we're being asked to watch\n  fs[wh.statMethod](wh.watchPath, function(error, stats) {\n    if (this._handleError(error)) return callback(null, path);\n    if (this._isIgnored(wh.watchPath, stats)) {\n      ready();\n      return callback(null, false);\n    }\n\n    var initDir = function(dir, target) {\n      return this._handleDir(dir, stats, initialAdd, depth, target, wh, ready);\n    }.bind(this);\n\n    var closer;\n    if (stats.isDirectory()) {\n      closer = initDir(wh.watchPath, target);\n    } else if (stats.isSymbolicLink()) {\n      var parent = sysPath.dirname(wh.watchPath);\n      this._getWatchedDir(parent).add(wh.watchPath);\n      this._emit('add', wh.watchPath, stats);\n      closer = initDir(parent, path);\n\n      // preserve this symlink's target path\n      fs.realpath(path, function(error, targetPath) {\n        this._symlinkPaths[sysPath.resolve(path)] = targetPath;\n        ready();\n      }.bind(this));\n    } else {\n      closer = this._handleFile(wh.watchPath, stats, initialAdd, ready);\n    }\n\n    if (closer) this._closers[path] = closer;\n    callback(null, false);\n  }.bind(this));\n};\n\nmodule.exports = NodeFsHandler;\n"]}