{"version":3,"sources":["load-rules.js"],"names":[],"mappings":";;;;;AAKA;;;;;;AAMA,IAAI,KAAK,QAAQ,IAAR,CAAT;IACI,OAAO,QAAQ,MAAR,CADX;;;;;;;;;;;;AAaA,OAAO,OAAP,GAAiB,UAAS,QAAT,EAAmB,GAAnB,EAAwB;AACrC,QAAI,CAAC,QAAL,EAAe;AACX,mBAAW,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAX;AACH,KAFD,MAEO;AACH,mBAAW,KAAK,OAAL,CAAa,GAAb,EAAkB,QAAlB,CAAX;AACH;;AAED,QAAI,QAAQ,OAAO,MAAP,CAAc,IAAd,CAAZ;;AAEA,OAAG,WAAH,CAAe,QAAf,EAAyB,OAAzB,CAAiC,UAAS,IAAT,EAAe;AAC5C,YAAI,KAAK,OAAL,CAAa,IAAb,MAAuB,KAA3B,EAAkC;AAC9B;AACH;AACD,cAAM,KAAK,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAN,IAA2B,KAAK,IAAL,CAAU,QAAV,EAAoB,IAApB,CAA3B;AACH,KALD;AAMA,WAAO,KAAP;AACH,CAhBD","file":"load-rules-compiled.js","sourcesContent":["/**\n * @fileoverview Module for loading rules from files and directories.\n * @author Michael Ficarra\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nvar fs = require(\"fs\"),\n    path = require(\"path\");\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Load all rule modules from specified directory.\n * @param {string} [rulesDir] Path to rules directory, may be relative. Defaults to `lib/rules`.\n * @param {string} cwd Current working directory\n * @returns {Object} Loaded rule modules by rule ids (file names).\n */\nmodule.exports = function(rulesDir, cwd) {\n    if (!rulesDir) {\n        rulesDir = path.join(__dirname, \"rules\");\n    } else {\n        rulesDir = path.resolve(cwd, rulesDir);\n    }\n\n    var rules = Object.create(null);\n\n    fs.readdirSync(rulesDir).forEach(function(file) {\n        if (path.extname(file) !== \".js\") {\n            return;\n        }\n        rules[file.slice(0, -3)] = path.join(rulesDir, file);\n    });\n    return rules;\n};\n"]}