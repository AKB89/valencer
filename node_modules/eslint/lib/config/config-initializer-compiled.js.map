{"version":3,"sources":["config-initializer.js"],"names":[],"mappings":"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","file":"config-initializer-compiled.js","sourcesContent":["/**\n * @fileoverview Config initialization wizard.\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nvar util = require(\"util\"),\n    debug = require(\"debug\"),\n    lodash = require(\"lodash\"),\n    inquirer = require(\"inquirer\"),\n    ProgressBar = require(\"progress\"),\n    autoconfig = require(\"./autoconfig.js\"),\n    ConfigFile = require(\"./config-file\"),\n    ConfigOps = require(\"./config-ops\"),\n    getSourceCodeOfFiles = require(\"../util/source-code-util\").getSourceCodeOfFiles,\n    npmUtil = require(\"../util/npm-util\"),\n    recConfig = require(\"../../conf/eslint.json\"),\n    log = require(\"../logging\");\n\ndebug = debug(\"eslint:config-initializer\");\n\n//------------------------------------------------------------------------------\n// Private\n//------------------------------------------------------------------------------\n\n/* istanbul ignore next: hard to test fs function */\n/**\n * Create .eslintrc file in the current working directory\n * @param {Object} config object that contains user's answers\n * @param {string} format The file format to write to.\n * @returns {void}\n */\nfunction writeFile(config, format) {\n\n    // default is .js\n    var extname = \".js\";\n\n    if (format === \"YAML\") {\n        extname = \".yml\";\n    } else if (format === \"JSON\") {\n        extname = \".json\";\n    }\n\n\n    ConfigFile.write(config, \"./.eslintrc\" + extname);\n    log.info(\"Successfully created .eslintrc\" + extname + \" file in \" + process.cwd());\n\n    if (config.installedESLint) {\n        log.info(\"ESLint was installed locally. We recommend using this local copy instead of your globally-installed copy.\");\n    }\n}\n\n/**\n * Synchronously install necessary plugins, configs, parsers, etc. based on the config\n * @param   {Object} config  config object\n * @returns {void}\n */\nfunction installModules(config) {\n    var modules = [],\n        installStatus,\n        modulesToInstall;\n\n    // Create a list of modules which should be installed based on config\n    if (config.plugins) {\n        modules = modules.concat(config.plugins.map(function(name) {\n            return \"eslint-plugin-\" + name;\n        }));\n    }\n    if (config.extends && config.extends.indexOf(\"eslint:\") === -1) {\n        modules.push(\"eslint-config-\" + config.extends);\n    }\n\n    // Determine which modules are already installed\n    if (modules.length === 0) {\n        return;\n    }\n\n    // Add eslint to list in case user does not have it installed locally\n    modules.unshift(\"eslint\");\n\n    installStatus = npmUtil.checkDevDeps(modules);\n\n    // Install packages which aren't already installed\n    modulesToInstall = Object.keys(installStatus).filter(function(module) {\n        var notInstalled = installStatus[module] === false;\n\n        if (module === \"eslint\" && notInstalled) {\n            log.info(\"Local ESLint installation not found.\");\n            config.installedESLint = true;\n        }\n\n        return notInstalled;\n    });\n\n    if (modulesToInstall.length > 0) {\n        log.info(\"Installing \" + modulesToInstall.join(\", \"));\n        npmUtil.installSyncSaveDev(modulesToInstall);\n    }\n}\n\n/**\n * Set the `rules` of a config by examining a user's source code\n *\n * Note: This clones the config object and returns a new config to avoid mutating\n * the original config parameter.\n *\n * @param   {Object} answers  answers received from inquirer\n * @param   {Object} config   config object\n * @returns {Object}          config object with configured rules\n */\nfunction configureRules(answers, config) {\n    var BAR_TOTAL = 20,\n        BAR_SOURCE_CODE_TOTAL = 4;\n\n    var newConfig = lodash.assign({}, config),\n        bar,\n        patterns,\n        sourceCodes,\n        fileQty,\n        registry,\n        failingRegistry,\n        disabledConfigs = {},\n        singleConfigs,\n        specTwoConfigs,\n        specThreeConfigs,\n        defaultConfigs;\n\n    // Set up a progress bar, as this process can take a long time\n    bar = new ProgressBar(\"Determining Config: :percent [:bar] :elapseds elapsed, eta :etas \", {\n        width: 30,\n        total: BAR_TOTAL\n    });\n    bar.tick(0); // Shows the progress bar\n\n    // Get the SourceCode of all chosen files\n    patterns = answers.patterns.split(/[\\s]+/);\n    try {\n        sourceCodes = getSourceCodeOfFiles(patterns, { baseConfig: newConfig, useEslintrc: false }, function(total) {\n            bar.tick((BAR_SOURCE_CODE_TOTAL / total));\n        });\n    } catch (e) {\n        log.info(\"\\n\");\n        throw e;\n    }\n    fileQty = Object.keys(sourceCodes).length;\n    if (fileQty === 0) {\n        log.info(\"\\n\");\n        throw new Error(\"Automatic Configuration failed.  No files were able to be parsed.\");\n    }\n\n    // Create a registry of rule configs\n    registry = new autoconfig.Registry();\n    registry.populateFromCoreRules();\n\n    // Lint all files with each rule config in the registry\n    registry = registry.lintSourceCode(sourceCodes, newConfig, function(total) {\n        bar.tick((BAR_TOTAL - BAR_SOURCE_CODE_TOTAL) / total); // Subtract out ticks used at beginning\n    });\n    debug(\"\\nRegistry: \" + util.inspect(registry.rules, {depth: null}));\n\n    // Create a list of recommended rules, because we don't want to disable them\n    var recRules = Object.keys(recConfig.rules).filter(function(ruleId) {\n        return ConfigOps.isErrorSeverity(recConfig.rules[ruleId]);\n    });\n\n    // Find and disable rules which had no error-free configuration\n    failingRegistry = registry.getFailingRulesRegistry();\n\n    Object.keys(failingRegistry.rules).forEach(function(ruleId) {\n\n        // If the rule is recommended, set it to error, otherwise disable it\n        disabledConfigs[ruleId] = (recRules.indexOf(ruleId) !== -1) ? 2 : 0;\n    });\n\n    // Now that we know which rules to disable, strip out configs with errors\n    registry = registry.stripFailingConfigs();\n\n    // If there is only one config that results in no errors for a rule, we should use it.\n    // createConfig will only add rules that have one configuration in the registry.\n    singleConfigs = registry.createConfig().rules;\n\n    // The \"sweet spot\" for number of options in a config seems to be two (severity plus one option).\n    // Very often, a third option (usually an object) is available to address\n    // edge cases, exceptions, or unique situations. We will prefer to use a config with\n    // specificity of two.\n    specTwoConfigs = registry.filterBySpecificity(2).createConfig().rules;\n\n    // Maybe a specific combination using all three options works\n    specThreeConfigs = registry.filterBySpecificity(3).createConfig().rules;\n\n    // If all else fails, try to use the default (severity only)\n    defaultConfigs = registry.filterBySpecificity(1).createConfig().rules;\n\n    // Combine configs in reverse priority order (later take precedence)\n    newConfig.rules = lodash.assign({}, disabledConfigs, defaultConfigs, specThreeConfigs, specTwoConfigs, singleConfigs);\n\n    // Make sure progress bar has finished (floating point rounding)\n    bar.update(BAR_TOTAL);\n\n    // Log out some stats to let the user know what happened\n    var finalRuleIds = Object.keys(newConfig.rules),\n        totalRules = finalRuleIds.length;\n    var enabledRules = finalRuleIds.filter(function(ruleId) {\n        return (newConfig.rules[ruleId] !== 0);\n    }).length;\n    var resultMessage = [\n        \"\\nEnabled \" + enabledRules + \" out of \" + totalRules,\n        \"rules based on \" + fileQty,\n        \"file\" + ((fileQty === 1) ? \".\" : \"s.\")\n    ].join(\" \");\n\n    log.info(resultMessage);\n\n    ConfigOps.normalizeToStrings(newConfig);\n    return newConfig;\n}\n\n/**\n * process user's answers and create config object\n * @param {Object} answers answers received from inquirer\n * @returns {Object} config object\n */\nfunction processAnswers(answers) {\n    var config = {rules: {}, env: {}};\n\n    if (answers.es6) {\n        config.env.es6 = true;\n        if (answers.modules) {\n            config.parserOptions = config.parserOptions || {};\n            config.parserOptions.sourceType = \"module\";\n        }\n    }\n    if (answers.commonjs) {\n        config.env.commonjs = true;\n    }\n    answers.env.forEach(function(env) {\n        config.env[env] = true;\n    });\n    if (answers.jsx) {\n        config.parserOptions = config.parserOptions || {};\n        config.parserOptions.ecmaFeatures = config.parserOptions.ecmaFeatures || {};\n        config.parserOptions.ecmaFeatures.jsx = true;\n        if (answers.react) {\n            config.plugins = [\"react\"];\n            config.parserOptions.ecmaFeatures.experimentalObjectRestSpread = true;\n        }\n    }\n\n    if (answers.source === \"prompt\") {\n        config.extends = \"eslint:recommended\";\n        config.rules.indent = [\"error\", answers.indent];\n        config.rules.quotes = [\"error\", answers.quotes];\n        config.rules[\"linebreak-style\"] = [\"error\", answers.linebreak];\n        config.rules.semi = [\"error\", answers.semi ? \"always\" : \"never\"];\n    }\n\n    installModules(config);\n\n    if (answers.source === \"auto\") {\n        config = configureRules(answers, config);\n        config = autoconfig.extendFromRecommended(config);\n    }\n\n    ConfigOps.normalizeToStrings(config);\n    return config;\n}\n\n/**\n * process user's style guide of choice and return an appropriate config object.\n * @param {string} guide name of the chosen style guide\n * @returns {Object} config object\n */\nfunction getConfigForStyleGuide(guide) {\n    var guides = {\n        google: {extends: \"google\"},\n        airbnb: {extends: \"airbnb\", plugins: [\"react\"]},\n        standard: {extends: \"standard\", plugins: [\"standard\"]}\n    };\n\n    if (!guides[guide]) {\n        throw new Error(\"You referenced an unsupported guide.\");\n    }\n\n    installModules(guides[guide]);\n\n    return guides[guide];\n}\n\n/* istanbul ignore next: no need to test inquirer*/\n/**\n * Ask use a few questions on command prompt\n * @param {function} callback callback function when file has been written\n * @returns {void}\n */\nfunction promptUser(callback) {\n    var config;\n\n    inquirer.prompt([\n        {\n            type: \"list\",\n            name: \"source\",\n            message: \"How would you like to configure ESLint?\",\n            default: \"prompt\",\n            choices: [\n                {name: \"Answer questions about your style\", value: \"prompt\"},\n                {name: \"Use a popular style guide\", value: \"guide\"},\n                {name: \"Inspect your JavaScript file(s)\", value: \"auto\"}\n            ]\n        },\n        {\n            type: \"list\",\n            name: \"styleguide\",\n            message: \"Which style guide do you want to follow?\",\n            choices: [{name: \"Google\", value: \"google\"}, {name: \"AirBnB\", value: \"airbnb\"}, {name: \"Standard\", value: \"standard\"}],\n            when: function(answers) {\n                return answers.source === \"guide\";\n            }\n        },\n        {\n            type: \"input\",\n            name: \"patterns\",\n            message: \"Which file(s), path(s), or glob(s) should be examined?\",\n            when: function(answers) {\n                return (answers.source === \"auto\");\n            },\n            validate: function(input) {\n                if (input.trim().length === 0 && input.trim() !== \",\") {\n                    return \"You must tell us what code to examine. Try again.\";\n                }\n                return true;\n            }\n        },\n        {\n            type: \"list\",\n            name: \"format\",\n            message: \"What format do you want your config file to be in?\",\n            default: \"JavaScript\",\n            choices: [\"JavaScript\", \"YAML\", \"JSON\"],\n            when: function(answers) {\n                return (answers.source === \"guide\" || answers.source === \"auto\");\n            }\n        }\n    ], function(earlyAnswers) {\n\n        // early exit if you are using a style guide\n        if (earlyAnswers.source === \"guide\") {\n            try {\n                config = getConfigForStyleGuide(earlyAnswers.styleguide);\n                writeFile(config, earlyAnswers.format);\n            } catch (err) {\n                callback(err);\n                return;\n            }\n            return;\n        }\n\n        // continue with the questions otherwise...\n        inquirer.prompt([\n            {\n                type: \"confirm\",\n                name: \"es6\",\n                message: \"Are you using ECMAScript 6 features?\",\n                default: false\n            },\n            {\n                type: \"confirm\",\n                name: \"modules\",\n                message: \"Are you using ES6 modules?\",\n                default: false,\n                when: function(answers) {\n                    return answers.es6 === true;\n                }\n            },\n            {\n                type: \"checkbox\",\n                name: \"env\",\n                message: \"Where will your code run?\",\n                default: [\"browser\"],\n                choices: [{name: \"Browser\", value: \"browser\"}, {name: \"Node\", value: \"node\"}]\n            },\n            {\n                type: \"confirm\",\n                name: \"commonjs\",\n                message: \"Do you use CommonJS?\",\n                default: false,\n                when: function(answers) {\n                    return answers.env.some(function(env) {\n                        return env === \"browser\";\n                    });\n                }\n            },\n            {\n                type: \"confirm\",\n                name: \"jsx\",\n                message: \"Do you use JSX?\",\n                default: false\n            },\n            {\n                type: \"confirm\",\n                name: \"react\",\n                message: \"Do you use React\",\n                default: false,\n                when: function(answers) {\n                    return answers.jsx;\n                }\n            }\n        ], function(secondAnswers) {\n\n            // early exit if you are using automatic style generation\n            if (earlyAnswers.source === \"auto\") {\n                try {\n                    var combinedAnswers = lodash.assign({}, earlyAnswers, secondAnswers);\n\n                    config = processAnswers(combinedAnswers);\n                    installModules(config);\n                    writeFile(config, earlyAnswers.format);\n                } catch (err) {\n                    callback(err);\n                    return;\n                }\n                return;\n            }\n\n            // continue with the style questions otherwise...\n            inquirer.prompt([\n                {\n                    type: \"list\",\n                    name: \"indent\",\n                    message: \"What style of indentation do you use?\",\n                    default: \"tab\",\n                    choices: [{name: \"Tabs\", value: \"tab\"}, {name: \"Spaces\", value: 4}]\n                },\n                {\n                    type: \"list\",\n                    name: \"quotes\",\n                    message: \"What quotes do you use for strings?\",\n                    default: \"double\",\n                    choices: [{name: \"Double\", value: \"double\"}, {name: \"Single\", value: \"single\"}]\n                },\n                {\n                    type: \"list\",\n                    name: \"linebreak\",\n                    message: \"What line endings do you use?\",\n                    default: \"unix\",\n                    choices: [{name: \"Unix\", value: \"unix\"}, {name: \"Windows\", value: \"windows\"}]\n                },\n                {\n                    type: \"confirm\",\n                    name: \"semi\",\n                    message: \"Do you require semicolons?\",\n                    default: true\n                },\n                {\n                    type: \"list\",\n                    name: \"format\",\n                    message: \"What format do you want your config file to be in?\",\n                    default: \"JavaScript\",\n                    choices: [\"JavaScript\", \"YAML\", \"JSON\"]\n                }\n            ], function(answers) {\n                try {\n                    var totalAnswers = lodash.assign({}, earlyAnswers, secondAnswers, answers);\n\n                    config = processAnswers(totalAnswers);\n                    installModules(config);\n                    writeFile(config, answers.format);\n                } catch (err) {\n                    callback(err);\n                    return;\n                }\n                return;\n            });\n        });\n    });\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nvar init = {\n    getConfigForStyleGuide: getConfigForStyleGuide,\n    processAnswers: processAnswers,\n    initializeConfig: /* istanbul ignore next */ function(callback) {\n        promptUser(callback);\n    }\n};\n\nmodule.exports = init;\n"]}