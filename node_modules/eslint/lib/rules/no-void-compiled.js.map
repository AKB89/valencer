{"version":3,"sources":["no-void.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,2BADX;AAEF,sBAAU,gBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,UAAS,OAAT,EAAkB;;;;;;AAMtB,eAAO;AACH,6BAAiB,UAAS,IAAT,EAAe;AAC5B,oBAAI,KAAK,QAAL,KAAkB,MAAtB,EAA8B;AAC1B,4BAAQ,MAAR,CAAe,IAAf,EAAqB,8CAArB;AACH;AACJ;AALE,SAAP;AAQH;AAzBY,CAAjB","file":"no-void-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to disallow use of void operator.\n * @author Mike Sidorov\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow `void` operators\",\n            category: \"Best Practices\",\n            recommended: false\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n\n        //--------------------------------------------------------------------------\n        // Public\n        //--------------------------------------------------------------------------\n\n        return {\n            UnaryExpression: function(node) {\n                if (node.operator === \"void\") {\n                    context.report(node, \"Expected 'undefined' and instead saw 'void'.\");\n                }\n            }\n        };\n\n    }\n};\n"]}