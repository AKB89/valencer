{"version":3,"sources":["func-style.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,6EADX;AAEF,sBAAU,kBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ,CACJ;AACI,kBAAM,CAAC,aAAD,EAAgB,YAAhB;AADV,SADI,EAIJ;AACI,kBAAM,QADV;AAEI,wBAAY;AACR,qCAAqB;AACjB,0BAAM;AADW;AADb,aAFhB;AAOI,kCAAsB;AAP1B,SAJI;AAPN,KADO;;AAwBb,YAAQ,UAAS,OAAT,EAAkB;;AAEtB,YAAI,QAAQ,QAAQ,OAAR,CAAgB,CAAhB,CAAZ;YACI,sBAAsB,QAAQ,OAAR,CAAgB,CAAhB,KAAsB,QAAQ,OAAR,CAAgB,CAAhB,EAAmB,mBAAnB,KAA2C,IAD3F;YAEI,sBAAuB,UAAU,aAFrC;YAGI,QAAQ,EAHZ;;AAKA,YAAI,eAAe;AACf,qBAAS,YAAW;AAChB,wBAAQ,EAAR;AACH,aAHc;;AAKf,iCAAqB,UAAS,IAAT,EAAe;AAChC,sBAAM,IAAN,CAAW,KAAX;;AAEA,oBAAI,CAAC,mBAAD,IAAwB,KAAK,MAAL,CAAY,IAAZ,KAAqB,0BAAjD,EAA6E;AACzE,4BAAQ,MAAR,CAAe,IAAf,EAAqB,iCAArB;AACH;AACJ,aAXc;AAYf,wCAA4B,YAAW;AACnC,sBAAM,GAAN;AACH,aAdc;;AAgBf,gCAAoB,UAAS,IAAT,EAAe;AAC/B,sBAAM,IAAN,CAAW,KAAX;;AAEA,oBAAI,uBAAuB,KAAK,MAAL,CAAY,IAAZ,KAAqB,oBAAhD,EAAsE;AAClE,4BAAQ,MAAR,CAAe,KAAK,MAApB,EAA4B,kCAA5B;AACH;AACJ,aAtBc;AAuBf,uCAA2B,YAAW;AAClC,sBAAM,GAAN;AACH,aAzBc;;AA2Bf,4BAAgB,YAAW;AACvB,oBAAI,MAAM,MAAN,GAAe,CAAnB,EAAsB;AAClB,0BAAM,MAAM,MAAN,GAAe,CAArB,IAA0B,IAA1B;AACH;AACJ;AA/Bc,SAAnB;;AAkCA,YAAI,CAAC,mBAAL,EAA0B;AACtB,yBAAa,uBAAb,GAAuC,YAAW;AAC9C,sBAAM,IAAN,CAAW,KAAX;AACH,aAFD;;AAIA,yBAAa,8BAAb,IAA+C,UAAS,IAAT,EAAe;AAC1D,oBAAI,cAAc,MAAM,GAAN,EAAlB;;AAEA,oBAAI,uBAAuB,CAAC,WAAxB,IAAuC,KAAK,MAAL,CAAY,IAAZ,KAAqB,oBAAhE,EAAsF;AAClF,4BAAQ,MAAR,CAAe,KAAK,MAApB,EAA4B,kCAA5B;AACH;AACJ,aAND;AAOH;;AAED,eAAO,YAAP;AAEH;AAjFY,CAAjB","file":"func-style-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to enforce a particular function style\n * @author Nicholas C. Zakas\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"enforce the consistent use of either `function` declarations or expressions\",\n            category: \"Stylistic Issues\",\n            recommended: false\n        },\n\n        schema: [\n            {\n                enum: [\"declaration\", \"expression\"]\n            },\n            {\n                type: \"object\",\n                properties: {\n                    allowArrowFunctions: {\n                        type: \"boolean\"\n                    }\n                },\n                additionalProperties: false\n            }\n        ]\n    },\n\n    create: function(context) {\n\n        var style = context.options[0],\n            allowArrowFunctions = context.options[1] && context.options[1].allowArrowFunctions === true,\n            enforceDeclarations = (style === \"declaration\"),\n            stack = [];\n\n        var nodesToCheck = {\n            Program: function() {\n                stack = [];\n            },\n\n            FunctionDeclaration: function(node) {\n                stack.push(false);\n\n                if (!enforceDeclarations && node.parent.type !== \"ExportDefaultDeclaration\") {\n                    context.report(node, \"Expected a function expression.\");\n                }\n            },\n            \"FunctionDeclaration:exit\": function() {\n                stack.pop();\n            },\n\n            FunctionExpression: function(node) {\n                stack.push(false);\n\n                if (enforceDeclarations && node.parent.type === \"VariableDeclarator\") {\n                    context.report(node.parent, \"Expected a function declaration.\");\n                }\n            },\n            \"FunctionExpression:exit\": function() {\n                stack.pop();\n            },\n\n            ThisExpression: function() {\n                if (stack.length > 0) {\n                    stack[stack.length - 1] = true;\n                }\n            }\n        };\n\n        if (!allowArrowFunctions) {\n            nodesToCheck.ArrowFunctionExpression = function() {\n                stack.push(false);\n            };\n\n            nodesToCheck[\"ArrowFunctionExpression:exit\"] = function(node) {\n                var hasThisExpr = stack.pop();\n\n                if (enforceDeclarations && !hasThisExpr && node.parent.type === \"VariableDeclarator\") {\n                    context.report(node.parent, \"Expected a function declaration.\");\n                }\n            };\n        }\n\n        return nodesToCheck;\n\n    }\n};\n"]}