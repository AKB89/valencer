{"version":3,"sources":["no-undef.js"],"names":[],"mappings":";;;;AAIA;;;;;;;;;;;;AAWA,SAAS,iBAAT,CAA2B,IAA3B,EAAiC;AAC7B,QAAI,SAAS,KAAK,MAAlB;;AAEA,WAAO,OAAO,IAAP,KAAgB,iBAAhB,IAAqC,OAAO,QAAP,KAAoB,QAAhE;AACH;;;;;;AAMD,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,qFADX;AAEF,sBAAU,WAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ,CACJ;AACI,kBAAM,QADV;AAEI,wBAAY;AACR,wBAAQ;AACJ,0BAAM;AADF;AADA,aAFhB;AAOI,kCAAsB;AAP1B,SADI;AAPN,KADO;;AAqBb,YAAQ,UAAS,OAAT,EAAkB;AACtB,YAAI,UAAU,QAAQ,OAAR,CAAgB,CAAhB,CAAd;AACA,YAAI,iBAAiB,WAAW,QAAQ,MAAR,KAAmB,IAA9B,IAAsC,KAA3D;;AAEA,eAAO;AACH,4BAAgB,Y,UAAqB;AACjC,oBAAI,cAAc,QAAQ,QAAR,EAAlB;;AAEA,4BAAY,OAAZ,CAAoB,OAApB,CAA4B,UAAS,GAAT,EAAc;AACtC,wBAAI,aAAa,IAAI,UAArB;;AAEA,wBAAI,CAAC,cAAD,IAAmB,kBAAkB,UAAlB,CAAvB,EAAsD;AAClD;AACH;;AAED,4BAAQ,MAAR,CAAe;AACX,8BAAM,UADK;AAEX,iCAAS,4BAFE;AAGX,8BAAM;AAHK,qBAAf;AAKH,iBAZD;AAaH;AAjBE,SAAP;AAmBH;AA5CY,CAAjB","file":"no-undef-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag references to undeclared variables.\n * @author Mark Macdonald\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Checks if the given node is the argument of a typeof operator.\n * @param {ASTNode} node The AST node being checked.\n * @returns {boolean} Whether or not the node is the argument of a typeof operator.\n */\nfunction hasTypeOfOperator(node) {\n    var parent = node.parent;\n\n    return parent.type === \"UnaryExpression\" && parent.operator === \"typeof\";\n}\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow the use of undeclared variables unless mentioned in `/*global */` comments\",\n            category: \"Variables\",\n            recommended: true\n        },\n\n        schema: [\n            {\n                type: \"object\",\n                properties: {\n                    typeof: {\n                        type: \"boolean\"\n                    }\n                },\n                additionalProperties: false\n            }\n        ]\n    },\n\n    create: function(context) {\n        var options = context.options[0];\n        var considerTypeOf = options && options.typeof === true || false;\n\n        return {\n            \"Program:exit\": function(/* node */) {\n                var globalScope = context.getScope();\n\n                globalScope.through.forEach(function(ref) {\n                    var identifier = ref.identifier;\n\n                    if (!considerTypeOf && hasTypeOfOperator(identifier)) {\n                        return;\n                    }\n\n                    context.report({\n                        node: identifier,\n                        message: \"'{{name}}' is not defined.\",\n                        data: identifier\n                    });\n                });\n            }\n        };\n    }\n};\n"]}