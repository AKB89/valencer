{"version":3,"sources":["no-script-url.js"],"names":[],"mappings":";;;;;;;AAOA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,sBADX;AAEF,sBAAU,gBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,UAAS,OAAT,EAAkB;;AAEtB,eAAO;;AAEH,qBAAS,UAAS,IAAT,EAAe;;AAEpB,oBAAI,KAAJ;;AAEA,oBAAI,KAAK,KAAL,IAAc,OAAO,KAAK,KAAZ,KAAsB,QAAxC,EAAkD;AAC9C,4BAAQ,KAAK,KAAL,CAAW,WAAX,EAAR;;AAEA,wBAAI,MAAM,OAAN,CAAc,aAAd,MAAiC,CAArC,EAAwC;AACpC,gCAAQ,MAAR,CAAe,IAAf,EAAqB,+BAArB;AACH;AACJ;AACJ;AAbE,SAAP;AAgBH;AA7BY,CAAjB","file":"no-script-url-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag when using javascript: urls\n * @author Ilya Volodin\n */\n/* jshint scripturl: true */\n/* eslint no-script-url: 0 */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow `javascript\",\n            category: \"Best Practices\",\n            recommended: false\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n\n        return {\n\n            Literal: function(node) {\n\n                var value;\n\n                if (node.value && typeof node.value === \"string\") {\n                    value = node.value.toLowerCase();\n\n                    if (value.indexOf(\"javascript:\") === 0) {\n                        context.report(node, \"Script URL is a form of eval.\");\n                    }\n                }\n            }\n        };\n\n    }\n};\n"]}