{"version":3,"sources":["no-restricted-modules.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,qDADX;AAEF,sBAAU,sBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AACJ,kBAAM,OADF;AAEJ,mBAAO;AACH,sBAAM;AADH,aAFH;AAKJ,yBAAa;AALT;AAPN,KADO;;AAiBb,YAAQ,gBAAS,OAAT,EAAkB;;;AAGtB,YAAI,oBAAoB,QAAQ,OAAhC;;;AAGA,YAAI,kBAAkB,MAAlB,KAA6B,CAAjC,EAAoC;AAChC,mBAAO,EAAP;AACH;;;;;;;AAOD,iBAAS,QAAT,CAAkB,IAAlB,EAAwB;AACpB,mBAAO,QAAQ,KAAK,IAAL,KAAc,SAAtB,IAAmC,OAAO,KAAK,KAAZ,KAAsB,QAAhE;AACH;;;;;;;AAOD,iBAAS,aAAT,CAAuB,IAAvB,EAA6B;AACzB,mBAAO,KAAK,MAAL,CAAY,IAAZ,KAAqB,YAArB,IAAqC,KAAK,MAAL,CAAY,IAAZ,KAAqB,SAAjE;AACH;;;;;;;AAOD,iBAAS,uBAAT,CAAiC,IAAjC,EAAuC;AACnC,gBAAI,UAAJ;;;AAGA,gBAAI,KAAK,SAAL,CAAe,MAAf,IAAyB,SAAS,KAAK,SAAL,CAAe,CAAf,CAAT,CAA7B,EAA0D;AACtD,oBAAI,gBAAgB,KAAK,SAAL,CAAe,CAAf,EAAkB,KAAlB,CAAwB,IAAxB,EAApB;;;AAGA,oBAAI,kBAAkB,OAAlB,CAA0B,aAA1B,MAA6C,CAAC,CAAlD,EAAqD;AACjD,iCAAa,aAAb;AACH;AACJ;;AAED,mBAAO,UAAP;AACH;;AAED,eAAO;AACH,4BAAgB,wBAAS,IAAT,EAAe;AAC3B,oBAAI,cAAc,IAAd,CAAJ,EAAyB;AACrB,wBAAI,uBAAuB,wBAAwB,IAAxB,CAA3B;;AAEA,wBAAI,oBAAJ,EAA0B;AACtB,gCAAQ,MAAR,CAAe,IAAf,EAAqB,wDAArB,EAA+E;AAC3E,wCAAY;AAD+D,yBAA/E;AAGH;AACJ;AACJ;AAXE,SAAP;AAaH;AA/EY,CAAjB","file":"no-restricted-modules-compiled.js","sourcesContent":["/**\n * @fileoverview Restrict usage of specified node modules.\n * @author Christian Schulz\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow specified modules when loaded by `require`\",\n            category: \"Node.js and CommonJS\",\n            recommended: false\n        },\n\n        schema: {\n            type: \"array\",\n            items: {\n                type: \"string\"\n            },\n            uniqueItems: true\n        }\n    },\n\n    create: function(context) {\n\n        // trim restricted module names\n        var restrictedModules = context.options;\n\n        // if no modules are restricted we don't need to check the CallExpressions\n        if (restrictedModules.length === 0) {\n            return {};\n        }\n\n        /**\n         * Function to check if a node is a string literal.\n         * @param {ASTNode} node The node to check.\n         * @returns {boolean} If the node is a string literal.\n         */\n        function isString(node) {\n            return node && node.type === \"Literal\" && typeof node.value === \"string\";\n        }\n\n        /**\n         * Function to check if a node is a require call.\n         * @param {ASTNode} node The node to check.\n         * @returns {boolean} If the node is a require call.\n         */\n        function isRequireCall(node) {\n            return node.callee.type === \"Identifier\" && node.callee.name === \"require\";\n        }\n\n        /**\n         * Function to check if a node has an argument that is an restricted module and return its name.\n         * @param {ASTNode} node The node to check\n         * @returns {undefined|String} restricted module name or undefined if node argument isn't restricted.\n         */\n        function getRestrictedModuleName(node) {\n            var moduleName;\n\n            // node has arguments and first argument is string\n            if (node.arguments.length && isString(node.arguments[0])) {\n                var argumentValue = node.arguments[0].value.trim();\n\n                // check if argument value is in restricted modules array\n                if (restrictedModules.indexOf(argumentValue) !== -1) {\n                    moduleName = argumentValue;\n                }\n            }\n\n            return moduleName;\n        }\n\n        return {\n            CallExpression: function(node) {\n                if (isRequireCall(node)) {\n                    var restrictedModuleName = getRestrictedModuleName(node);\n\n                    if (restrictedModuleName) {\n                        context.report(node, \"'{{moduleName}}' module is restricted from being used.\", {\n                            moduleName: restrictedModuleName\n                        });\n                    }\n                }\n            }\n        };\n    }\n};\n"]}