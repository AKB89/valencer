{"version":3,"sources":["no-octal.js"],"names":[],"mappings":";;;;;AAKA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,yBADX;AAEF,sBAAU,gBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,UAAS,OAAT,EAAkB;;AAEtB,eAAO;;AAEH,qBAAS,UAAS,IAAT,EAAe;AACpB,oBAAI,OAAO,KAAK,KAAZ,KAAsB,QAAtB,IAAkC,UAAU,IAAV,CAAe,KAAK,GAApB,CAAtC,EAAgE;AAC5D,4BAAQ,MAAR,CAAe,IAAf,EAAqB,oCAArB;AACH;AACJ;AANE,SAAP;AASH;AAtBY,CAAjB","file":"no-octal-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag when initializing octal literal\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow octal literals\",\n            category: \"Best Practices\",\n            recommended: true\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n\n        return {\n\n            Literal: function(node) {\n                if (typeof node.value === \"number\" && /^0[0-7]/.test(node.raw)) {\n                    context.report(node, \"Octal literals should not be used.\");\n                }\n            }\n        };\n\n    }\n};\n"]}