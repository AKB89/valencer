{"version":3,"sources":["no-case-declarations.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,+CADX;AAEF,sBAAU,gBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,gBAAS,OAAT,EAAkB;;;;;;;AAOtB,iBAAS,oBAAT,CAA8B,IAA9B,EAAoC;AAChC,oBAAQ,KAAK,IAAb;AACI,qBAAK,qBAAL;AACA,qBAAK,kBAAL;AACI,2BAAO,IAAP;AACJ,qBAAK,qBAAL;AACI,2BAAO,KAAK,IAAL,KAAc,KAArB;AACJ;AACI,2BAAO,KAAP;AAPR;AASH;;AAED,eAAO;AACH,wBAAY,oBAAS,IAAT,EAAe;AACvB,qBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,UAAL,CAAgB,MAApC,EAA4C,GAA5C,EAAiD;AAC7C,wBAAI,YAAY,KAAK,UAAL,CAAgB,CAAhB,CAAhB;;AAEA,wBAAI,qBAAqB,SAArB,CAAJ,EAAqC;AACjC,gCAAQ,MAAR,CAAe;AACX,kCAAM,IADK;AAEX,qCAAS;AAFE,yBAAf;AAIH;AACJ;AACJ;AAZE,SAAP;AAeH;AA7CY,CAAjB","file":"no-case-declarations-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of an lexical declarations inside a case clause\n * @author Erik Arvidsson\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow lexical declarations in case clauses\",\n            category: \"Best Practices\",\n            recommended: true\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n\n        /**\n         * Checks whether or not a node is a lexical declaration.\n         * @param {ASTNode} node A direct child statement of a switch case.\n         * @returns {boolean} Whether or not the node is a lexical declaration.\n         */\n        function isLexicalDeclaration(node) {\n            switch (node.type) {\n                case \"FunctionDeclaration\":\n                case \"ClassDeclaration\":\n                    return true;\n                case \"VariableDeclaration\":\n                    return node.kind !== \"var\";\n                default:\n                    return false;\n            }\n        }\n\n        return {\n            SwitchCase: function(node) {\n                for (var i = 0; i < node.consequent.length; i++) {\n                    var statement = node.consequent[i];\n\n                    if (isLexicalDeclaration(statement)) {\n                        context.report({\n                            node: node,\n                            message: \"Unexpected lexical declaration in case block.\"\n                        });\n                    }\n                }\n            }\n        };\n\n    }\n};\n"]}