{"version":3,"sources":["newline-per-chained-call.js"],"names":[],"mappings":";;;;;;AAMA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,qDADX;AAEF,sBAAU,kBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ,CAAC;AACL,kBAAM,QADD;AAEL,wBAAY;AACR,sCAAsB;AAClB,0BAAM,SADY;AAElB,6BAAS,CAFS;AAGlB,6BAAS;AAHS;AADd,aAFP;AASL,kCAAsB;AATjB,SAAD;AAPN,KADO;;AAqBb,YAAQ,gBAAS,OAAT,EAAkB;;AAEtB,YAAI,UAAU,QAAQ,OAAR,CAAgB,CAAhB,KAAsB,EAApC;YACI,uBAAuB,QAAQ,oBAAR,IAAgC,CAD3D;;AAGA,YAAI,aAAa,QAAQ,aAAR,EAAjB;;AAEA,eAAO;AACH,mCAAuB,4BAAS,IAAT,EAAe;AAClC,oBAAI,CAAC,KAAK,MAAN,IAAgB,KAAK,MAAL,CAAY,IAAZ,KAAqB,kBAAzC,EAA6D;AACzD;AACH;;AAED,oBAAI,SAAS,KAAK,MAAlB;AACA,oBAAI,SAAS,OAAO,MAApB;AACA,oBAAI,QAAQ,CAAZ;;AAEA,uBAAO,UAAU,OAAO,MAAxB,EAAgC;AAC5B,6BAAS,CAAT;AACA,6BAAS,OAAO,MAAP,CAAc,MAAvB;AACH;;AAED,oBAAI,QAAQ,oBAAR,IAAgC,OAAO,QAAP,CAAgB,GAAhB,CAAoB,KAApB,CAA0B,IAA1B,KAAmC,OAAO,MAAP,CAAc,GAAd,CAAkB,GAAlB,CAAsB,IAA7F,EAAmG;AAC/F,4BAAQ,MAAR,CACI,OAAO,QADX,EAEI,OAAO,QAAP,CAAgB,GAAhB,CAAoB,KAFxB,EAGI,gCAAgC,WAAW,OAAX,CAAmB,OAAO,MAA1B,EAAkC,OAAlC,CAA0C,aAA1C,EAAyD,KAAzD,CAAhC,GAAkG,IAHtG;AAKH;AACJ;AAtBE,SAAP;AAwBH;AApDY,CAAjB","file":"newline-per-chained-call-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to ensure newline per method call when chaining calls\n * @author Rajendra Patil\n * @author Burak Yigit Kaya\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"require a newline after each call in a method chain\",\n            category: \"Stylistic Issues\",\n            recommended: false\n        },\n\n        schema: [{\n            type: \"object\",\n            properties: {\n                ignoreChainWithDepth: {\n                    type: \"integer\",\n                    minimum: 1,\n                    maximum: 10\n                }\n            },\n            additionalProperties: false\n        }]\n    },\n\n    create: function(context) {\n\n        var options = context.options[0] || {},\n            ignoreChainWithDepth = options.ignoreChainWithDepth || 2;\n\n        var sourceCode = context.getSourceCode();\n\n        return {\n            \"CallExpression:exit\": function(node) {\n                if (!node.callee || node.callee.type !== \"MemberExpression\") {\n                    return;\n                }\n\n                var callee = node.callee;\n                var parent = callee.object;\n                var depth = 1;\n\n                while (parent && parent.callee) {\n                    depth += 1;\n                    parent = parent.callee.object;\n                }\n\n                if (depth > ignoreChainWithDepth && callee.property.loc.start.line === callee.object.loc.end.line) {\n                    context.report(\n                        callee.property,\n                        callee.property.loc.start,\n                        \"Expected line break after `\" + sourceCode.getText(callee.object).replace(/\\r\\n|\\r|\\n/g, \"\\\\n\") + \"`.\"\n                    );\n                }\n            }\n        };\n    }\n};\n"]}