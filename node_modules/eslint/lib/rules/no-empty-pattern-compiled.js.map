{"version":3,"sources":["no-empty-pattern.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,uCADX;AAEF,sBAAU,gBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,UAAS,OAAT,EAAkB;AACtB,eAAO;AACH,2BAAe,UAAS,IAAT,EAAe;AAC1B,oBAAI,KAAK,UAAL,CAAgB,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,4BAAQ,MAAR,CAAe,IAAf,EAAqB,kCAArB;AACH;AACJ,aALE;AAMH,0BAAc,UAAS,IAAT,EAAe;AACzB,oBAAI,KAAK,QAAL,CAAc,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,4BAAQ,MAAR,CAAe,IAAf,EAAqB,iCAArB;AACH;AACJ;AAVE,SAAP;AAYH;AAxBY,CAAjB","file":"no-empty-pattern-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to disallow an empty pattern\n * @author Alberto Rodr√≠guez\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow empty destructuring patterns\",\n            category: \"Best Practices\",\n            recommended: true\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n        return {\n            ObjectPattern: function(node) {\n                if (node.properties.length === 0) {\n                    context.report(node, \"Unexpected empty object pattern.\");\n                }\n            },\n            ArrayPattern: function(node) {\n                if (node.elements.length === 0) {\n                    context.report(node, \"Unexpected empty array pattern.\");\n                }\n            }\n        };\n    }\n};\n"]}