{"version":3,"sources":["no-div-regex.js"],"names":[],"mappings":";;;;;AAKA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,gFADX;AAEF,sBAAU,gBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,UAAS,OAAT,EAAkB;AACtB,YAAI,aAAa,QAAQ,aAAR,EAAjB;;AAEA,eAAO;;AAEH,qBAAS,UAAS,IAAT,EAAe;AACpB,oBAAI,QAAQ,WAAW,aAAX,CAAyB,IAAzB,CAAZ;;AAEA,oBAAI,MAAM,IAAN,KAAe,mBAAf,IAAsC,MAAM,KAAN,CAAY,CAAZ,MAAmB,GAA7D,EAAkE;AAC9D,4BAAQ,MAAR,CAAe,IAAf,EAAqB,yDAArB;AACH;AACJ;AARE,SAAP;AAWH;AAzBY,CAAjB","file":"no-div-regex-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to check for ambiguous div operator in regexes\n * @author Matt DuVall <http://www.mattduvall.com>\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow division operators explicitly at the beginning of regular expressions\",\n            category: \"Best Practices\",\n            recommended: false\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n        var sourceCode = context.getSourceCode();\n\n        return {\n\n            Literal: function(node) {\n                var token = sourceCode.getFirstToken(node);\n\n                if (token.type === \"RegularExpression\" && token.value[1] === \"=\") {\n                    context.report(node, \"A regular expression literal can be confused with '/='.\");\n                }\n            }\n        };\n\n    }\n};\n"]}