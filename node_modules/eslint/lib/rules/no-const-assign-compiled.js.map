{"version":3,"sources":["no-const-assign.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,WAAW,QAAQ,cAAR,CAAf;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,wCADX;AAEF,sBAAU,cAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,UAAS,OAAT,EAAkB;;;;;;;AAOtB,iBAAS,aAAT,CAAuB,QAAvB,EAAiC;AAC7B,qBAAS,sBAAT,CAAgC,SAAS,UAAzC,EAAqD,OAArD,CAA6D,UAAS,SAAT,EAAoB;AAC7E,wBAAQ,MAAR,CACI,UAAU,UADd,EAEI,yBAFJ,EAGI,EAAC,MAAM,UAAU,UAAV,CAAqB,IAA5B,EAHJ;AAIH,aALD;AAMH;;AAED,eAAO;AACH,iCAAqB,UAAS,IAAT,EAAe;AAChC,oBAAI,KAAK,IAAL,KAAc,OAAlB,EAA2B;AACvB,4BAAQ,oBAAR,CAA6B,IAA7B,EAAmC,OAAnC,CAA2C,aAA3C;AACH;AACJ;AALE,SAAP;AAQH;AAnCY,CAAjB","file":"no-const-assign-compiled.js","sourcesContent":["/**\n * @fileoverview A rule to disallow modifying variables that are declared using `const`\n * @author Toru Nagashima\n */\n\n\"use strict\";\n\nvar astUtils = require(\"../ast-utils\");\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow reassigning `const` variables\",\n            category: \"ECMAScript 6\",\n            recommended: true\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n\n        /**\n         * Finds and reports references that are non initializer and writable.\n         * @param {Variable} variable - A variable to check.\n         * @returns {void}\n         */\n        function checkVariable(variable) {\n            astUtils.getModifyingReferences(variable.references).forEach(function(reference) {\n                context.report(\n                    reference.identifier,\n                    \"'{{name}}' is constant.\",\n                    {name: reference.identifier.name});\n            });\n        }\n\n        return {\n            VariableDeclaration: function(node) {\n                if (node.kind === \"const\") {\n                    context.getDeclaredVariables(node).forEach(checkVariable);\n                }\n            }\n        };\n\n    }\n};\n"]}