{"version":3,"sources":["no-floating-decimal.js"],"names":[],"mappings":";;;;;AAKA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,iEADX;AAEF,sBAAU,gBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,gBAAS,OAAT,EAAkB;;AAEtB,eAAO;AACH,qBAAS,iBAAS,IAAT,EAAe;;AAEpB,oBAAI,OAAO,KAAK,KAAZ,KAAsB,QAA1B,EAAoC;AAChC,wBAAI,KAAK,GAAL,CAAS,OAAT,CAAiB,GAAjB,MAA0B,CAA9B,EAAiC;AAC7B,gCAAQ,MAAR,CAAe,IAAf,EAAqB,qDAArB;AACH;AACD,wBAAI,KAAK,GAAL,CAAS,OAAT,CAAiB,GAAjB,MAA0B,KAAK,GAAL,CAAS,MAAT,GAAkB,CAAhD,EAAmD;AAC/C,gCAAQ,MAAR,CAAe,IAAf,EAAqB,sDAArB;AACH;AACJ;AACJ;AAXE,SAAP;AAcH;AA3BY,CAAjB","file":"no-floating-decimal-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of a leading/trailing decimal point in a numeric literal\n * @author James Allardice\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow leading or trailing decimal points in numeric literals\",\n            category: \"Best Practices\",\n            recommended: false\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n\n        return {\n            Literal: function(node) {\n\n                if (typeof node.value === \"number\") {\n                    if (node.raw.indexOf(\".\") === 0) {\n                        context.report(node, \"A leading decimal point can be confused with a dot.\");\n                    }\n                    if (node.raw.indexOf(\".\") === node.raw.length - 1) {\n                        context.report(node, \"A trailing decimal point can be confused with a dot.\");\n                    }\n                }\n            }\n        };\n\n    }\n};\n"]}