{"version":3,"sources":["no-undefined.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,kDADX;AAEF,sBAAU,WAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,UAAS,OAAT,EAAkB;;AAEtB,eAAO;;AAEH,wBAAY,UAAS,IAAT,EAAe;AACvB,oBAAI,KAAK,IAAL,KAAc,WAAlB,EAA+B;AAC3B,wBAAI,SAAS,QAAQ,YAAR,GAAuB,GAAvB,EAAb;;AAEA,wBAAI,CAAC,MAAD,IAAW,OAAO,IAAP,KAAgB,kBAA3B,IAAiD,SAAS,OAAO,QAAjE,IAA6E,OAAO,QAAxF,EAAkG;AAC9F,gCAAQ,MAAR,CAAe,IAAf,EAAqB,8BAArB;AACH;AACJ;AACJ;AAVE,SAAP;AAaH;AA1BY,CAAjB","file":"no-undefined-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag references to the undefined variable.\n * @author Michael Ficarra\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow the use of `undefined` as an identifier\",\n            category: \"Variables\",\n            recommended: false\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n\n        return {\n\n            Identifier: function(node) {\n                if (node.name === \"undefined\") {\n                    var parent = context.getAncestors().pop();\n\n                    if (!parent || parent.type !== \"MemberExpression\" || node !== parent.property || parent.computed) {\n                        context.report(node, \"Unexpected use of undefined.\");\n                    }\n                }\n            }\n        };\n\n    }\n};\n"]}