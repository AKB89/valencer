{"version":3,"sources":["no-plusplus.js"],"names":[],"mappings":";;;;;;AAMA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,4CADX;AAEF,sBAAU,kBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ,CACJ;AACI,kBAAM,QADV;AAEI,wBAAY;AACR,2CAA2B;AACvB,0BAAM;AADiB;AADnB,aAFhB;AAOI,kCAAsB;AAP1B,SADI;AAPN,KADO;;AAqBb,YAAQ,UAAS,OAAT,EAAkB;;AAEtB,YAAI,SAAS,QAAQ,OAAR,CAAgB,CAAhB,CAAb;YACI,yBAAyB,KAD7B;;AAGA,YAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,qCAAyB,OAAO,yBAAP,KAAqC,IAA9D;AACH;;AAED,eAAO;;AAEH,8BAAkB,UAAS,IAAT,EAAe;AAC7B,oBAAI,0BAA0B,KAAK,MAAL,CAAY,IAAZ,KAAqB,cAAnD,EAAmE;AAC/D;AACH;AACD,wBAAQ,MAAR,CAAe,IAAf,EAAqB,qBAAqB,KAAK,QAA1B,GAAqC,SAA1D;AACH;;AAPE,SAAP;AAWH;AAzCY,CAAjB","file":"no-plusplus-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of unary increment and decrement operators.\n * @author Ian Christian Myers\n * @author Brody McKee (github.com/mrmckeb)\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow the unary operators `++` and `--`\",\n            category: \"Stylistic Issues\",\n            recommended: false\n        },\n\n        schema: [\n            {\n                type: \"object\",\n                properties: {\n                    allowForLoopAfterthoughts: {\n                        type: \"boolean\"\n                    }\n                },\n                additionalProperties: false\n            }\n        ]\n    },\n\n    create: function(context) {\n\n        var config = context.options[0],\n            allowInForAfterthought = false;\n\n        if (typeof config === \"object\") {\n            allowInForAfterthought = config.allowForLoopAfterthoughts === true;\n        }\n\n        return {\n\n            UpdateExpression: function(node) {\n                if (allowInForAfterthought && node.parent.type === \"ForStatement\") {\n                    return;\n                }\n                context.report(node, \"Unary operator '\" + node.operator + \"' used.\");\n            }\n\n        };\n\n    }\n};\n"]}