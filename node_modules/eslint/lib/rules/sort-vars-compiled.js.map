{"version":3,"sources":["sort-vars.js"],"names":[],"mappings":";;;;;AAKA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,kEADX;AAEF,sBAAU,kBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ,CACJ;AACI,kBAAM,QADV;AAEI,wBAAY;AACR,4BAAY;AACR,0BAAM;AADE;AADJ,aAFhB;AAOI,kCAAsB;AAP1B,SADI;AAPN,KADO;;AAqBb,YAAQ,UAAS,OAAT,EAAkB;;AAEtB,YAAI,gBAAgB,QAAQ,OAAR,CAAgB,CAAhB,KAAsB,EAA1C;YACI,aAAa,cAAc,UAAd,IAA4B,KAD7C;;AAGA,eAAO;AACH,iCAAqB,UAAS,IAAT,EAAe;AAChC,qBAAK,YAAL,CAAkB,MAAlB,CAAyB,UAAS,IAAT,EAAe,IAAf,EAAqB;AAC1C,wBAAI,KAAK,EAAL,CAAQ,IAAR,KAAiB,eAAjB,IAAoC,KAAK,EAAL,CAAQ,IAAR,KAAiB,cAAzD,EAAyE;AACrE,+BAAO,IAAP;AACH;;AAED,wBAAI,mBAAmB,KAAK,EAAL,CAAQ,IAA/B;wBACI,qBAAqB,KAAK,EAAL,CAAQ,IADjC;;AAGA,wBAAI,UAAJ,EAAgB;AACZ,2CAAmB,iBAAiB,WAAjB,EAAnB;AACA,6CAAqB,mBAAmB,WAAnB,EAArB;AACH;;AAED,wBAAI,qBAAqB,gBAAzB,EAA2C;AACvC,gCAAQ,MAAR,CAAe,IAAf,EAAqB,6EAArB;AACA,+BAAO,IAAP;AACH,qBAHD,MAGO;AACH,+BAAO,IAAP;AACH;AACJ,iBAnBD,EAmBG,KAAK,YAAL,CAAkB,CAAlB,CAnBH;AAoBH;AAtBE,SAAP;AAwBH;AAlDY,CAAjB","file":"sort-vars-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to require sorting of variables within a single Variable Declaration block\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"require variables within the same declaration block to be sorted\",\n            category: \"Stylistic Issues\",\n            recommended: false\n        },\n\n        schema: [\n            {\n                type: \"object\",\n                properties: {\n                    ignoreCase: {\n                        type: \"boolean\"\n                    }\n                },\n                additionalProperties: false\n            }\n        ]\n    },\n\n    create: function(context) {\n\n        var configuration = context.options[0] || {},\n            ignoreCase = configuration.ignoreCase || false;\n\n        return {\n            VariableDeclaration: function(node) {\n                node.declarations.reduce(function(memo, decl) {\n                    if (decl.id.type === \"ObjectPattern\" || decl.id.type === \"ArrayPattern\") {\n                        return memo;\n                    }\n\n                    var lastVariableName = memo.id.name,\n                        currenVariableName = decl.id.name;\n\n                    if (ignoreCase) {\n                        lastVariableName = lastVariableName.toLowerCase();\n                        currenVariableName = currenVariableName.toLowerCase();\n                    }\n\n                    if (currenVariableName < lastVariableName) {\n                        context.report(decl, \"Variables within the same declaration block should be sorted alphabetically\");\n                        return memo;\n                    } else {\n                        return decl;\n                    }\n                }, node.declarations[0]);\n            }\n        };\n    }\n};\n"]}