{"version":3,"sources":["require-jsdoc.js"],"names":[],"mappings":";;;;AAIA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,wBADX;AAEF,sBAAU,kBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ,CACJ;AACI,kBAAM,QADV;AAEI,wBAAY;AACR,yBAAS;AACL,0BAAM,QADD;AAEL,gCAAY;AACR,0CAAkB;AACd,kCAAM;AADQ,yBADV;AAIR,0CAAkB;AACd,kCAAM;AADQ,yBAJV;AAOR,6CAAqB;AACjB,kCAAM;AADW;AAPb,qBAFP;AAaL,0CAAsB;AAbjB;AADD,aAFhB;AAmBI,kCAAsB;AAnB1B,SADI;AAPN,KADO;;AAiCb,YAAQ,UAAS,OAAT,EAAkB;AACtB,YAAI,SAAS,QAAQ,aAAR,EAAb;AACA,YAAI,kBAAkB;AAClB,iCAAqB,IADH;AAElB,8BAAkB,KAFA;AAGlB,8BAAkB;AAHA,SAAtB;AAKA,YAAI,UAAU,OAAO,MAAP,CAAc,eAAd,EAA+B,QAAQ,OAAR,CAAgB,CAAhB,KAAsB,QAAQ,OAAR,CAAgB,CAAhB,EAAmB,OAAzC,IAAoD,EAAnF,CAAd;;;;;;;AAOA,iBAAS,MAAT,CAAgB,IAAhB,EAAsB;AAClB,oBAAQ,MAAR,CAAe,IAAf,EAAqB,wBAArB;AACH;;;;;;;AAOD,iBAAS,qBAAT,CAA+B,IAA/B,EAAqC;AACjC,gBAAI,KAAK,MAAL,CAAY,IAAZ,KAAqB,kBAAzB,EAA6C;AACzC,oBAAI,eAAe,OAAO,eAAP,CAAuB,IAAvB,CAAnB;;AAEA,oBAAI,CAAC,YAAL,EAAmB;AACf,2BAAO,IAAP;AACH;AACJ;AACJ;;;;;;;AAOD,iBAAS,UAAT,CAAoB,IAApB,EAA0B;AACtB,gBAAI,eAAe,OAAO,eAAP,CAAuB,IAAvB,CAAnB;;AAEA,gBAAI,CAAC,YAAL,EAAmB;AACf,uBAAO,IAAP;AACH;AACJ;;AAED,eAAO;AACH,iCAAqB,UAAS,IAAT,EAAe;AAChC,oBAAI,QAAQ,mBAAZ,EAAiC;AAC7B,+BAAW,IAAX;AACH;AACJ,aALE;AAMH,gCAAoB,UAAS,IAAT,EAAe;AAC/B,oBAAI,QAAQ,gBAAZ,EAA8B;AAC1B,0CAAsB,IAAtB;AACH;AACJ,aAVE;AAWH,8BAAkB,UAAS,IAAT,EAAe;AAC7B,oBAAI,QAAQ,gBAAZ,EAA8B;AAC1B,+BAAW,IAAX;AACH;AACJ;AAfE,SAAP;AAiBH;AAhGY,CAAjB","file":"require-jsdoc-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to check for jsdoc presence.\n * @author Gyandeep Singh\n */\n\"use strict\";\n\nvar lodash = require(\"lodash\");\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"require JSDoc comments\",\n            category: \"Stylistic Issues\",\n            recommended: false\n        },\n\n        schema: [\n            {\n                type: \"object\",\n                properties: {\n                    require: {\n                        type: \"object\",\n                        properties: {\n                            ClassDeclaration: {\n                                type: \"boolean\"\n                            },\n                            MethodDefinition: {\n                                type: \"boolean\"\n                            },\n                            FunctionDeclaration: {\n                                type: \"boolean\"\n                            }\n                        },\n                        additionalProperties: false\n                    }\n                },\n                additionalProperties: false\n            }\n        ]\n    },\n\n    create: function(context) {\n        var source = context.getSourceCode();\n        var DEFAULT_OPTIONS = {\n            FunctionDeclaration: true,\n            MethodDefinition: false,\n            ClassDeclaration: false\n        };\n        var options = lodash.assign(DEFAULT_OPTIONS, context.options[0] && context.options[0].require || {});\n\n        /**\n         * Report the error message\n         * @param {ASTNode} node node to report\n         * @returns {void}\n         */\n        function report(node) {\n            context.report(node, \"Missing JSDoc comment.\");\n        }\n\n        /**\n         * Check if the jsdoc comment is present for class methods\n         * @param {ASTNode} node node to examine\n         * @returns {void}\n         */\n        function checkClassMethodJsDoc(node) {\n            if (node.parent.type === \"MethodDefinition\") {\n                var jsdocComment = source.getJSDocComment(node);\n\n                if (!jsdocComment) {\n                    report(node);\n                }\n            }\n        }\n\n        /**\n         * Check if the jsdoc comment is present or not.\n         * @param {ASTNode} node node to examine\n         * @returns {void}\n         */\n        function checkJsDoc(node) {\n            var jsdocComment = source.getJSDocComment(node);\n\n            if (!jsdocComment) {\n                report(node);\n            }\n        }\n\n        return {\n            FunctionDeclaration: function(node) {\n                if (options.FunctionDeclaration) {\n                    checkJsDoc(node);\n                }\n            },\n            FunctionExpression: function(node) {\n                if (options.MethodDefinition) {\n                    checkClassMethodJsDoc(node);\n                }\n            },\n            ClassDeclaration: function(node) {\n                if (options.ClassDeclaration) {\n                    checkJsDoc(node);\n                }\n            }\n        };\n    }\n};\n"]}