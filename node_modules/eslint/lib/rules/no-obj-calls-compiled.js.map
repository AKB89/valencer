{"version":3,"sources":["no-obj-calls.js"],"names":[],"mappings":";;;;;AAKA;;;;;;AAMA,OAAO,OAAP,GAAiB;AACb,UAAM;AACF,cAAM;AACF,yBAAa,wDADX;AAEF,sBAAU,iBAFR;AAGF,yBAAa;AAHX,SADJ;;AAOF,gBAAQ;AAPN,KADO;;AAWb,YAAQ,UAAS,OAAT,EAAkB;;AAEtB,eAAO;AACH,4BAAgB,UAAS,IAAT,EAAe;;AAE3B,oBAAI,KAAK,MAAL,CAAY,IAAZ,KAAqB,YAAzB,EAAuC;AACnC,wBAAI,OAAO,KAAK,MAAL,CAAY,IAAvB;;AAEA,wBAAI,SAAS,MAAT,IAAmB,SAAS,MAAhC,EAAwC;AACpC,gCAAQ,MAAR,CAAe,IAAf,EAAqB,+BAArB,EAAsD,EAAE,MAAM,IAAR,EAAtD;AACH;AACJ;AACJ;AAVE,SAAP;AAaH;AA1BY,CAAjB","file":"no-obj-calls-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of an object property of the global object (Math and JSON) as a function\n * @author James Allardice\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    meta: {\n        docs: {\n            description: \"disallow calling global object properties as functions\",\n            category: \"Possible Errors\",\n            recommended: true\n        },\n\n        schema: []\n    },\n\n    create: function(context) {\n\n        return {\n            CallExpression: function(node) {\n\n                if (node.callee.type === \"Identifier\") {\n                    var name = node.callee.name;\n\n                    if (name === \"Math\" || name === \"JSON\") {\n                        context.report(node, \"'{{name}}' is not a function.\", { name: name });\n                    }\n                }\n            }\n        };\n\n    }\n};\n"]}