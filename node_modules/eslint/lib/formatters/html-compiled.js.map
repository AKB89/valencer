{"version":3,"sources":["html.js"],"names":[],"mappings":"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","file":"html-compiled.js","sourcesContent":["/**\n * @fileoverview HTML reporter\n * @author Julian Laval\n */\n\"use strict\";\n\nvar lodash = require(\"lodash\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\nvar pageTemplate = lodash.template(fs.readFileSync(path.join(__dirname, \"html-template-page.html\"), \"utf-8\"));\nvar messageTemplate = lodash.template(fs.readFileSync(path.join(__dirname, \"html-template-message.html\"), \"utf-8\"));\nvar resultTemplate = lodash.template(fs.readFileSync(path.join(__dirname, \"html-template-result.html\"), \"utf-8\"));\n\n/**\n * Given a word and a count, append an s if count is not one.\n * @param {string} word A word in its singular form.\n * @param {int} count A number controlling whether word should be pluralized.\n * @returns {string} The original word with an s on the end if count is not one.\n */\nfunction pluralize(word, count) {\n    return (count === 1 ? word : word + \"s\");\n}\n\n/**\n * Renders text along the template of x problems (x errors, x warnings)\n * @param {string} totalErrors Total errors\n * @param {string} totalWarnings Total warnings\n * @returns {string} The formatted string, pluralized where necessary\n */\nfunction renderSummary(totalErrors, totalWarnings) {\n    var totalProblems = totalErrors + totalWarnings;\n    var renderedText = totalProblems + \" \" + pluralize(\"problem\", totalProblems);\n\n    if (totalProblems !== 0) {\n        renderedText += \" (\" + totalErrors + \" \" + pluralize(\"error\", totalErrors) + \", \" + totalWarnings + \" \" + pluralize(\"warning\", totalWarnings) + \")\";\n    }\n    return renderedText;\n}\n\n/**\n * Get the color based on whether there are errors/warnings...\n * @param {string} totalErrors Total errors\n * @param {string} totalWarnings Total warnings\n * @returns {int} The color code (0 = green, 1 = yellow, 2 = red)\n */\nfunction renderColor(totalErrors, totalWarnings) {\n    if (totalErrors !== 0) {\n        return 2;\n    } else if (totalWarnings !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * Get HTML (table rows) describing the messages.\n * @param {Array} messages Messages.\n * @param {int} parentIndex Index of the parent HTML row.\n * @returns {string} HTML (table rows) describing the messages.\n */\nfunction renderMessages(messages, parentIndex) {\n\n    /**\n     * Get HTML (table row) describing a message.\n     * @param {Object} message Message.\n     * @returns {string} HTML (table row) describing a message.\n     */\n    return lodash.map(messages, function(message) {\n        var lineNumber,\n            columnNumber;\n\n        lineNumber = message.line || 0;\n        columnNumber = message.column || 0;\n\n        return messageTemplate({\n            parentIndex: parentIndex,\n            lineNumber: lineNumber,\n            columnNumber: columnNumber,\n            severityNumber: message.severity,\n            severityName: message.severity === 1 ? \"Warning\" : \"Error\",\n            message: message.message,\n            ruleId: message.ruleId\n        });\n    }).join(\"\\n\");\n}\n\n/**\n * @param {Array} results Test results.\n * @returns {string} HTML string describing the results.\n */\nfunction renderResults(results) {\n    return lodash.map(results, function(result, index) {\n        return resultTemplate({\n            index: index,\n            color: renderColor(result.errorCount, result.warningCount),\n            filePath: result.filePath,\n            summary: renderSummary(result.errorCount, result.warningCount)\n\n        }) + renderMessages(result.messages, index);\n    }).join(\"\\n\");\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nmodule.exports = function(results) {\n    var totalErrors,\n        totalWarnings;\n\n    totalErrors = 0;\n    totalWarnings = 0;\n\n    // Iterate over results to get totals\n    results.forEach(function(result) {\n        totalErrors += result.errorCount;\n        totalWarnings += result.warningCount;\n    });\n\n    return pageTemplate({\n        date: new Date(),\n        reportColor: renderColor(totalErrors, totalWarnings),\n        reportSummary: renderSummary(totalErrors, totalWarnings),\n        results: renderResults(results)\n    });\n};\n"]}