{"version":3,"sources":["table.js"],"names":[],"mappings":"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","file":"table-compiled.js","sourcesContent":["/**\n * @fileoverview \"table reporter.\n * @author Gajus Kuizinas <gajus@gajus.com>\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nvar chalk,\n    table,\n    pluralize;\n\nchalk = require(\"chalk\");\ntable = require(\"table\").default;\npluralize = require(\"pluralize\");\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Draws text table.\n * @param {Array<Object>} messages Error messages relating to a specific file.\n * @returns {string} A text table.\n */\nfunction drawTable(messages) {\n    var rows;\n\n    rows = [];\n\n    if (messages.length === 0) {\n        return \"\";\n    }\n\n    rows.push([\n        chalk.bold(\"Line\"),\n        chalk.bold(\"Column\"),\n        chalk.bold(\"Type\"),\n        chalk.bold(\"Message\"),\n        chalk.bold(\"Rule ID\")\n    ]);\n\n    messages.forEach(function(message) {\n        var messageType;\n\n        if (message.fatal || message.severity === 2) {\n            messageType = chalk.red(\"error\");\n        } else {\n            messageType = chalk.yellow(\"warning\");\n        }\n\n        rows.push([\n            message.line || 0,\n            message.column || 0,\n            messageType,\n            message.message,\n            message.ruleId || \"\"\n        ]);\n    });\n\n    return table(rows, {\n        columns: {\n            0: {\n                width: 8,\n                wrapWord: true\n            },\n            1: {\n                width: 8,\n                wrapWord: true\n            },\n            2: {\n                width: 8,\n                wrapWord: true\n            },\n            3: {\n                paddingRight: 5,\n                width: 50,\n                wrapWord: true\n            },\n            4: {\n                width: 20,\n                wrapWord: true\n            }\n        },\n        drawHorizontalLine: function(index) {\n            return index === 1;\n        }\n    });\n}\n\n/**\n * Draws a report (multiple tables).\n * @param {Array} results Report results for every file.\n * @returns {string} A column of text tables.\n */\nfunction drawReport(results) {\n    var files;\n\n    files = results.map(function(result) {\n        if (!result.messages.length) {\n            return \"\";\n        }\n\n        return \"\\n\" + result.filePath + \"\\n\\n\" + drawTable(result.messages);\n    });\n\n    files = files.filter(function(content) {\n        return content.trim();\n    });\n\n    return files.join(\"\");\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nmodule.exports = function(report) {\n    var result,\n        errorCount,\n        warningCount;\n\n    result = \"\";\n    errorCount = 0;\n    warningCount = 0;\n\n    report.forEach(function(fileReport) {\n        errorCount += fileReport.errorCount;\n        warningCount += fileReport.warningCount;\n    });\n\n    if (errorCount || warningCount) {\n        result = drawReport(report);\n    }\n\n    result += \"\\n\" + table([\n        [\n            chalk.red(pluralize(\"Error\", errorCount, true))\n        ],\n        [\n            chalk.yellow(pluralize(\"Warning\", warningCount, true))\n        ]\n    ], {\n        columns: {\n            0: {\n                width: 110,\n                wrapWord: true\n            }\n        },\n        drawHorizontalLine: function() {\n            return true;\n        }\n    });\n\n    return result;\n};\n"]}