{"version":3,"sources":["unix.js"],"names":[],"mappings":";;;;AAIA;;;;;;;;;;;;AAWA,SAAS,cAAT,CAAwB,OAAxB,EAAiC;AAC7B,QAAI,QAAQ,KAAR,IAAiB,QAAQ,QAAR,KAAqB,CAA1C,EAA6C;AACzC,eAAO,OAAP;AACH,KAFD,MAEO;AACH,eAAO,SAAP;AACH;AACJ;;;;;;AAOD,OAAO,OAAP,GAAiB,UAAS,OAAT,EAAkB;;AAE/B,QAAI,SAAS,EAAb;QACI,QAAQ,CADZ;;AAGA,YAAQ,OAAR,CAAgB,UAAS,MAAT,EAAiB;;AAE7B,YAAI,WAAW,OAAO,QAAtB;;AAEA,iBAAS,SAAS,MAAlB;;AAEA,iBAAS,OAAT,CAAiB,UAAS,OAAT,EAAkB;;AAE/B,sBAAU,OAAO,QAAP,GAAkB,GAA5B;AACA,sBAAU,CAAC,QAAQ,IAAR,IAAgB,CAAjB,IAAsB,GAAhC;AACA,sBAAU,CAAC,QAAQ,MAAR,IAAkB,CAAnB,IAAwB,GAAlC;AACA,sBAAU,MAAM,QAAQ,OAAd,GAAwB,GAAlC;AACA,sBAAU,MAAM,eAAe,OAAf,CAAN,IACC,QAAQ,MAAR,GAAiB,MAAM,QAAQ,MAA/B,GAAwC,EADzC,IAC+C,GADzD;AAEA,sBAAU,IAAV;AAEH,SAVD;AAYH,KAlBD;;AAoBA,QAAI,QAAQ,CAAZ,EAAe;AACX,kBAAU,OAAO,KAAP,GAAe,UAAf,IAA6B,UAAU,CAAV,GAAc,GAAd,GAAoB,EAAjD,CAAV;AACH;;AAED,WAAO,MAAP;AACH,CA9BD","file":"unix-compiled.js","sourcesContent":["/**\n * @fileoverview unix-style formatter.\n * @author oshi-shinobu\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Helper Functions\n//------------------------------------------------------------------------------\n\n/**\n * Returns a canonical error level string based upon the error message passed in.\n * @param {object} message Individual error message provided by eslint\n * @returns {String} Error level string\n */\nfunction getMessageType(message) {\n    if (message.fatal || message.severity === 2) {\n        return \"Error\";\n    } else {\n        return \"Warning\";\n    }\n}\n\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nmodule.exports = function(results) {\n\n    var output = \"\",\n        total = 0;\n\n    results.forEach(function(result) {\n\n        var messages = result.messages;\n\n        total += messages.length;\n\n        messages.forEach(function(message) {\n\n            output += result.filePath + \":\";\n            output += (message.line || 0) + \":\";\n            output += (message.column || 0) + \":\";\n            output += \" \" + message.message + \" \";\n            output += \"[\" + getMessageType(message) +\n                      (message.ruleId ? \"/\" + message.ruleId : \"\") + \"]\";\n            output += \"\\n\";\n\n        });\n\n    });\n\n    if (total > 0) {\n        output += \"\\n\" + total + \" problem\" + (total !== 1 ? \"s\" : \"\");\n    }\n\n    return output;\n};\n"]}