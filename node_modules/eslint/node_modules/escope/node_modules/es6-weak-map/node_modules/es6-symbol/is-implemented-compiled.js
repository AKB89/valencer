'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

module.exports = function () {
	var symbol;
	if (typeof Symbol !== 'function') return false;
	symbol = Symbol('test symbol');
	try {
		String(symbol);
	} catch (e) {
		return false;
	}
	if (_typeof(Symbol.iterator) === 'symbol') return true;

	// Return 'true' for polyfills
	if (_typeof(Symbol.isConcatSpreadable) !== 'object') return false;
	if (_typeof(Symbol.iterator) !== 'object') return false;
	if (_typeof(Symbol.toPrimitive) !== 'object') return false;
	if (_typeof(Symbol.toStringTag) !== 'object') return false;
	if (_typeof(Symbol.unscopables) !== 'object') return false;

	return true;
};

//# sourceMappingURL=is-implemented-compiled.js.map