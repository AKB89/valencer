{"version":3,"sources":["shim.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,QAAQ,sBAAR,CAAnB;IAEI,UAAU,MAAM,OAFpB;IAE6B,SAAS,MAAM,SAAN,CAAgB,MAFtD;IAGI,UAAU,MAAM,SAAN,CAAgB,OAH9B;;AAKA,OAAO,OAAP,GAAiB,UAAU,KAAV,EAAiB,W,aAAjB,EAA0C;AAC1D,KAAI,MAAM,OAAO,KAAP,CAAa,IAAb,EAAmB,SAAnB,CAAV;KAAyC,MAAzC;AACA,KAAI,CAAC,IAAD,IAAS,CAAC,QAAQ,IAAR,CAAV,IAA2B,aAAa,IAAb,CAA/B,EAAmD,OAAO,GAAP;AACnD,UAAS,IAAI,KAAK,WAAT,CAAqB,IAAI,MAAzB,CAAT;AACA,SAAQ,IAAR,CAAa,GAAb,EAAkB,UAAU,GAAV,EAAe,CAAf,EAAkB;AAAE,SAAO,CAAP,IAAY,GAAZ;AAAkB,EAAxD;AACA,QAAO,MAAP;AACA,CAND","file":"shim-compiled.js","sourcesContent":["'use strict';\n\nvar isPlainArray = require('../../is-plain-array')\n\n  , isArray = Array.isArray, splice = Array.prototype.splice\n  , forEach = Array.prototype.forEach;\n\nmodule.exports = function (start, deleteCount/*, â€¦items*/) {\n\tvar arr = splice.apply(this, arguments), result;\n\tif (!this || !isArray(this) || isPlainArray(this)) return arr;\n\tresult = new this.constructor(arr.length);\n\tforEach.call(arr, function (val, i) { result[i] = val; });\n\treturn result;\n};\n"]}