{"version":3,"sources":["copy.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAgB,QAAQ,oBAAR,CAApB;IACI,gBAAgB,QAAQ,mBAAR,CADpB;IAGI,KAAK,mEAHT;;AAKA,OAAO,OAAP,GAAiB,YAAY;AAC5B,KAAI,QAAQ,OAAO,cAAc,IAAd,CAAP,EAA4B,KAA5B,CAAkC,EAAlC,CAAZ;KAAmD,EAAnD;;AAEA,MAAK,IAAI,QAAJ,CAAa,IAAb,EAAmB,qBAAqB,MAAM,CAAN,EAAS,IAAT,EAArB,GAAuC,GAAvC,GACvB,MAAM,CAAN,CADuB,GACZ,0CADP,EACmD,IADnD,CAAL;AAEA,KAAI;AAAE,QAAM,EAAN,EAAU,IAAV;AAAkB,EAAxB,CAAyB,OAAO,MAAP,EAAe,CAAE;AAC1C,QAAO,EAAP;AACA,CAPD","file":"copy-compiled.js","sourcesContent":["'use strict';\n\nvar mixin         = require('../../object/mixin')\n  , validFunction = require('../valid-function')\n\n  , re = /^\\s*function\\s*([\\0-'\\)-\\uffff]+)*\\s*\\(([\\0-\\(\\*-\\uffff]*)\\)\\s*\\{/;\n\nmodule.exports = function () {\n\tvar match = String(validFunction(this)).match(re), fn;\n\n\tfn = new Function('fn', 'return function ' + match[1].trim() + '(' +\n\t\tmatch[2] + ') { return fn.apply(this, arguments); };')(this);\n\ttry { mixin(fn, this); } catch (ignore) {}\n\treturn fn;\n};\n"]}