{"version":3,"sources":["shim.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,YAAe,QAAQ,4BAAR,CAAnB;IACI,WAAe,QAAQ,gCAAR,CADnB;IAEI,eAAe,QAAQ,sBAAR,CAFnB;IAII,UAAU,MAAM,OAJpB;IAI6B,QAAQ,MAAM,SAAN,CAAgB,KAJrD;IAKI,iBAAiB,OAAO,SAAP,CAAiB,cALtC;IAKsD,MAAM,KAAK,GALjE;;AAOA,OAAO,OAAP,GAAiB,UAAU,KAAV,EAAiB,GAAjB,EAAsB;AACtC,KAAI,MAAJ,EAAY,MAAZ,EAAoB,CAApB;AACA,KAAI,CAAC,IAAD,IAAS,CAAC,QAAQ,IAAR,CAAV,IAA2B,aAAa,IAAb,CAA/B,EAAmD;AAClD,SAAO,MAAM,KAAN,CAAY,IAAZ,EAAkB,SAAlB,CAAP;AACA;AACD,UAAS,SAAS,KAAK,MAAd,CAAT;AACA,SAAQ,UAAU,KAAV,CAAR;AACA,KAAI,QAAQ,CAAZ,EAAe,QAAQ,IAAI,SAAS,KAAb,EAAoB,CAApB,CAAR,CAAf,KACK,IAAI,QAAQ,MAAZ,EAAoB,QAAQ,MAAR;AACzB,KAAI,QAAQ,SAAZ,EAAuB;AACtB,QAAM,MAAN;AACA,EAFD,MAEO;AACN,QAAM,UAAU,GAAV,CAAN;AACA,MAAI,MAAM,CAAV,EAAa,MAAM,IAAI,SAAS,GAAb,EAAkB,CAAlB,CAAN,CAAb,KACK,IAAI,MAAM,MAAV,EAAkB,MAAM,MAAN;AACvB;AACD,KAAI,QAAQ,GAAZ,EAAiB,QAAQ,GAAR;AACjB,UAAS,IAAI,KAAK,WAAT,CAAqB,MAAM,KAA3B,CAAT;AACA,KAAI,CAAJ;AACA,QAAO,UAAU,GAAjB,EAAsB;AACrB,MAAI,eAAe,IAAf,CAAoB,IAApB,EAA0B,KAA1B,CAAJ,EAAsC,OAAO,CAAP,IAAY,KAAK,KAAL,CAAZ;AACtC,IAAE,CAAF;AACA,IAAE,KAAF;AACA;AACD,QAAO,MAAP;AACA,CAzBD","file":"shim-compiled.js","sourcesContent":["'use strict';\n\nvar toInteger    = require('../../../number/to-integer')\n  , toPosInt     = require('../../../number/to-pos-integer')\n  , isPlainArray = require('../../is-plain-array')\n\n  , isArray = Array.isArray, slice = Array.prototype.slice\n  , hasOwnProperty = Object.prototype.hasOwnProperty, max = Math.max;\n\nmodule.exports = function (start, end) {\n\tvar length, result, i;\n\tif (!this || !isArray(this) || isPlainArray(this)) {\n\t\treturn slice.apply(this, arguments);\n\t}\n\tlength = toPosInt(this.length);\n\tstart = toInteger(start);\n\tif (start < 0) start = max(length + start, 0);\n\telse if (start > length) start = length;\n\tif (end === undefined) {\n\t\tend = length;\n\t} else {\n\t\tend = toInteger(end);\n\t\tif (end < 0) end = max(length + end, 0);\n\t\telse if (end > length) end = length;\n\t}\n\tif (start > end) start = end;\n\tresult = new this.constructor(end - start);\n\ti = 0;\n\twhile (start !== end) {\n\t\tif (hasOwnProperty.call(this, start)) result[i] = this[start];\n\t\t++i;\n\t\t++start;\n\t}\n\treturn result;\n};\n"]}