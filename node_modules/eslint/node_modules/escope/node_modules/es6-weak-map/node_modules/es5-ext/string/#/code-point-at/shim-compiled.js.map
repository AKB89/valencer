{"version":3,"sources":["shim.js"],"names":[],"mappings":";;;AAGA;;AAEA,IAAI,YAAa,QAAQ,4BAAR,CAAjB;IACI,aAAa,QAAQ,6BAAR,CADjB;;AAGA,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe;AAC/B,KAAI,MAAM,OAAO,WAAW,IAAX,CAAP,CAAV;KAAoC,IAAI,IAAI,MAA5C;KAAoD,KAApD;KAA2D,MAA3D;AACA,OAAM,UAAU,GAAV,CAAN;;;AAGA,KAAI,MAAM,CAAN,IAAW,OAAO,CAAtB,EAAyB,OAAO,SAAP;;;AAGzB,SAAQ,IAAI,UAAJ,CAAe,GAAf,CAAR;AACA,KAAK,SAAS,MAAV,IAAsB,SAAS,MAA/B,IAA2C,IAAI,MAAM,CAAzD,EAA6D;AAC5D,WAAS,IAAI,UAAJ,CAAe,MAAM,CAArB,CAAT;AACA,MAAI,UAAU,MAAV,IAAoB,UAAU,MAAlC,EAA0C;;AAEzC,UAAO,CAAC,QAAQ,MAAT,IAAmB,KAAnB,GAA2B,MAA3B,GAAoC,MAApC,GAA6C,OAApD;AACA;AACD;AACD,QAAO,KAAP;AACA,CAjBD","file":"shim-compiled.js","sourcesContent":["// Based on: https://github.com/mathiasbynens/String.prototype.codePointAt\n// Thanks @mathiasbynens !\n\n'use strict';\n\nvar toInteger  = require('../../../number/to-integer')\n  , validValue = require('../../../object/valid-value');\n\nmodule.exports = function (pos) {\n\tvar str = String(validValue(this)), l = str.length, first, second;\n\tpos = toInteger(pos);\n\n\t// Account for out-of-bounds indices:\n\tif (pos < 0 || pos >= l) return undefined;\n\n\t// Get the first code unit\n\tfirst = str.charCodeAt(pos);\n\tif ((first >= 0xD800) && (first <= 0xDBFF) && (l > pos + 1)) {\n\t\tsecond = str.charCodeAt(pos + 1);\n\t\tif (second >= 0xDC00 && second <= 0xDFFF) {\n\t\t\t// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t}\n\t}\n\treturn first;\n};\n"]}