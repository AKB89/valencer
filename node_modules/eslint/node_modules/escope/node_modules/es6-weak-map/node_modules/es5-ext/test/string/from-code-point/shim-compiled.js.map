{"version":3,"sources":["shim.js"],"names":[],"mappings":"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","file":"shim-compiled.js","sourcesContent":["// Taken from: https://github.com/mathiasbynens/String.fromCodePoint/blob/master\n//             /tests/tests.js\n\n'use strict';\n\nvar pow = Math.pow;\n\nmodule.exports = function (t, a) {\n\tvar counter, result;\n\n\ta(t.length, 1, \"Length\");\n\ta(String.propertyIsEnumerable('fromCodePoint'), false, \"Not enumerable\");\n\n\ta(t(''), '\\0', \"Empty string\");\n\ta(t(), '', \"No arguments\");\n\ta(t(-0), '\\0', \"-0\");\n\ta(t(0), '\\0', \"0\");\n\ta(t(0x1D306), '\\uD834\\uDF06', \"Unicode\");\n\ta(t(0x1D306, 0x61, 0x1D307), '\\uD834\\uDF06a\\uD834\\uDF07', \"Complex unicode\");\n\ta(t(0x61, 0x62, 0x1D307), 'ab\\uD834\\uDF07', \"Complex\");\n\ta(t(false), '\\0', \"false\");\n\ta(t(null), '\\0', \"null\");\n\n\ta.throws(function () { t('_'); }, RangeError, \"_\");\n\ta.throws(function () { t(Infinity); }, RangeError, \"Infinity\");\n\ta.throws(function () { t(-Infinity); }, RangeError, \"-Infinity\");\n\ta.throws(function () { t(-1); }, RangeError, \"-1\");\n\ta.throws(function () { t(0x10FFFF + 1); }, RangeError, \"Range error #1\");\n\ta.throws(function () { t(3.14); }, RangeError, \"Range error #2\");\n\ta.throws(function () { t(3e-2); }, RangeError, \"Range error #3\");\n\ta.throws(function () { t(-Infinity); }, RangeError, \"Range error #4\");\n\ta.throws(function () { t(+Infinity); }, RangeError, \"Range error #5\");\n\ta.throws(function () { t(NaN); }, RangeError, \"Range error #6\");\n\ta.throws(function () { t(undefined); }, RangeError, \"Range error #7\");\n\ta.throws(function () { t({}); }, RangeError, \"Range error #8\");\n\ta.throws(function () { t(/re/); }, RangeError, \"Range error #9\");\n\n\tcounter = pow(2, 15) * 3 / 2;\n\tresult = [];\n\twhile (--counter >= 0) result.push(0); // one code unit per symbol\n\tt.apply(null, result); // must not throw\n\n\tcounter = pow(2, 15) * 3 / 2;\n\tresult = [];\n\twhile (--counter >= 0) result.push(0xFFFF + 1); // two code units per symbol\n\tt.apply(null, result); // must not throw\n};\n"]}