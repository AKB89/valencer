{"version":3,"sources":["generate.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,0BAAR,CAAf;IACI,QAAW,QAAQ,uBAAR,CADf;IAGI,QAAQ,MAAM,SAAN,CAAgB,KAH5B;;AAKA,OAAO,OAAP,GAAiB,UAAU,M,YAAV,EAA6B;AAC7C,KAAI,GAAJ,EAAS,CAAT;AACA,UAAS,SAAS,MAAM,MAAN,CAAT,CAAT;AACA,KAAI,WAAW,CAAf,EAAkB,OAAO,EAAP;;AAElB,OAAO,UAAU,MAAV,GAAmB,CAApB,GAAyB,CAAC,SAAD,CAAzB,GACJ,MAAM,IAAN,CAAW,SAAX,EAAsB,CAAtB,EAAyB,IAAI,MAA7B,CADF;;AAGA,QAAO,CAAC,IAAI,IAAI,MAAT,IAAmB,MAA1B,EAAkC;AACjC,QAAM,IAAI,MAAJ,CAAW,IAAI,KAAJ,CAAU,CAAV,EAAa,SAAS,CAAtB,CAAX,CAAN;AACA;AACD,QAAO,GAAP;AACA,CAZD","file":"generate-compiled.js","sourcesContent":["'use strict';\n\nvar toPosInt = require('../number/to-pos-integer')\n  , value    = require('../object/valid-value')\n\n  , slice = Array.prototype.slice;\n\nmodule.exports = function (length/*, â€¦fill*/) {\n\tvar arr, l;\n\tlength = toPosInt(value(length));\n\tif (length === 0) return [];\n\n\tarr = (arguments.length < 2) ? [undefined] :\n\t\t\tslice.call(arguments, 1, 1 + length);\n\n\twhile ((l = arr.length) < length) {\n\t\tarr = arr.concat(arr.slice(0, length - l));\n\t}\n\treturn arr;\n};\n"]}