{"version":3,"sources":["shim.js"],"names":[],"mappings":";;;;;;AAMA;;AAEA,IAAI,QAAQ,KAAK,KAAjB;IAAwB,eAAe,OAAO,YAA9C;;AAEA,OAAO,OAAP,GAAiB,UAAU,S,kBAAV,EAAsC;AACtD,KAAI,QAAQ,EAAZ;KAAgB,IAAI,UAAU,MAA9B;KAAsC,CAAtC;KAAyC,CAAzC;KAA4C,SAAS,EAArD;AACA,MAAK,IAAI,CAAT,EAAY,IAAI,CAAhB,EAAmB,EAAE,CAArB,EAAwB;AACvB,MAAI,OAAO,UAAU,CAAV,CAAP,CAAJ;AACA,MAAI,CAAC,SAAS,CAAT,CAAD,IAAgB,IAAI,CAApB,IAAyB,IAAI,QAA7B,IAAyC,MAAM,CAAN,MAAa,CAA1D,EAA6D;AAC5D,SAAM,IAAI,UAAJ,CAAe,wBAAwB,CAAvC,CAAN;AACA;;AAED,MAAI,IAAI,OAAR,EAAiB;AAChB,SAAM,IAAN,CAAW,CAAX;AACA,GAFD,MAEO;AACN,QAAK,OAAL;AACA,SAAM,IAAN,CAAW,CAAC,KAAK,EAAN,IAAY,MAAvB,EAAgC,IAAI,KAAL,GAAc,MAA7C;AACA;AACD,MAAI,IAAI,CAAJ,KAAU,CAAV,IAAe,MAAM,MAAN,IAAgB,MAAnC,EAA2C;AAC3C,YAAU,aAAa,KAAb,CAAmB,IAAnB,EAAyB,KAAzB,CAAV;AACA,QAAM,MAAN,GAAe,CAAf;AACA;AACD,QAAO,MAAP;AACA,CAnBD","file":"shim-compiled.js","sourcesContent":["// Based on:\n// http://norbertlindenberg.com/2012/05/ecmascript-supplementary-characters/\n// and:\n// https://github.com/mathiasbynens/String.fromCodePoint/blob/master\n// /fromcodepoint.js\n\n'use strict';\n\nvar floor = Math.floor, fromCharCode = String.fromCharCode;\n\nmodule.exports = function (codePoint/*, â€¦codePoints*/) {\n\tvar chars = [], l = arguments.length, i, c, result = '';\n\tfor (i = 0; i < l; ++i) {\n\t\tc = Number(arguments[i]);\n\t\tif (!isFinite(c) || c < 0 || c > 0x10FFFF || floor(c) !== c) {\n\t\t\tthrow new RangeError(\"Invalid code point \" + c);\n\t\t}\n\n\t\tif (c < 0x10000) {\n\t\t\tchars.push(c);\n\t\t} else {\n\t\t\tc -= 0x10000;\n\t\t\tchars.push((c >> 10) + 0xD800, (c % 0x400) + 0xDC00);\n\t\t}\n\t\tif (i + 1 !== l && chars.length <= 0x4000) continue;\n\t\tresult += fromCharCode.apply(null, chars);\n\t\tchars.length = 0;\n\t}\n\treturn result;\n};\n"]}