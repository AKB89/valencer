{"version":3,"sources":["calculateMaximumColumnWidthIndex.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AACzC,WAAO;AADkC,CAA7C;;AAIA,IAAI,YAAY,QAAQ,gBAAR,CAAhB;;AAEA,IAAI,YAAY,uBAAuB,SAAvB,CAAhB;;AAEA,IAAI,SAAS,QAAQ,aAAR,CAAb;;AAEA,IAAI,SAAS,uBAAuB,MAAvB,CAAb;;AAEA,IAAI,2BAA2B,QAAQ,2BAAR,CAA/B;;AAEA,IAAI,4BAA4B,uBAAuB,wBAAvB,CAAhC;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;;;;;;;;AAS/F,QAAQ,OAAR,GAAkB,UAAU,IAAV,EAAgB;AAC9B,QAAI,UAAU,SAAd;;AAEA,QAAI,CAAC,KAAK,CAAL,CAAL,EAAc;AACV,cAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AACH;;AAED,cAAU,CAAC,GAAG,OAAO,OAAX,EAAoB,MAAM,KAAK,CAAL,EAAQ,MAAd,CAApB,EAA2C,CAA3C,CAAV;;AAEA,KAAC,GAAG,UAAU,OAAd,EAAuB,IAAvB,EAA6B,UAAU,GAAV,EAAe;AACxC,YAAI,mBAAmB,SAAvB;;AAEA,2BAAmB,CAAC,GAAG,0BAA0B,OAA9B,EAAuC,GAAvC,CAAnB;;AAEA,SAAC,GAAG,UAAU,OAAd,EAAuB,gBAAvB,EAAyC,UAAU,UAAV,EAAsB,MAAtB,EAA8B;AACnE,gBAAI,QAAQ,MAAR,IAAkB,UAAtB,EAAkC;AAC9B,wBAAQ,MAAR,IAAkB,UAAlB;AACH;AACJ,SAJD;AAKH,KAVD;;AAYA,WAAO,OAAP;AACH,CAtBD;;AAwBA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"calculateMaximumColumnWidthIndex-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _forEach2 = require('lodash/forEach');\n\nvar _forEach3 = _interopRequireDefault(_forEach2);\n\nvar _fill2 = require('lodash/fill');\n\nvar _fill3 = _interopRequireDefault(_fill2);\n\nvar _calculateCellWidthIndex = require('./calculateCellWidthIndex');\n\nvar _calculateCellWidthIndex2 = _interopRequireDefault(_calculateCellWidthIndex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces an array of values that describe the largest value length (width) in every column.\n *\n * @param {Array[]} rows\n * @return {number[]}\n */\n\nexports.default = function (rows) {\n    var columns = undefined;\n\n    if (!rows[0]) {\n        throw new Error('Dataset must have at least one row.');\n    }\n\n    columns = (0, _fill3.default)(Array(rows[0].length), 0);\n\n    (0, _forEach3.default)(rows, function (row) {\n        var columnWidthIndex = undefined;\n\n        columnWidthIndex = (0, _calculateCellWidthIndex2.default)(row);\n\n        (0, _forEach3.default)(columnWidthIndex, function (valueWidth, index0) {\n            if (columns[index0] < valueWidth) {\n                columns[index0] = valueWidth;\n            }\n        });\n    });\n\n    return columns;\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=calculateMaximumColumnWidthIndex.js.map\n"]}