{"version":3,"sources":["wrapString.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AACzC,WAAO;AADkC,CAA7C;;AAIA,IAAI,SAAS,QAAQ,aAAR,CAAb;;AAEA,IAAI,SAAS,uBAAuB,MAAvB,CAAb;;AAEA,IAAI,aAAa,QAAQ,YAAR,CAAjB;;AAEA,IAAI,cAAc,uBAAuB,UAAvB,CAAlB;;AAEA,IAAI,eAAe,QAAQ,cAAR,CAAnB;;AAEA,IAAI,gBAAgB,uBAAuB,YAAvB,CAApB;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;;;;;;;;;;;;;AAc/F,QAAQ,OAAR,GAAkB,UAAU,OAAV,EAAmB,IAAnB,EAAyB;AACvC,QAAI,SAAS,SAAb;QACI,eAAe,SADnB;;AAGA,mBAAe,OAAf;;AAEA,aAAS,EAAT;;AAEA,OAAG;AACC,eAAO,IAAP,CAAY,CAAC,GAAG,YAAY,OAAhB,EAAyB,YAAzB,EAAuC,CAAvC,EAA0C,IAA1C,CAAZ;;AAEA,uBAAe,CAAC,GAAG,OAAO,OAAX,EAAoB,CAAC,GAAG,YAAY,OAAhB,EAAyB,YAAzB,EAAuC,IAAvC,CAApB,CAAf;AACH,KAJD,QAIS,CAAC,GAAG,cAAc,OAAlB,EAA2B,YAA3B,CAJT;;AAMA,WAAO,MAAP;AACH,CAfD;;AAiBA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"wrapString-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _trim2 = require('lodash/trim');\n\nvar _trim3 = _interopRequireDefault(_trim2);\n\nvar _sliceAnsi = require('slice-ansi');\n\nvar _sliceAnsi2 = _interopRequireDefault(_sliceAnsi);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of strings split into groups the length of size.\n * This function works with strings that contain ASCII characters.\n *\n * wrapText is different from would-be \"chunk\" implementation\n * in that whitespace characters that occur on a chunk size limit are trimmed.\n *\n * @param {string} subject\n * @param {number} size\n * @returns {Array}\n */\n\nexports.default = function (subject, size) {\n    var chunks = undefined,\n        subjectSlice = undefined;\n\n    subjectSlice = subject;\n\n    chunks = [];\n\n    do {\n        chunks.push((0, _sliceAnsi2.default)(subjectSlice, 0, size));\n\n        subjectSlice = (0, _trim3.default)((0, _sliceAnsi2.default)(subjectSlice, size));\n    } while ((0, _stringWidth2.default)(subjectSlice));\n\n    return chunks;\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=wrapString.js.map\n"]}