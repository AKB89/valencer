{"version":3,"sources":["calculateCellHeight.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AACzC,WAAO;AADkC,CAA7C;;AAIA,IAAI,SAAS,QAAQ,aAAR,CAAb;;AAEA,IAAI,SAAS,uBAAuB,MAAvB,CAAb;;AAEA,IAAI,cAAc,QAAQ,kBAAR,CAAlB;;AAEA,IAAI,cAAc,uBAAuB,WAAvB,CAAlB;;AAEA,IAAI,aAAa,QAAQ,iBAAR,CAAjB;;AAEA,IAAI,aAAa,uBAAuB,UAAvB,CAAjB;;AAEA,IAAI,eAAe,QAAQ,cAAR,CAAnB;;AAEA,IAAI,gBAAgB,uBAAuB,YAAvB,CAApB;;AAEA,IAAI,YAAY,QAAQ,YAAR,CAAhB;;AAEA,IAAI,aAAa,uBAAuB,SAAvB,CAAjB;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;;;;;;;;AAS/F,QAAQ,OAAR,GAAkB,UAAU,KAAV,EAAiB,WAAjB,EAA8B;AAC5C,QAAI,cAAc,UAAU,MAAV,IAAoB,CAApB,IAAyB,UAAU,CAAV,MAAiB,SAA1C,GAAsD,KAAtD,GAA8D,UAAU,CAAV,CAAhF;;AAEA,QAAI,CAAC,CAAC,GAAG,WAAW,OAAf,EAAwB,KAAxB,CAAL,EAAqC;AACjC,cAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAED,QAAI,CAAC,CAAC,GAAG,YAAY,OAAhB,EAAyB,WAAzB,CAAL,EAA4C;AACxC,cAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACH;;AAED,QAAI,cAAc,CAAlB,EAAqB;AACjB,cAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACH;;AAED,QAAI,WAAJ,EAAiB;AACb,eAAO,CAAC,GAAG,WAAW,OAAf,EAAwB,KAAxB,EAA+B,WAA/B,EAA4C,MAAnD;AACH;;AAED,WAAO,CAAC,GAAG,OAAO,OAAX,EAAoB,CAAC,GAAG,cAAc,OAAlB,EAA2B,KAA3B,IAAoC,WAAxD,CAAP;AACH,CApBD;;AAsBA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"calculateCellHeight-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _ceil2 = require('lodash/ceil');\n\nvar _ceil3 = _interopRequireDefault(_ceil2);\n\nvar _isInteger2 = require('lodash/isInteger');\n\nvar _isInteger3 = _interopRequireDefault(_isInteger2);\n\nvar _isString2 = require('lodash/isString');\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nvar _wrapWord = require('./wrapWord');\n\nvar _wrapWord2 = _interopRequireDefault(_wrapWord);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {string} value\n * @param {number} columnWidth\n * @param {boolean} useWrapWord\n * @returns {number}\n */\n\nexports.default = function (value, columnWidth) {\n    var useWrapWord = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n    if (!(0, _isString3.default)(value)) {\n        throw new Error('Value must be a string.');\n    }\n\n    if (!(0, _isInteger3.default)(columnWidth)) {\n        throw new Error('Column width must be an integer.');\n    }\n\n    if (columnWidth < 1) {\n        throw new Error('Column width must be greater than 0.');\n    }\n\n    if (useWrapWord) {\n        return (0, _wrapWord2.default)(value, columnWidth).length;\n    }\n\n    return (0, _ceil3.default)((0, _stringWidth2.default)(value) / columnWidth);\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=calculateCellHeight.js.map\n"]}