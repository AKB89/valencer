{"version":3,"sources":["table.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;;AAIA,IAAI,aAAa,QAAQ,aAAR,CAAjB;;AAEA,IAAI,cAAc,uBAAuB,UAAvB,CAAlB;;AAEA,IAAI,2BAA2B,QAAQ,2BAAR,CAA/B;;AAEA,IAAI,4BAA4B,uBAAuB,wBAAvB,CAAhC;;AAEA,IAAI,cAAc,QAAQ,cAAR,CAAlB;;AAEA,IAAI,eAAe,uBAAuB,WAAvB,CAAnB;;AAEA,IAAI,2BAA2B,QAAQ,2BAAR,CAA/B;;AAEA,IAAI,4BAA4B,uBAAuB,wBAAvB,CAAhC;;AAEA,IAAI,8BAA8B,QAAQ,8BAAR,CAAlC;;AAEA,IAAI,+BAA+B,uBAAuB,2BAAvB,CAAnC;;AAEA,IAAI,kBAAkB,QAAQ,kBAAR,CAAtB;;AAEA,IAAI,mBAAmB,uBAAuB,eAAvB,CAAvB;;AAEA,IAAI,gBAAgB,QAAQ,gBAAR,CAApB;;AAEA,IAAI,iBAAiB,uBAAuB,aAAvB,CAArB;;AAEA,IAAI,qBAAqB,QAAQ,qBAAR,CAAzB;;AAEA,IAAI,sBAAsB,uBAAuB,kBAAvB,CAA1B;;AAEA,IAAI,sBAAsB,QAAQ,sBAAR,CAA1B;;AAEA,IAAI,uBAAuB,uBAAuB,mBAAvB,CAA3B;;AAEA,IAAI,qBAAqB,QAAQ,qBAAR,CAAzB;;AAEA,IAAI,sBAAsB,uBAAuB,kBAAvB,CAA1B;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,SAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiE/F,QAAQ,OAAR,GAAkB,UAAU,IAAV,EAAgB;AAChC,MAAI,aAAa,UAAU,MAAV,IAAoB,CAApB,IAAyB,UAAU,CAAV,MAAiB,SAA1C,GAAsD,EAAtD,GAA2D,UAAU,CAAV,CAA5E;;AAEA,MAAI,iBAAiB,SAArB;MACI,SAAS,SADb;MAEI,iBAAiB,SAFrB;MAGI,OAAO,SAHX;;AAKA,GAAC,GAAG,oBAAoB,OAAxB,EAAiC,IAAjC;;AAEA,SAAO,CAAC,GAAG,qBAAqB,OAAzB,EAAkC,IAAlC,CAAP;;AAEA,WAAS,CAAC,GAAG,aAAa,OAAjB,EAA0B,IAA1B,EAAgC,UAAhC,CAAT;;AAEA,SAAO,CAAC,GAAG,oBAAoB,OAAxB,EAAiC,IAAjC,EAAuC,MAAvC,CAAP;;AAEA,mBAAiB,CAAC,GAAG,0BAA0B,OAA9B,EAAuC,IAAvC,EAA6C,MAA7C,CAAjB;;AAEA,SAAO,CAAC,GAAG,6BAA6B,OAAjC,EAA0C,IAA1C,EAAgD,cAAhD,EAAgE,MAAhE,CAAP;AACA,SAAO,CAAC,GAAG,iBAAiB,OAArB,EAA8B,IAA9B,EAAoC,MAApC,CAAP;AACA,SAAO,CAAC,GAAG,eAAe,OAAnB,EAA4B,IAA5B,EAAkC,MAAlC,CAAP;;AAEA,mBAAiB,CAAC,GAAG,0BAA0B,OAA9B,EAAuC,KAAK,CAAL,CAAvC,CAAjB;;AAEA,SAAO,CAAC,GAAG,YAAY,OAAhB,EAAyB,IAAzB,EAA+B,OAAO,MAAtC,EAA8C,cAA9C,EAA8D,cAA9D,EAA8E,OAAO,kBAArF,CAAP;AACD,CAzBD;;AA2BA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"table-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _drawTable = require('./drawTable');\n\nvar _drawTable2 = _interopRequireDefault(_drawTable);\n\nvar _calculateCellWidthIndex = require('./calculateCellWidthIndex');\n\nvar _calculateCellWidthIndex2 = _interopRequireDefault(_calculateCellWidthIndex);\n\nvar _makeConfig = require('./makeConfig');\n\nvar _makeConfig2 = _interopRequireDefault(_makeConfig);\n\nvar _calculateRowHeightIndex = require('./calculateRowHeightIndex');\n\nvar _calculateRowHeightIndex2 = _interopRequireDefault(_calculateRowHeightIndex);\n\nvar _mapDataUsingRowHeightIndex = require('./mapDataUsingRowHeightIndex');\n\nvar _mapDataUsingRowHeightIndex2 = _interopRequireDefault(_mapDataUsingRowHeightIndex);\n\nvar _alignTableData = require('./alignTableData');\n\nvar _alignTableData2 = _interopRequireDefault(_alignTableData);\n\nvar _padTableData = require('./padTableData');\n\nvar _padTableData2 = _interopRequireDefault(_padTableData);\n\nvar _validateTableData = require('./validateTableData');\n\nvar _validateTableData2 = _interopRequireDefault(_validateTableData);\n\nvar _stringifyTableData = require('./stringifyTableData');\n\nvar _stringifyTableData2 = _interopRequireDefault(_stringifyTableData);\n\nvar _truncateTableData = require('./truncateTableData');\n\nvar _truncateTableData2 = _interopRequireDefault(_truncateTableData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef {string} table~cell\n */\n\n/**\n * @typedef {table~cell[]} table~row\n */\n\n/**\n * @typedef {Object} table~columns\n * @property {string} alignment Cell content alignment (enum: left, center, right) (default: left).\n * @property {number} width Column width (default: auto).\n * @property {number} truncate Number of characters are which the content will be truncated (default: Infinity).\n * @property {number} paddingLeft Cell content padding width left (default: 1).\n * @property {number} paddingRight Cell content padding width right (default: 1).\n */\n\n/**\n * @typedef {Object} table~border\n * @property {string} topBody\n * @property {string} topJoin\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} bottomBody\n * @property {string} bottomJoin\n * @property {string} bottomLeft\n * @property {string} bottomRight\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n * @property {string} joinBody\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinJoin\n */\n\n/**\n * Used to tell whether to draw a horizontal line.\n * This callback is called for each non-content line of the table.\n * The default behavior is to always return true.\n *\n * @typedef {Function} drawHorizontalLine\n * @param {number} index\n * @param {number} size\n * @return {boolean}\n */\n\n/**\n * @typedef {Object} table~config\n * @property {table~border} border\n * @property {table~columns[]} columns Column specific configuration.\n * @property {table~columns} columnDefault Default values for all columns. Column specific settings overwrite the default values.\n * @property {table~drawHorizontalLine} drawHorizontalLine\n */\n\n/**\n * Generates a text table.\n *\n * @param {table~row[]} data\n * @param {table~config} userConfig\n * @return {string}\n */\n\nexports.default = function (data) {\n  var userConfig = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  var cellWidthIndex = undefined,\n      config = undefined,\n      rowHeightIndex = undefined,\n      rows = undefined;\n\n  (0, _validateTableData2.default)(data);\n\n  rows = (0, _stringifyTableData2.default)(data);\n\n  config = (0, _makeConfig2.default)(rows, userConfig);\n\n  rows = (0, _truncateTableData2.default)(data, config);\n\n  rowHeightIndex = (0, _calculateRowHeightIndex2.default)(rows, config);\n\n  rows = (0, _mapDataUsingRowHeightIndex2.default)(rows, rowHeightIndex, config);\n  rows = (0, _alignTableData2.default)(rows, config);\n  rows = (0, _padTableData2.default)(rows, config);\n\n  cellWidthIndex = (0, _calculateCellWidthIndex2.default)(rows[0]);\n\n  return (0, _drawTable2.default)(rows, config.border, cellWidthIndex, rowHeightIndex, config.drawHorizontalLine);\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=table.js.map\n"]}