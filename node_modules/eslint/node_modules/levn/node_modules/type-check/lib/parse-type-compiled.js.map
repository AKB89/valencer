{"version":3,"sources":["parse-type.js"],"names":[],"mappings":"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","file":"parse-type-compiled.js","sourcesContent":["// Generated by LiveScript 1.4.0\n(function(){\n  var identifierRegex, tokenRegex;\n  identifierRegex = /[\\$\\w]+/;\n  function peek(tokens){\n    var token;\n    token = tokens[0];\n    if (token == null) {\n      throw new Error('Unexpected end of input.');\n    }\n    return token;\n  }\n  function consumeIdent(tokens){\n    var token;\n    token = peek(tokens);\n    if (!identifierRegex.test(token)) {\n      throw new Error(\"Expected text, got '\" + token + \"' instead.\");\n    }\n    return tokens.shift();\n  }\n  function consumeOp(tokens, op){\n    var token;\n    token = peek(tokens);\n    if (token !== op) {\n      throw new Error(\"Expected '\" + op + \"', got '\" + token + \"' instead.\");\n    }\n    return tokens.shift();\n  }\n  function maybeConsumeOp(tokens, op){\n    var token;\n    token = tokens[0];\n    if (token === op) {\n      return tokens.shift();\n    } else {\n      return null;\n    }\n  }\n  function consumeArray(tokens){\n    var types;\n    consumeOp(tokens, '[');\n    if (peek(tokens) === ']') {\n      throw new Error(\"Must specify type of Array - eg. [Type], got [] instead.\");\n    }\n    types = consumeTypes(tokens);\n    consumeOp(tokens, ']');\n    return {\n      structure: 'array',\n      of: types\n    };\n  }\n  function consumeTuple(tokens){\n    var components;\n    components = [];\n    consumeOp(tokens, '(');\n    if (peek(tokens) === ')') {\n      throw new Error(\"Tuple must be of at least length 1 - eg. (Type), got () instead.\");\n    }\n    for (;;) {\n      components.push(consumeTypes(tokens));\n      maybeConsumeOp(tokens, ',');\n      if (')' === peek(tokens)) {\n        break;\n      }\n    }\n    consumeOp(tokens, ')');\n    return {\n      structure: 'tuple',\n      of: components\n    };\n  }\n  function consumeFields(tokens){\n    var fields, subset, ref$, key, types;\n    fields = {};\n    consumeOp(tokens, '{');\n    subset = false;\n    for (;;) {\n      if (maybeConsumeOp(tokens, '...')) {\n        subset = true;\n        break;\n      }\n      ref$ = consumeField(tokens), key = ref$[0], types = ref$[1];\n      fields[key] = types;\n      maybeConsumeOp(tokens, ',');\n      if ('}' === peek(tokens)) {\n        break;\n      }\n    }\n    consumeOp(tokens, '}');\n    return {\n      structure: 'fields',\n      of: fields,\n      subset: subset\n    };\n  }\n  function consumeField(tokens){\n    var key, types;\n    key = consumeIdent(tokens);\n    consumeOp(tokens, ':');\n    types = consumeTypes(tokens);\n    return [key, types];\n  }\n  function maybeConsumeStructure(tokens){\n    switch (tokens[0]) {\n    case '[':\n      return consumeArray(tokens);\n    case '(':\n      return consumeTuple(tokens);\n    case '{':\n      return consumeFields(tokens);\n    }\n  }\n  function consumeType(tokens){\n    var token, wildcard, type, structure;\n    token = peek(tokens);\n    wildcard = token === '*';\n    if (wildcard || identifierRegex.test(token)) {\n      type = wildcard\n        ? consumeOp(tokens, '*')\n        : consumeIdent(tokens);\n      structure = maybeConsumeStructure(tokens);\n      if (structure) {\n        return structure.type = type, structure;\n      } else {\n        return {\n          type: type\n        };\n      }\n    } else {\n      structure = maybeConsumeStructure(tokens);\n      if (!structure) {\n        throw new Error(\"Unexpected character: \" + token);\n      }\n      return structure;\n    }\n  }\n  function consumeTypes(tokens){\n    var lookahead, types, typesSoFar, typeObj, type;\n    if ('::' === peek(tokens)) {\n      throw new Error(\"No comment before comment separator '::' found.\");\n    }\n    lookahead = tokens[1];\n    if (lookahead != null && lookahead === '::') {\n      tokens.shift();\n      tokens.shift();\n    }\n    types = [];\n    typesSoFar = {};\n    if ('Maybe' === peek(tokens)) {\n      tokens.shift();\n      types = [\n        {\n          type: 'Undefined'\n        }, {\n          type: 'Null'\n        }\n      ];\n      typesSoFar = {\n        Undefined: true,\n        Null: true\n      };\n    }\n    for (;;) {\n      typeObj = consumeType(tokens), type = typeObj.type;\n      if (!typesSoFar[type]) {\n        types.push(typeObj);\n      }\n      typesSoFar[type] = true;\n      if (!maybeConsumeOp(tokens, '|')) {\n        break;\n      }\n    }\n    return types;\n  }\n  tokenRegex = RegExp('\\\\.\\\\.\\\\.|::|->|' + identifierRegex.source + '|\\\\S', 'g');\n  module.exports = function(input){\n    var tokens, e;\n    if (!input.length) {\n      throw new Error('No type specified.');\n    }\n    tokens = input.match(tokenRegex) || [];\n    if (in$('->', tokens)) {\n      throw new Error(\"Function types are not supported.\\ To validate that something is a function, you may use 'Function'.\");\n    }\n    try {\n      return consumeTypes(tokens);\n    } catch (e$) {\n      e = e$;\n      throw new Error(e.message + \" - Remaining tokens: \" + JSON.stringify(tokens) + \" - Initial input: '\" + input + \"'\");\n    }\n  };\n  function in$(x, xs){\n    var i = -1, l = xs.length >>> 0;\n    while (++i < l) if (x === xs[i]) return true;\n    return false;\n  }\n}).call(this);\n"]}