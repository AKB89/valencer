{"version":3,"sources":["check.js"],"names":[],"mappings":"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","file":"check-compiled.js","sourcesContent":["// Generated by LiveScript 1.4.0\n(function(){\n  var ref$, any, all, isItNaN, types, defaultType, customTypes, toString$ = {}.toString;\n  ref$ = require('prelude-ls'), any = ref$.any, all = ref$.all, isItNaN = ref$.isItNaN;\n  types = {\n    Number: {\n      typeOf: 'Number',\n      validate: function(it){\n        return !isItNaN(it);\n      }\n    },\n    NaN: {\n      typeOf: 'Number',\n      validate: isItNaN\n    },\n    Int: {\n      typeOf: 'Number',\n      validate: function(it){\n        return !isItNaN(it) && it % 1 === 0;\n      }\n    },\n    Float: {\n      typeOf: 'Number',\n      validate: function(it){\n        return !isItNaN(it);\n      }\n    },\n    Date: {\n      typeOf: 'Date',\n      validate: function(it){\n        return !isItNaN(it.getTime());\n      }\n    }\n  };\n  defaultType = {\n    array: 'Array',\n    tuple: 'Array'\n  };\n  function checkArray(input, type){\n    return all(function(it){\n      return checkMultiple(it, type.of);\n    }, input);\n  }\n  function checkTuple(input, type){\n    var i, i$, ref$, len$, types;\n    i = 0;\n    for (i$ = 0, len$ = (ref$ = type.of).length; i$ < len$; ++i$) {\n      types = ref$[i$];\n      if (!checkMultiple(input[i], types)) {\n        return false;\n      }\n      i++;\n    }\n    return input.length <= i;\n  }\n  function checkFields(input, type){\n    var inputKeys, numInputKeys, k, numOfKeys, key, ref$, types;\n    inputKeys = {};\n    numInputKeys = 0;\n    for (k in input) {\n      inputKeys[k] = true;\n      numInputKeys++;\n    }\n    numOfKeys = 0;\n    for (key in ref$ = type.of) {\n      types = ref$[key];\n      if (!checkMultiple(input[key], types)) {\n        return false;\n      }\n      if (inputKeys[key]) {\n        numOfKeys++;\n      }\n    }\n    return type.subset || numInputKeys === numOfKeys;\n  }\n  function checkStructure(input, type){\n    if (!(input instanceof Object)) {\n      return false;\n    }\n    switch (type.structure) {\n    case 'fields':\n      return checkFields(input, type);\n    case 'array':\n      return checkArray(input, type);\n    case 'tuple':\n      return checkTuple(input, type);\n    }\n  }\n  function check(input, typeObj){\n    var type, structure, setting, that;\n    type = typeObj.type, structure = typeObj.structure;\n    if (type) {\n      if (type === '*') {\n        return true;\n      }\n      setting = customTypes[type] || types[type];\n      if (setting) {\n        return setting.typeOf === toString$.call(input).slice(8, -1) && setting.validate(input);\n      } else {\n        return type === toString$.call(input).slice(8, -1) && (!structure || checkStructure(input, typeObj));\n      }\n    } else if (structure) {\n      if (that = defaultType[structure]) {\n        if (that !== toString$.call(input).slice(8, -1)) {\n          return false;\n        }\n      }\n      return checkStructure(input, typeObj);\n    } else {\n      throw new Error(\"No type defined. Input: \" + input + \".\");\n    }\n  }\n  function checkMultiple(input, types){\n    if (toString$.call(types).slice(8, -1) !== 'Array') {\n      throw new Error(\"Types must be in an array. Input: \" + input + \".\");\n    }\n    return any(function(it){\n      return check(input, it);\n    }, types);\n  }\n  module.exports = function(parsedType, input, options){\n    options == null && (options = {});\n    customTypes = options.customTypes || {};\n    return checkMultiple(input, parsedType);\n  };\n}).call(this);\n"]}